var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/AbstractCompatProxy.html",[0,0.203,1,2.683]],["body/classes/AbstractCompatProxy.html",[0,0.297,1,3.913,2,0.188,3,0.188,4,0.145,5,4.199,6,0.085,7,0.635,8,3.954,9,3.755,10,4.663,11,3.913,12,3.913,13,0.712,14,4.199,15,0.634,16,0.017,17,3.913,18,0.352,19,4.663,20,1.148,21,4.199,22,0.712,23,0.635,24,0.18,25,0.366,26,1.095,27,1.58,28,1.975,29,3.913,30,4.199,31,4.048,32,0.374,33,1.564,34,1.564,35,0.188,36,4.199,37,1.261,38,4.199,39,4.199,40,4.199,41,1.249,42,4.199,43,2.96,44,4.012,45,6.617,46,4.199,47,3.157,48,7.069,49,6.219,50,5.551,51,4.199,52,3.151,53,2.274,54,5.11,55,4.199,56,6.617,57,4.199,58,4.199,59,4.199,60,1.807,61,4.199,62,4.199,63,1.305,64,0.012,65,0.012]],["title/classes/AbstractJwtStrategy.html",[0,0.203,66,2.683]],["body/classes/AbstractJwtStrategy.html",[0,0.249,2,0.145,3,0.145,4,0.113,6,0.066,7,0.533,8,3.881,9,3.906,13,0.845,15,0.598,16,0.017,18,0.371,20,0.564,22,0.787,23,0.787,24,0.18,25,0.507,26,1.213,27,1.111,32,0.56,35,0.145,37,0.62,63,1.011,64,0.01,65,0.01,66,3.281,67,3.252,68,2.594,69,5.743,70,0.808,71,1.943,72,3.832,73,1.065,74,4.199,75,4.606,76,2.529,77,4.016,78,4.584,79,0.748,80,3.281,81,3.595,82,4.199,83,3.832,84,3.595,85,4.199,86,3.595,87,0.649,88,2.806,89,3.96,90,3.565,91,3.252,92,1.868,93,4.683,94,3.252,95,3.252,96,3.252,97,4.016,98,3.593,99,2.686,100,3.252,101,2.324,102,4.199,103,3.252,104,2.292,105,2.135,106,2.461,107,3.252,108,1.639,109,2.117,110,2.117,111,2.292,112,2.292,113,2.512,114,2.512,115,0.886,116,2.512,117,3.252,118,3.252,119,3.252,120,1.552,121,3.252,122,2.117,123,1.332,124,2.512,125,3.252,126,2.292,127,3.252,128,2.512,129,3.252,130,2.292,131,3.252,132,3.03,133,1.552,134,3.252,135,1.552,136,3.252,137,3.252,138,3.252,139,3.252]],["title/classes/AbstractStrategy.html",[0,0.203,69,2.94]],["body/classes/AbstractStrategy.html",[0,0.196,2,0.201,3,0.106,4,0.082,6,0.048,7,0.42,8,3.434,9,3.44,13,0.778,15,0.595,16,0.018,18,0.381,20,0.638,22,0.665,23,0.665,24,0.161,25,0.472,26,0.958,27,0.877,28,1.307,32,0.558,33,0.882,34,0.882,35,0.106,37,1.107,41,1.508,52,2.086,60,2.5,63,1.142,64,0.011,65,0.011,66,3.87,68,2.42,69,2.838,70,0.638,71,1.913,72,3.575,73,1.054,74,3.918,75,4.533,76,2.156,78,2.838,79,0.736,80,2.59,81,3.918,82,3.918,83,3.575,84,2.838,85,3.918,86,2.838,87,0.473,90,3.651,92,1.633,99,2.417,101,1.804,102,2.838,104,2.59,105,2.31,106,2.912,108,1.852,109,3.574,110,3.781,111,2.59,112,2.59,113,2.838,114,2.838,115,1.226,116,2.838,120,2.148,122,2.93,123,1.844,124,2.838,126,2.59,128,2.838,132,2.93,135,1.13,140,2.369,141,2.227,142,3.302,143,3.675,144,3.918,145,3.918,146,3.675,147,3.17,148,3.17,149,2.044,150,3.17,151,3.675,152,3.675,153,1.962,154,2.59,155,3.918,156,2.369,157,2.369,158,2.369,159,2.369,160,2.369,161,2.369,162,2.369,163,2.369,164,2.369,165,2.369,166,0.925,167,1.072,168,2.227,169,1.436,170,1.844,171,2.392,172,1.83,173,1.542,174,1.019,175,2.369,176,5.49,177,2.369,178,2.369,179,2.369,180,2.369,181,2.369,182,2.369,183,0.736,184,2.369,185,2.369,186,2.044,187,2.369,188,2.044,189,2.369,190,2.369,191,1.83,192,2.369,193,3.675,194,3.675,195,2.369,196,2.369,197,2.369,198,2.369,199,2.767,200,3.477,201,2.369,202,2.369,203,2.392,204,2.838,205,2.369,206,2.369,207,1.844,208,2.369,209,2.369,210,2.369,211,2.369,212,2.369,213,2.369,214,2.369,215,2.369,216,1.265,217,2.369,218,2.369,219,1.265,220,1.344,221,1.67,222,2.369,223,2.369,224,2.369,225,2.369,226,3.675,227,2.369,228,3.675,229,3.675,230,2.369,231,2.369,232,1.753,233,2.044,234,2.369,235,2.59,236,3.675,237,2.369]],["title/classes/AjvInstance.html",[0,0.203,238,2.683]],["body/classes/AjvInstance.html",[0,0.296,2,0.187,3,0.187,4,0.145,6,0.085,7,0.634,13,0.786,15,0.571,16,0.017,18,0.209,24,0.138,27,1.578,28,1.489,32,0.373,35,0.187,41,1.647,47,1.997,63,1.722,64,0.012,65,0.012,70,0.961,73,1.129,79,0.479,87,1.239,115,1.8,199,2.792,232,1.997,238,3.904,239,4.186,240,1.38,241,5.077,242,6.608,243,4.005,244,4.658,245,4.186,246,4.795,247,4.186,248,4.186,249,4.186,250,4.186,251,6.209,252,4.186,253,4.186,254,4.186,255,4.186,256,4.186,257,4.186,258,4.186,259,4.186,260,4.186,261,4.186,262,4.186,263,4.186,264,4.186,265,4.186,266,3.611,267,4.186,268,4.186,269,4.186,270,2.958,271,4.186,272,3.606,273,3.904,274,3.904,275,3.606,276,4.186,277,4.186,278,4.186,279,4.186,280,1.191,281,4.186,282,4.186,283,4.186,284,4.186,285,4.186,286,4.186,287,4.186,288,4.186,289,4.186,290,4.186,291,5.54,292,5.54,293,4.186,294,4.186,295,4.186,296,4.186,297,4.186,298,3.611,299,3.611,300,3.611,301,3.611,302,4.186,303,4.186,304,4.186,305,4.186]],["title/classes/AjvValidationResolver.html",[0,0.203,306,2.683]],["body/classes/AjvValidationResolver.html",[0,0.214,2,0.119,3,0.119,4,0.092,6,0.054,7,0.459,13,0.661,15,0.593,16,0.018,18,0.361,20,0.461,22,0.807,23,0.807,24,0.181,25,0.355,26,0.692,32,0.542,35,0.119,37,1.267,60,1.726,64,0.009,65,0.009,72,1.872,73,1.031,79,0.304,87,0.964,92,1.193,99,2.244,105,0.903,108,1.339,115,1.092,153,2.58,154,1.872,168,2.431,169,1.609,170,1.088,173,1.729,183,1.673,199,1.339,235,2.827,240,1.269,270,2.141,272,1.729,275,2.611,280,1.892,306,2.827,307,2.656,308,4.011,309,4.011,310,4.011,311,4.011,312,2.656,313,4.011,314,3.846,315,3.683,316,3.094,317,2.656,318,2.291,319,4.011,320,3.469,321,2.656,322,2.141,323,4.011,324,2.656,325,4.833,326,4.011,327,5.244,328,2.656,329,2.827,330,1.872,331,1.872,332,1.872,333,2.656,334,1.872,335,2.431,336,1.729,337,1.872,338,2.611,339,3.406,340,2.656,341,5.384,342,5.384,343,3.145,344,2.656,345,2.656,346,2.656,347,2.656,348,2.656,349,2.656,350,4.011,351,1.339,352,1.339,353,2.656,354,2.656,355,2.051,356,2.656,357,1.418,358,2.656,359,2.656,360,2.656,361,4.011,362,2.656,363,2.656,364,2.656,365,4.011,366,2.051,367,2.656,368,4.011,369,2.656,370,4.011,371,2.656,372,2.656,373,2.291,374,2.656,375,2.656,376,2.656,377,2.051,378,2.291,379,2.656,380,2.656,381,2.656,382,2.656,383,4.645,384,2.656,385,5.736,386,2.291,387,2.656,388,5.444,389,1.729,390,2.291,391,4.593,392,2.051,393,2.827,394,2.291,395,4.579,396,2.051,397,0.692,398,2.291,399,2.051,400,1.507,401,1.729,402,2.291,403,2.051,404,1.507,405,2.291,406,2.291,407,1.872,408,2.291,409,2.291,410,2.051,411,2.291,412,2.051,413,2.291,414,1.507,415,2.291,416,2.051,417,1.202,418,1.872,419,2.656,420,2.051,421,1.872,422,2.291,423,2.051,424,1.202,425,2.291,426,2.051,427,1.609,428,2.291,429,2.051,430,1.339,431,2.291,432,1.872,433,2.656,434,2.291]],["title/classes/ApplicationCompat.html",[0,0.203,435,3.284]],["body/classes/ApplicationCompat.html",[0,0.28,2,0.172,3,0.172,4,0.134,6,0.078,7,0.6,8,3.834,9,2.977,10,4.861,11,3.696,12,3.696,13,0.857,15,0.623,16,0.017,17,2.719,18,0.319,19,3.696,20,0.91,22,0.833,23,0.842,24,0.189,25,0.474,26,1.006,27,1.422,28,1.372,29,2.719,31,3.414,32,0.467,35,0.172,41,1.56,63,1.199,64,0.011,65,0.011,68,2.502,70,0.91,73,0.958,79,0.789,93,4.791,240,1.339,243,3.875,435,4.525,436,3.858,437,5.821,438,4.2,439,4.2,440,4.938,441,4.051,442,4.602,443,3.858,444,3.696,445,3.858,446,5.141,447,4.836,448,3.858,449,5.516,450,5.141,451,3.858,452,2.98,453,3.858,454,3.858,455,3.858,456,3.858,457,3.328,458,3.858,459,3.858,460,3.858,461,3.858,462,3.858,463,5.245]],["title/interfaces/AuthenticationConfig.html",[464,0.435,465,2.94]],["body/interfaces/AuthenticationConfig.html",[2,0.237,3,0.237,4,0.184,6,0.108,16,0.017,18,0.382,24,0.187,25,0.506,32,0.473,35,0.237,64,0.014,65,0.014,70,1.118,106,3.264,110,4.694,142,4.694,144,4.102,145,4.102,464,0.737,465,4.976,466,5.311,467,6.221,468,7.211,469,3.904,470,4.582,471,3.743]],["title/classes/AuthenticationController.html",[0,0.203,472,2.94]],["body/classes/AuthenticationController.html",[0,0.294,2,0.185,3,0.185,4,0.143,6,0.084,7,0.629,13,0.752,15,0.569,16,0.017,18,0.387,22,0.752,23,0.752,24,0.164,25,0.434,32,0.61,35,0.185,64,0.012,65,0.012,76,2.626,79,0.845,87,0.825,101,2.503,133,1.972,155,3.192,166,1.614,167,1.871,183,2.044,191,4.765,417,3.186,472,4.242,473,4.133,474,6.17,475,5.493,476,4.133,477,4.96,478,4.133,479,4.133,480,5.335,481,4.016,482,4.133,483,4.133,484,4.133,485,5.493,486,5.493,487,4.133,488,3.566,489,4.242,490,5.493,491,5.493,492,4.133,493,3.192,494,2.69,495,4.133,496,2.69,497,4.133,498,5.673,499,5.673,500,4.133,501,4.133,502,4.133,503,4.133,504,6.17,505,4.133,506,4.133,507,4.133,508,4.133,509,4.133,510,4.133,511,4.133]],["title/interfaces/AuthenticationResult.html",[132,2.477,464,0.435]],["body/interfaces/AuthenticationResult.html",[2,0.26,3,0.26,4,0.202,6,0.118,16,0.017,24,0.17,25,0.449,35,0.26,64,0.015,65,0.015,70,1.181,98,3.968,132,4.429,207,3.044,464,0.779,512,5.82]],["title/classes/AuthenticationService.html",[0,0.203,477,2.683]],["body/classes/AuthenticationService.html",[0,0.269,2,0.162,3,0.162,4,0.126,6,0.073,7,0.575,13,0.713,15,0.563,16,0.017,18,0.382,22,0.713,23,0.713,24,0.155,25,0.411,32,0.583,33,1.351,34,1.351,35,0.162,37,1.1,41,1.716,64,0.011,65,0.011,73,0.543,76,2.555,79,0.822,87,0.724,88,3.129,89,4.102,101,2.408,108,2.534,123,2.059,133,1.731,135,3.23,155,4.456,166,1.416,167,1.642,173,3.272,174,1.561,183,1.563,186,3.129,191,3.883,207,3.058,216,3.08,219,3.08,220,3.275,221,4.066,316,1.561,417,3.142,418,2.556,464,0.415,477,3.543,480,5.126,488,4.337,494,3.755,513,3.627,514,4.987,515,3.627,516,5.027,517,3.627,518,5.027,519,3.627,520,3.627,521,3.627,522,5.374,523,3.129,524,3.129,525,3.129,526,2.556,527,3.627,528,2.801,529,5.77,530,5.027,531,5.027,532,3.706,533,4.978,534,5.027,535,2.684,536,3.627,537,2.801,538,3.627,539,3.627,540,3.627,541,5.027,542,3.627,543,3.627,544,3.627,545,3.129,546,3.627,547,3.627]],["title/classes/BaseEncryptedDocument.html",[0,0.203,548,3.284]],["body/classes/BaseEncryptedDocument.html",[0,0.223,2,0.125,3,0.125,4,0.097,6,0.101,7,0.755,8,3.808,13,0.772,15,0.603,16,0.017,18,0.347,20,0.486,22,0.633,23,0.677,24,0.16,25,0.365,27,1.639,32,0.527,35,0.125,37,1.309,44,3.746,63,1.297,64,0.014,65,0.009,68,1.992,70,1.115,73,0.929,76,2.206,79,0.677,101,2.103,115,1.689,135,1.992,147,2.417,153,3.157,170,1.71,171,2.717,174,2.668,207,1.71,240,1.169,266,3.601,329,2.942,330,1.974,331,1.974,377,3.224,397,0.73,430,1.412,439,3.517,481,4.391,526,1.974,548,4.771,549,2.801,550,4.271,551,5.53,552,4.912,553,4.174,554,3.601,555,5.53,556,4.174,557,5.53,558,5.53,559,5.53,560,5.914,561,4.174,562,2.104,563,2.801,564,2.801,565,4.174,566,6.423,567,5.383,568,5.914,569,2.801,570,3.601,571,2.801,572,4.174,573,3.601,574,3.224,575,4.174,576,4.174,577,4.174,578,4.271,579,2.942,580,6.969,581,2.801,582,4.174,583,2.801,584,4.271,585,5.914,586,4.174,587,4.174,588,4.174,589,4.174,590,3.849,591,4.99,592,4.99,593,3.854,594,5.53,595,4.174,596,2.801,597,4.174,598,2.801,599,2.801,600,1.974,601,2.417,602,3.224,603,2.801,604,2.801,605,4.174,606,2.801,607,2.801,608,2.801,609,2.417,610,2.801,611,2.801,612,2.801,613,2.801,614,2.801,615,4.174,616,2.801,617,2.801,618,2.801,619,2.801,620,2.801,621,2.801,622,2.417,623,2.801,624,4.174,625,2.801,626,2.801,627,2.801]],["title/classes/Configuration.html",[0,0.203,166,1.486]],["body/classes/Configuration.html",[0,0.215,2,0.18,3,0.119,4,0.168,6,0.054,7,0.46,13,0.788,15,0.622,16,0.018,18,0.381,20,1.128,22,0.696,23,0.799,24,0.162,25,0.402,26,1.406,27,1.667,28,1.918,32,0.481,33,0.992,34,0.992,35,0.119,37,1.313,44,2.282,47,2.573,63,1.799,64,0.009,65,0.009,70,0.698,73,1.046,79,0.723,106,1.206,115,1.319,166,2.105,183,0.828,216,1.422,219,1.422,220,1.512,221,1.878,232,1.271,240,1.402,244,3.801,397,1.509,452,3.105,535,1.422,562,2.718,628,2.664,629,3.701,630,5.392,631,4.02,632,4.02,633,5.392,634,4.02,635,4.02,636,4.02,637,5.392,638,2.664,639,2.664,640,7.298,641,2.664,642,4.02,643,5.392,644,2.664,645,4.02,646,2.664,647,2.664,648,4.02,649,2.664,650,4.02,651,1.497,652,2.664,653,4.02,654,2.664,655,2.664,656,2.664,657,3.105,658,3.468,659,6.655,660,5.788,661,4.02,662,2.664,663,2.664,664,2.664,665,2.664,666,2.298,667,2.664,668,2.664,669,4.02,670,2.664,671,4.842,672,2.664,673,4.02,674,2.664,675,2.664,676,2.664,677,2.058,678,3.105,679,2.664,680,2.058,681,2.664,682,4.02,683,4.02,684,2.664,685,2.664,686,2.664,687,2.664,688,2.664,689,4.177,690,4.842,691,2.664,692,2.664,693,2.664,694,2.664,695,2.298,696,4.02,697,4.842,698,2.664,699,2.298,700,2.664,701,2.664,702,2.664,703,2.664,704,2.664,705,2.617,706,4.02,707,2.833,708,2.664,709,2.664,710,2.664,711,2.664]],["title/classes/DataType.html",[0,0.203,712,2.94]],["body/classes/DataType.html",[0,0.23,2,0.131,3,0.131,4,0.101,6,0.059,7,0.493,13,0.815,15,0.648,16,0.018,18,0.282,20,1.329,22,0.815,23,0.815,24,0.182,25,0.47,27,1.823,28,1.04,35,0.193,52,3.696,53,2.096,64,0.009,65,0.009,79,0.815,90,2.904,123,1.198,183,1.59,216,1.561,219,1.561,220,1.659,240,1.419,397,1.123,562,2.846,651,2.242,666,2.523,712,3.328,713,2.523,714,4.309,715,4.309,716,2.805,717,3.328,718,3.718,719,4.309,720,4.309,721,4.309,722,4.309,723,4.309,724,4.309,725,4.309,726,4.309,727,2.924,728,4.309,729,2.924,730,4.309,731,2.924,732,4.309,733,2.924,734,4.309,735,2.924,736,4.309,737,2.924,738,4.309,739,2.924,740,4.309,741,2.924,742,4.309,743,2.924,744,4.309,745,2.924,746,4.309,747,2.924,748,4.309,749,2.924,750,1.772,751,3.328,752,2.579,753,3.718,754,3.718,755,4.309,756,2.924,757,2.924,758,2.924,759,4.309,760,2.924,761,2.924,762,2.924,763,4.309,764,2.924,765,4.309,766,2.924,767,2.924,768,2.924,769,4.309,770,2.924,771,4.309,772,2.924,773,2.924,774,2.924,775,4.309,776,2.924,777,2.924,778,2.924,779,4.361,780,2.924,781,2.924,782,4.309]],["title/classes/DefaultJwtService.html",[0,0.203,783,2.94]],["body/classes/DefaultJwtService.html",[0,0.181,2,0.095,3,0.095,4,0.074,6,0.043,7,0.387,13,0.73,15,0.588,16,0.018,18,0.376,20,1.195,22,0.692,23,0.712,24,0.162,25,0.449,26,1.362,27,1.391,32,0.466,33,0.795,34,0.795,35,0.095,37,1.111,41,1.425,44,2.389,63,1.811,64,0.007,65,0.007,70,0.73,71,1.653,73,1.007,75,1.504,76,2.496,79,0.769,87,0.426,89,2.903,92,1.554,98,3.926,99,0.759,101,2.315,123,0.874,130,1.504,133,1.018,135,2.008,141,2.052,150,1.841,153,1.14,154,2.387,171,1.389,174,2.248,183,0.663,200,3.7,207,1.387,232,1.018,240,1.06,270,1.14,280,0.607,351,2.937,352,2.937,397,1.249,424,2.365,441,1.648,464,0.244,525,1.841,526,1.504,528,1.648,532,2.789,535,2.247,552,2.387,562,2.121,579,1.504,651,0.795,695,2.921,752,1.707,783,2.615,784,2.134,785,4.791,786,4.791,787,2.921,788,2.921,789,2.921,790,3.386,791,3.386,792,3.386,793,2.921,794,2.134,795,4.791,796,4.5,797,2.134,798,4.209,799,3.251,800,2.134,801,5.503,802,4.209,803,4.791,804,3.386,805,4.791,806,3.386,807,3.386,808,3.386,809,3.386,810,3.251,811,2.134,812,2.921,813,3.377,814,3.631,815,4.152,816,2.134,817,3.251,818,2.921,819,5.371,820,2.134,821,3.631,822,2.921,823,2.134,824,3.619,825,3.386,826,2.134,827,4.209,828,2.134,829,2.134,830,3.386,831,2.134,832,2.921,833,2.134,834,4.209,835,3.251,836,1.648,837,2.134,838,2.134,839,1.841,840,5.827,841,2.134,842,2.134,843,2.134,844,2.134,845,2.134,846,3.386,847,4.209,848,2.921,849,3.386,850,3.386,851,3.386,852,2.615,853,3.386,854,2.134,855,3.386,856,2.134,857,2.134,858,2.134,859,2.134,860,2.134,861,1.648,862,2.134,863,2.134,864,2.134,865,2.134,866,2.134,867,2.134,868,2.134,869,2.134,870,2.134,871,2.134,872,2.134,873,2.134,874,2.134,875,2.134,876,2.134,877,3.7,878,2.134,879,2.134,880,2.134,881,2.921,882,5.224,883,2.134,884,3.386,885,2.134,886,3.386,887,3.386,888,3.386,889,2.134,890,3.386,891,3.386,892,2.134,893,2.134,894,2.134,895,2.134,896,2.134,897,2.134,898,2.134,899,2.134,900,3.386,901,2.134,902,2.134,903,2.134,904,2.134,905,1.648,906,2.134,907,2.134,908,2.134,909,2.134,910,2.134,911,2.134,912,2.134,913,2.134,914,2.134,915,2.134,916,2.134,917,2.134,918,2.134,919,2.134,920,2.134,921,2.134,922,2.134,923,2.134,924,3.386,925,3.386,926,2.134,927,2.134,928,2.134,929,2.134,930,2.134]],["title/classes/EMailService.html",[0,0.203,514,2.683]],["body/classes/EMailService.html",[0,0.23,2,0.131,3,0.131,4,0.101,6,0.059,7,0.493,13,0.765,15,0.541,16,0.017,18,0.393,20,0.888,22,0.721,23,0.765,24,0.167,25,0.416,26,1.334,27,1.222,28,2.24,32,0.456,33,1.089,34,1.089,35,0.131,37,1.148,41,0.869,47,1.395,63,1.59,64,0.009,65,0.009,70,0.748,71,1.522,73,1.103,76,2.427,79,0.721,87,0.584,92,1.873,101,2.24,112,3.037,133,1.395,135,1.395,149,2.523,170,2.096,207,1.198,216,1.561,219,1.561,220,1.659,221,2.061,240,0.931,343,3.675,417,2.851,418,3.037,467,3.718,514,3.037,532,1.561,677,2.258,861,5.603,931,2.924,932,4.871,933,4.516,934,4.309,935,4.309,936,4.309,937,4.309,938,4.309,939,2.924,940,4.871,941,5.246,942,4.309,943,4.309,944,3.328,945,4.309,946,4.309,947,4.649,948,5.194,949,4.649,950,5.194,951,3.331,952,3.328,953,3.328,954,3.328,955,2.924,956,4.309,957,5.646,958,2.924,959,2.924,960,4.309,961,2.924,962,4.309,963,2.924,964,5.117,965,4.309,966,6.298,967,2.924,968,5.117,969,4.309,970,2.924,971,4.415,972,4.309,973,4.309,974,2.523,975,2.924,976,2.924,977,2.924,978,4.309,979,4.309,980,2.924,981,2.924,982,4.309,983,4.309,984,4.309,985,4.309,986,4.309,987,2.924,988,2.924,989,2.924,990,2.924,991,2.924,992,2.523,993,2.924,994,2.924]],["title/classes/EmailConfirmation.html",[0,0.203,995,3.284]],["body/classes/EmailConfirmation.html",[0,0.341,2,0.234,3,0.234,4,0.181,6,0.106,13,0.788,16,0.017,18,0.343,20,1.195,24,0.172,25,0.494,32,0.466,35,0.234,64,0.014,65,0.014,70,1.107,73,1.154,439,5.338,481,4.482,550,4.036,752,3.471,995,5.504,996,5.226,997,7.171,998,7.171,999,7.171,1000,5.226,1001,5.226,1002,5.226]],["title/classes/EncryptedMongoDbHelper.html",[0,0.203,602,2.94]],["body/classes/EncryptedMongoDbHelper.html",[0,0.323,2,0.214,3,0.214,4,0.166,6,0.097,7,0.692,13,0.796,15,0.596,16,0.017,22,0.548,23,0.548,24,0.12,25,0.316,32,0.539,35,0.214,53,2.477,64,0.013,65,0.013,73,0.906,76,2.356,79,0.758,87,1.322,101,2.151,115,1.647,166,1.871,167,2.17,199,3.506,240,1.381,567,3.702,584,3.702,590,3.12,602,4.67,1003,4.794,1004,6.956,1005,6.956,1006,6.047,1007,4.794,1008,4.794,1009,4.794,1010,6.047,1011,4.794,1012,6.047,1013,4.794,1014,4.794,1015,4.136,1016,4.794,1017,4.794,1018,4.794,1019,4.794,1020,4.794,1021,4.794,1022,4.794]],["title/interfaces/Endpoint.html",[464,0.435,1023,2.94]],["body/interfaces/Endpoint.html",[2,0.238,3,0.238,4,0.184,6,0.15,16,0.017,18,0.385,20,1.205,24,0.184,25,0.496,32,0.474,35,0.238,64,0.014,65,0.014,70,1.12,106,3.267,464,0.738,1023,4.982,1024,5.322,1025,5.573,1026,6.226,1027,7.216,1028,6.226,1029,4.591]],["title/classes/ExpressValidationResolver.html",[0,0.203,1030,3.284]],["body/classes/ExpressValidationResolver.html",[0,0.253,2,0.149,3,0.149,4,0.116,6,0.068,7,0.542,13,0.631,15,0.586,16,0.018,18,0.356,20,0.579,22,0.793,23,0.827,24,0.186,25,0.313,26,0.869,32,0.587,35,0.149,37,1.051,64,0.01,65,0.01,73,0.95,79,0.382,87,1.1,92,1.409,105,1.874,108,1.681,120,3.234,153,2.531,154,2.351,240,1.199,280,1.971,314,3.847,316,3.212,318,2.877,320,3.205,322,1.781,327,6.353,334,2.351,335,2.872,337,2.351,338,3.085,366,2.576,377,2.576,378,2.877,385,6.167,386,2.877,388,5.848,389,2.171,390,2.877,391,4.793,392,2.576,393,3.34,394,2.877,395,4.968,396,2.576,397,0.869,398,2.877,399,2.576,400,1.893,401,2.171,402,2.877,403,2.576,404,1.893,405,2.877,406,2.877,407,2.351,408,2.877,409,2.877,410,2.576,411,2.877,412,2.576,413,2.877,414,1.893,415,2.877,416,2.576,417,1.51,418,2.351,420,2.576,421,2.351,422,2.877,423,2.576,424,1.51,425,2.877,426,2.576,427,2.021,428,2.877,429,2.576,430,1.681,431,2.877,434,2.877,839,2.877,1030,4.089,1031,3.335,1032,4.74,1033,4.74,1034,3.335,1035,4.74,1036,3.335,1037,4.74,1038,3.335,1039,2.877,1040,3.335,1041,3.335,1042,3.341,1043,4.74,1044,3.335,1045,3.335,1046,3.335,1047,3.335,1048,3.335,1049,3.335,1050,3.335,1051,2.576,1052,3.335,1053,3.335]],["title/interfaces/InternalServer.html",[464,0.435,1054,3.284]],["body/interfaces/InternalServer.html",[2,0.256,3,0.256,4,0.199,6,0.116,16,0.017,18,0.286,24,0.168,32,0.511,35,0.256,53,2.762,64,0.015,65,0.015,70,1.17,115,1.561,174,3.182,464,0.771,1054,5.817,1055,5.731,1056,5.712,1057,5.731]],["title/interfaces/JwtService.html",[89,2.307,464,0.435]],["body/interfaces/JwtService.html",[2,0.204,3,0.204,4,0.158,6,0.092,7,0.67,13,0.781,15,0.568,16,0.017,18,0.375,20,1.306,22,0.781,23,0.781,24,0.176,25,0.485,32,0.522,35,0.262,64,0.013,65,0.013,89,3.549,92,2.186,98,3.771,101,2.649,130,3.213,351,3.262,352,3.262,424,3.091,464,0.67,651,1.698,787,5.053,788,5.053,789,5.053,793,5.053,801,5.892,812,5.053,813,4.561,814,5.583,815,4.212,817,3.521,818,5.053,819,6.237,821,3.933,822,5.053,824,2.967,832,5.053,836,3.521,1058,3.933,1059,4.559,1060,4.559,1061,4.559,1062,4.559]],["title/classes/LocalJwtStrategy.html",[0,0.203,1063,2.94]],["body/classes/LocalJwtStrategy.html",[0,0.237,2,0.136,3,0.136,4,0.105,6,0.062,7,0.508,8,3.954,9,3.625,13,0.847,15,0.607,16,0.017,18,0.371,20,0.528,22,0.773,23,0.773,24,0.179,25,0.503,26,1.365,27,1.25,32,0.569,33,1.134,34,1.134,35,0.136,37,0.846,41,0.905,47,1.452,64,0.01,65,0.01,66,5.249,68,2.499,70,0.77,71,2.05,72,3.691,73,1.049,74,4.045,75,3.691,76,2.524,77,4.965,78,4.445,79,0.755,80,3.127,81,3.427,82,4.045,83,3.691,84,3.427,85,5.094,86,3.427,90,2.518,92,1.82,93,4.716,97,4.518,98,3.739,99,2.685,101,2.272,102,3.427,104,2.145,105,2.08,106,2.371,108,1.534,109,1.981,110,1.981,111,2.145,112,2.145,113,2.35,114,2.35,115,0.829,116,2.35,120,1.452,122,1.981,123,1.247,124,2.35,126,2.145,128,2.35,130,2.145,132,2.888,135,1.452,207,2.617,240,0.953,522,3.828,524,2.626,532,1.625,552,2.145,817,3.427,1063,3.427,1064,3.043,1065,5.755,1066,4.437,1067,3.043,1068,3.043,1069,3.043,1070,3.043,1071,3.043,1072,3.043,1073,3.043,1074,4.437,1075,3.043,1076,3.043,1077,3.043,1078,3.043,1079,3.043,1080,3.043,1081,3.043,1082,3.043,1083,3.043,1084,3.043,1085,3.043,1086,2.626,1087,3.043]],["title/classes/LogLevels.html",[0,0.203,1088,2.683]],["body/classes/LogLevels.html",[0,0.304,2,0.3,3,0.194,4,0.151,6,0.088,7,0.65,13,0.767,15,0.472,16,0.017,18,0.356,20,0.754,22,0.497,23,0.497,24,0.167,25,0.287,26,1.48,27,1.356,32,0.387,33,2.115,35,0.194,37,0.828,41,1.689,64,0.012,65,0.012,70,0.985,71,1.881,73,1.069,79,0.65,92,1.292,166,1.697,167,1.968,174,2.443,183,1.765,240,1.388,270,3.032,397,1.895,444,4.904,526,4.458,848,4.899,1088,5.124,1089,4.346,1090,7.373,1091,5.179,1092,5.678,1093,4.346,1094,5.786,1095,4.346,1096,4.386,1097,3.696,1098,4.899,1099,4.899,1100,5.678,1101,5.678,1102,5.678,1103,4.346,1104,5.678,1105,4.346,1106,6.324,1107,4.346,1108,4.346,1109,6.324,1110,4.346,1111,4.346]],["title/classes/LoggerWrapper.html",[0,0.203,1112,2.94]],["body/classes/LoggerWrapper.html",[0,0.264,2,0.276,3,0.123,4,0.096,6,0.056,7,0.472,13,0.805,15,0.602,16,0.018,18,0.364,20,0.716,22,0.472,23,0.472,24,0.16,25,0.272,26,1.076,27,0.986,28,0.982,32,0.61,33,1.538,35,0.123,37,1.218,41,1.632,52,1.566,53,1.13,54,4.239,63,0.858,64,0.009,65,0.009,70,0.716,71,1.834,73,1.137,79,0.769,87,0.987,92,0.821,106,1.869,115,1.124,166,1.077,167,1.249,168,2.997,169,1.672,174,1.188,183,1.283,203,2.687,204,3.188,240,1.335,243,3.326,244,1.945,270,1.474,316,1.188,339,2.91,469,1.672,629,1.391,651,1.028,707,1.945,933,4.278,1025,4.239,1088,2.91,1091,4.239,1097,1.796,1112,5.545,1113,2.132,1114,4.736,1115,4.736,1116,4.736,1117,5.07,1118,4.128,1119,4.736,1120,4.736,1121,4.128,1122,4.128,1123,2.76,1124,3.869,1125,2.76,1126,2.76,1127,2.76,1128,4.958,1129,2.76,1130,2.76,1131,3.562,1132,2.76,1133,2.76,1134,2.76,1135,5.07,1136,3.562,1137,5.515,1138,4.267,1139,2.76,1140,4.267,1141,2.381,1142,3.188,1143,3.326,1144,1.566,1145,3.573,1146,2.381,1147,2.132,1148,2.132,1149,1.945,1150,2.381,1151,2.381,1152,2.381,1153,2.381,1154,5.07,1155,4.267,1156,2.381,1157,3.486,1158,2.381,1159,2.381,1160,2.381,1161,2.381,1162,2.381,1163,2.381,1164,2.381,1165,2.381,1166,2.381,1167,2.381,1168,3.562,1169,2.381,1170,2.381,1171,2.381,1172,3.562,1173,2.381,1174,2.381,1175,2.381,1176,2.381,1177,2.381,1178,2.381,1179,2.381,1180,2.381,1181,1.672,1182,2.381,1183,2.381,1184,2.381,1185,2.381,1186,2.132,1187,2.381,1188,2.381,1189,2.132,1190,2.381,1191,2.381,1192,3.562,1193,3.562,1194,2.381,1195,2.381,1196,3.562,1197,2.381,1198,1.672,1199,2.381,1200,2.381,1201,2.381,1202,3.562,1203,2.381,1204,2.381]],["title/classes/MethodDecorator.html",[0,0.203,1205,2.94]],["body/classes/MethodDecorator.html",[0,0.233,2,0.133,3,0.133,4,0.103,6,0.06,7,0.592,13,0.694,15,0.545,16,0.017,18,0.386,22,0.652,23,0.652,24,0.158,25,0.499,26,1.348,27,1.234,32,0.599,33,1.109,34,1.109,35,0.195,37,1.307,41,1.299,47,2.718,60,2.891,64,0.01,65,0.01,73,1.058,76,1.553,79,0.341,87,1.032,92,0.885,99,2.479,105,1.012,115,1.408,120,3.024,123,1.789,183,0.925,199,1.501,240,1.3,272,1.938,273,2.098,274,2.098,275,1.938,280,1.472,306,2.098,320,3.964,322,3.66,357,1.59,397,1.138,464,0.341,469,1.804,489,2.299,562,2.201,1042,4.41,1198,1.804,1205,3.373,1206,2.569,1207,4.367,1208,4.367,1209,4.367,1210,3.767,1211,2.977,1212,3.767,1213,5.189,1214,6.012,1215,5.573,1216,2.977,1217,5.168,1218,3.767,1219,2.977,1220,3.994,1221,3.767,1222,2.977,1223,3.373,1224,2.977,1225,2.098,1226,2.299,1227,2.098,1228,3.767,1229,3.373,1230,3.078,1231,2.299,1232,1.804,1233,1.938,1234,2.569,1235,2.569,1236,2.569,1237,4.461,1238,3.373,1239,2.569,1240,3.373,1241,2.569,1242,2.569,1243,4.399,1244,3.767,1245,3.767,1246,3.767,1247,3.078,1248,2.569,1249,3.767,1250,3.767,1251,3.767,1252,3.767,1253,3.767,1254,2.569,1255,3.767,1256,2.569,1257,3.767,1258,2.569]],["title/classes/MongoDbHelper.html",[0,0.203,1259,3.284]],["body/classes/MongoDbHelper.html",[0,0.311,2,0.202,3,0.202,4,0.156,6,0.091,7,0.666,13,0.737,15,0.566,16,0.017,18,0.321,22,0.778,23,0.666,24,0.17,25,0.384,31,4.427,32,0.518,33,1.681,34,1.681,35,0.202,37,1.109,47,2.153,64,0.015,65,0.013,73,0.872,76,2.564,79,0.666,87,1.285,101,2.419,135,3.246,216,2.409,219,2.409,220,3.302,240,1.312,532,2.409,537,3.485,552,4.1,554,5.019,567,5.739,570,5.019,573,6.327,590,2.937,622,3.892,1086,5.019,1259,5.019,1260,4.512,1261,5.818,1262,4.512,1263,5.818,1264,7.334,1265,4.512,1266,5.555,1267,4.512,1268,4.512,1269,4.512,1270,4.512,1271,5.818,1272,4.512,1273,4.512,1274,4.512]],["title/classes/MongoDbStarter.html",[0,0.203,1275,2.94]],["body/classes/MongoDbStarter.html",[0,0.32,2,0.267,3,0.211,4,0.163,6,0.095,7,0.685,13,0.791,15,0.547,16,0.017,18,0.328,22,0.54,23,0.54,24,0.118,25,0.311,32,0.533,34,1.757,35,0.211,64,0.013,65,0.013,73,1.093,76,2.338,79,0.752,87,0.941,101,2.129,115,1.883,133,2.25,135,2.855,166,1.841,183,1.466,216,2.518,219,2.518,220,2.676,535,2.518,590,3.069,992,4.068,1015,4.068,1097,3.069,1275,4.622,1276,4.716,1277,5.966,1278,6.915,1279,5.03,1280,4.716,1281,4.716,1282,5.985,1283,4.716,1284,4.716,1285,4.716,1286,4.716,1287,4.716,1288,4.716,1289,4.716,1290,4.716,1291,4.068,1292,4.716,1293,4.716,1294,3.642,1295,5.077,1296,3.642,1297,3.642,1298,4.716,1299,4.716,1300,3.324,1301,4.716,1302,4.716]],["title/interfaces/ParamDescriptor.html",[335,2.307,464,0.435]],["body/interfaces/ParamDescriptor.html",[0,0.214,2,0.179,3,0.179,4,0.139,6,0.144,15,0.58,16,0.018,18,0.38,22,0.458,23,0.798,24,0.162,25,0.428,32,0.479,35,0.271,37,1.158,43,2.823,44,2.274,60,2.315,64,0.012,65,0.012,70,0.934,71,1.191,73,0.6,79,0.695,99,1.914,170,2.488,171,2.607,174,1.724,207,2.204,240,1.232,280,2.128,320,3.724,322,3.724,334,2.823,335,4.105,336,4.903,397,1.766,464,0.616,481,2.607,496,3.502,579,2.823,651,1.492,750,2.428,1042,2.428,1232,2.428,1233,2.607,1303,3.094,1304,3.792,1305,2.607,1306,4.641,1307,3.456,1308,4.155,1309,3.456,1310,3.456,1311,3.456,1312,3.456,1313,4.155,1314,4.691,1315,3.456,1316,5.24,1317,3.456,1318,3.456,1319,3.456,1320,3.456,1321,3.456,1322,3.456,1323,3.456,1324,3.456,1325,3.456,1326,3.456]],["title/classes/ParameterDecorator.html",[0,0.203,1305,2.477]],["body/classes/ParameterDecorator.html",[0,0.265,2,0.159,3,0.159,4,0.123,6,0.131,7,0.566,13,0.706,15,0.602,16,0.017,18,0.389,22,0.743,23,0.769,24,0.154,25,0.376,26,0.925,27,0.847,32,0.441,35,0.255,37,1.087,43,3.489,44,2.81,60,2.13,64,0.011,65,0.011,70,0.859,71,1.696,73,0.854,79,0.652,92,1.472,99,1.761,115,0.966,170,2.336,171,2.309,174,2.13,207,2.028,240,1.354,280,2.061,320,3.907,322,3.907,334,2.501,335,3.933,336,4.806,397,1.608,464,0.406,481,3.222,496,3.222,579,3.489,651,1.844,750,2.15,1042,2.15,1210,4.271,1232,2.15,1233,2.309,1303,2.74,1304,3.489,1305,3.222,1306,5.8,1307,4.271,1308,4.766,1309,3.061,1310,3.061,1311,3.061,1312,4.271,1313,3.824,1314,4.404,1315,3.061,1316,4.92,1317,4.271,1318,4.271,1319,4.271,1320,4.271,1321,4.271,1322,3.061,1323,4.271,1324,3.061,1325,3.061,1326,3.061,1327,4.951,1328,4.951,1329,3.548,1330,3.548,1331,3.548,1332,3.548]],["title/classes/ParameterResolver.html",[0,0.203,338,2.477]],["body/classes/ParameterResolver.html",[0,0.304,2,0.194,3,0.194,4,0.151,6,0.088,7,0.65,13,0.724,15,0.578,16,0.017,18,0.356,22,0.767,23,0.65,24,0.142,25,0.375,32,0.598,33,1.619,35,0.194,37,1.206,60,3.173,64,0.012,65,0.012,73,0.851,79,0.65,87,1.262,99,2.623,105,1.477,240,1.298,320,3.881,322,3.58,335,4.325,336,2.829,337,3.063,338,3.696,366,3.357,373,3.75,389,2.829,391,4.529,395,4.904,1042,2.634,1143,2.634,1305,2.829,1313,3.357,1314,4.386,1333,4.346,1334,5.678,1335,5.678,1336,4.346,1337,5.678,1338,4.346,1339,5.678,1340,4.346,1341,3.357,1342,4.346,1343,4.346,1344,4.346,1345,4.346,1346,6.958,1347,4.346,1348,4.346,1349,4.346,1350,4.346,1351,4.346,1352,4.346]],["title/interfaces/PassportStrategy.html",[142,2.477,464,0.435]],["body/interfaces/PassportStrategy.html",[2,0.236,3,0.236,4,0.183,6,0.107,7,0.734,13,0.734,15,0.534,16,0.017,18,0.345,22,0.604,23,0.604,24,0.132,25,0.348,32,0.616,35,0.236,64,0.014,65,0.014,68,2.519,80,4.524,83,5.072,92,1.57,104,4.524,105,2.58,106,3.131,109,4.178,115,1.748,122,4.502,123,2.629,142,4.178,169,3.199,357,2.818,464,0.734,1353,5.279,1354,5.279,1355,5.279,1356,5.279]],["title/classes/RequestHandler.html",[0,0.203,120,1.816]],["body/classes/RequestHandler.html",[0,0.197,2,0.106,3,0.106,4,0.082,6,0.048,7,0.517,13,0.695,15,0.595,16,0.018,18,0.359,20,1.163,22,0.737,23,0.666,24,0.157,25,0.363,26,0.961,27,1.389,28,2.07,32,0.574,33,0.886,34,0.886,35,0.106,37,1.228,44,3.446,47,1.135,52,2.562,53,0.975,60,2.772,63,1.95,64,0.011,65,0.008,73,1.109,76,1.606,79,0.517,87,0.475,90,1.351,92,0.708,99,2.291,101,1.312,105,1.534,108,1.199,115,1.653,120,1.76,133,1.135,135,1.135,148,3.181,170,0.975,183,2.002,199,1.199,200,3.927,216,1.969,219,1.271,232,1.135,235,2.599,272,1.549,273,1.677,274,1.677,275,1.549,280,0.677,298,2.053,299,2.053,300,2.053,301,2.053,320,2.411,322,1.969,329,2.599,330,1.677,331,1.677,337,1.677,338,2.4,389,1.549,391,2.4,397,1.797,401,2.939,424,1.669,471,4.102,494,2.939,532,1.969,533,2.053,535,1.271,545,2.053,629,1.199,651,1.374,699,3.181,705,2.4,712,1.838,718,4.387,751,1.838,752,1.199,779,2.848,944,1.838,1039,2.053,1097,1.549,1144,1.351,1186,3.487,1232,1.442,1233,1.549,1243,3.487,1291,2.053,1305,1.549,1357,2.38,1358,3.688,1359,5.085,1360,4.284,1361,3.688,1362,3.688,1363,5.085,1364,2.38,1365,4.515,1366,4.515,1367,4.515,1368,2.38,1369,3.688,1370,2.38,1371,2.38,1372,3.688,1373,2.38,1374,7.104,1375,3.688,1376,2.38,1377,3.688,1378,3.688,1379,2.38,1380,2.38,1381,2.38,1382,2.38,1383,2.38,1384,2.38,1385,4.515,1386,2.38,1387,2.38,1388,2.38,1389,2.38,1390,2.38,1391,2.38,1392,3.895,1393,2.38,1394,2.38,1395,2.38,1396,2.38,1397,2.38,1398,2.38,1399,2.38,1400,2.38,1401,3.181,1402,2.38,1403,2.38,1404,5.502,1405,2.38,1406,3.688,1407,2.38,1408,2.38,1409,3.688,1410,2.38,1411,2.38,1412,4.515,1413,2.38,1414,3.688,1415,2.38,1416,2.38,1417,2.38,1418,2.38,1419,2.38,1420,4.515,1421,3.688,1422,3.688,1423,2.38,1424,2.38,1425,2.38,1426,2.38,1427,3.688,1428,4.515,1429,2.38,1430,3.688,1431,2.38,1432,2.38,1433,2.38,1434,3.688,1435,5.085,1436,2.38,1437,2.38,1438,2.053,1439,2.38,1440,2.38,1441,2.053,1442,2.38,1443,2.38,1444,2.38,1445,2.38,1446,2.38,1447,2.38,1448,2.38,1449,2.38,1450,2.38,1451,2.38]],["title/interfaces/RequestOptions.html",[464,0.435,1215,2.94]],["body/interfaces/RequestOptions.html",[0,0.184,2,0.154,3,0.154,4,0.119,6,0.07,7,0.393,15,0.466,16,0.018,18,0.369,24,0.174,25,0.5,32,0.622,33,1.28,34,1.28,35,0.216,37,1.353,41,1.439,47,2.903,60,3.004,64,0.011,65,0.011,70,0.84,73,0.912,76,1.722,79,0.393,87,0.686,99,2.558,105,1.168,115,0.936,120,3.175,123,1.983,183,1.891,199,1.732,240,1.107,272,2.236,273,2.422,274,2.422,275,2.236,280,1.894,306,2.422,320,3.84,322,3.248,357,1.835,397,1.735,464,0.554,489,4.699,562,2.44,1042,4.143,1198,2.082,1205,2.654,1206,2.964,1212,2.964,1213,4.699,1214,5.249,1215,5.139,1217,5.002,1218,2.964,1220,3.739,1221,2.964,1223,2.654,1225,2.422,1226,2.654,1227,2.422,1228,5.249,1229,3.739,1230,3.412,1231,2.654,1232,2.082,1233,2.236,1234,2.964,1235,2.964,1236,2.964,1237,4.835,1238,3.739,1239,2.964,1240,3.739,1241,2.964,1242,2.964,1243,4.699,1244,4.176,1245,4.176,1246,4.176,1247,3.412,1248,2.964,1249,4.176,1250,4.176,1251,4.176,1252,4.176,1253,4.176,1254,2.964,1255,4.176,1256,2.964,1257,4.176,1258,2.964]],["title/classes/RequestUtil.html",[0,0.203,1341,2.94]],["body/classes/RequestUtil.html",[0,0.336,2,0.228,3,0.228,4,0.176,6,0.103,7,0.719,13,0.779,15,0.591,16,0.017,18,0.371,22,0.719,23,0.813,24,0.157,25,0.414,32,0.454,35,0.228,64,0.014,65,0.014,73,0.941,79,0.719,87,1.359,99,2.782,105,1.731,240,1.353,1341,4.85,1452,5.093,1453,6.28,1454,6.28,1455,5.093,1456,6.28,1457,5.093,1458,6.28,1459,5.093,1460,5.093,1461,5.093,1462,5.093]],["title/interfaces/RouteMethod.html",[464,0.435,1463,3.284]],["body/interfaces/RouteMethod.html",[0,0.137,2,0.175,3,0.115,4,0.089,6,0.052,7,0.735,15,0.473,16,0.018,18,0.32,24,0.15,25,0.312,26,0.668,32,0.587,34,0.955,35,0.175,37,1.391,41,0.763,43,4.64,47,2.523,53,2.166,60,2.449,64,0.008,65,0.008,70,0.678,71,1.693,73,1.037,79,0.781,87,0.512,99,2.024,105,1.327,111,4.812,115,1.859,120,1.224,166,1.001,167,1.161,168,2.367,169,1.554,188,3.37,203,2.542,232,2.257,235,2.753,240,1.355,280,1.505,339,1.807,357,1.369,389,1.669,391,4.285,395,4.64,397,1.563,444,1.807,447,3.442,464,0.447,471,1.807,493,1.981,494,1.669,593,1.981,600,1.807,601,2.213,629,1.293,707,1.807,779,1.981,1096,1.981,1144,1.455,1181,1.554,1213,1.981,1217,4.529,1220,4.085,1223,1.981,1225,1.807,1226,1.981,1227,1.807,1232,1.554,1238,4.085,1240,4.085,1247,3.334,1300,1.807,1401,3.37,1463,5.89,1464,2.565,1465,5.996,1466,3.017,1467,3.37,1468,2.565,1469,3.906,1470,3.906,1471,2.565,1472,3.906,1473,2.565,1474,2.565,1475,3.906,1476,2.565,1477,2.565,1478,2.565,1479,3.906,1480,4.73,1481,3.906,1482,2.565,1483,3.906,1484,2.213,1485,2.565,1486,2.565,1487,2.565,1488,3.906,1489,2.565,1490,2.565,1491,2.565,1492,2.565,1493,2.565,1494,2.565,1495,2.565,1496,2.565,1497,2.565,1498,5.289,1499,2.565,1500,2.565,1501,2.565,1502,2.565,1503,2.565,1504,2.565,1505,2.565,1506,2.565,1507,3.906,1508,2.565,1509,4.73,1510,5.996,1511,4.73,1512,4.73,1513,4.73,1514,4.73,1515,4.73,1516,5.289,1517,4.73,1518,3.906,1519,6.827,1520,6.715,1521,2.565,1522,2.213,1523,2.565,1524,2.565,1525,2.213,1526,2.565,1527,2.565,1528,2.565,1529,2.565,1530,2.213,1531,2.565,1532,2.565,1533,2.565,1534,3.906,1535,2.213,1536,2.565,1537,2.565,1538,2.565,1539,2.565,1540,3.906,1541,2.565,1542,3.906,1543,3.906,1544,3.906,1545,2.565]],["title/interfaces/Server.html",[464,0.435,535,2.032]],["body/interfaces/Server.html",[2,0.201,3,0.201,4,0.156,6,0.138,7,0.665,13,0.824,15,0.599,16,0.017,18,0.382,20,1.117,22,0.778,23,0.778,24,0.176,25,0.449,32,0.573,35,0.201,64,0.013,65,0.013,92,2.021,106,2.631,110,4.188,115,2.088,142,4.425,464,0.665,470,3.886,471,3.174,535,3.103,1023,4.969,1026,5.551,1028,5.865,1029,3.886,1056,5.25,1484,5.014,1535,5.551,1546,4.504,1547,5.811,1548,5.811,1549,5.811,1550,5.811,1551,6.798,1552,6.798,1553,4.504,1554,5.811,1555,4.504,1556,5.811,1557,4.504,1558,5.811,1559,6.434,1560,4.504,1561,4.504,1562,4.504,1563,4.504]],["title/classes/ServerApplication.html",[0,0.203,1564,3.284]],["body/classes/ServerApplication.html",[0,0.225,2,0.127,3,0.127,4,0.098,6,0.057,7,0.482,13,0.81,15,0.573,16,0.018,18,0.365,20,0.873,22,0.575,23,0.575,24,0.165,25,0.332,26,0.74,27,0.677,32,0.631,35,0.127,37,1.23,41,1.97,52,1.611,64,0.009,65,0.009,70,0.732,71,1.495,73,1.09,79,0.848,87,1.003,89,4.016,92,1.853,115,1.516,123,1.726,144,3.255,145,3.255,166,1.108,167,1.285,207,1.726,240,0.915,397,1.451,417,1.285,447,1.847,465,4.298,472,3.255,477,2.971,480,2.971,514,4.391,535,3.678,629,2.805,651,1.057,677,3.255,689,4.801,705,1.847,783,4.592,932,4.801,940,4.801,941,4.987,947,3.255,948,3.636,949,4.298,950,3.636,951,2.743,952,3.255,953,3.255,954,3.255,1063,2.192,1144,1.611,1181,1.72,1198,1.72,1231,2.192,1275,2.192,1279,3.922,1564,3.636,1565,2.838,1566,5.565,1567,5.565,1568,4.215,1569,5.565,1570,5.565,1571,4.215,1572,4.215,1573,4.215,1574,4.215,1575,4.215,1576,4.215,1577,4.215,1578,4.215,1579,4.215,1580,4.215,1581,4.215,1582,2.838,1583,2.838,1584,2.838,1585,2.838,1586,4.215,1587,2.838,1588,2.838,1589,2.838,1590,2.838,1591,4.215,1592,2.838,1593,4.215,1594,5.946,1595,2.838,1596,2.838,1597,2.838,1598,2.838,1599,2.838,1600,2.838,1601,2.838,1602,2.838,1603,2.838,1604,2.838,1605,2.838,1606,2.838,1607,2.838,1608,2.838,1609,2.838,1610,5.565,1611,2.838,1612,2.838,1613,4.215,1614,2.838,1615,2.838,1616,2.838,1617,2.838,1618,2.838,1619,4.215,1620,2.838,1621,2.838,1622,2.838,1623,5.028,1624,2.838,1625,2.838,1626,2.838,1627,2.838,1628,2.838,1629,2.838,1630,5.028,1631,5.028,1632,2.838,1633,4.215,1634,5.028,1635,2.838,1636,2.838,1637,2.838,1638,2.838,1639,2.838,1640,2.838]],["title/interfaces/SignCertService.html",[464,0.435,796,2.94]],["body/interfaces/SignCertService.html",[2,0.247,3,0.247,4,0.191,6,0.112,7,0.755,13,0.755,15,0.549,16,0.017,18,0.378,22,0.755,23,0.755,24,0.165,25,0.435,35,0.247,64,0.014,65,0.014,101,2.599,464,0.755,796,5.095,815,4.294,1641,5.525,1642,6.598,1643,6.598,1644,6.598,1645,5.525,1646,6.598,1647,5.525]],["title/classes/SimpleApplicationCompat.html",[0,0.203,437,2.94]],["body/classes/SimpleApplicationCompat.html",[0,0.278,1,4.956,2,0.17,3,0.17,4,0.132,6,0.077,7,0.595,8,3.958,9,2.95,10,4.956,11,3.663,12,3.663,13,0.848,15,0.625,16,0.017,17,2.683,18,0.317,19,3.663,20,0.902,22,0.819,23,0.831,24,0.188,25,0.464,26,0.992,27,1.589,28,1.354,29,2.683,31,3.383,32,0.527,35,0.17,41,1.76,63,1.183,64,0.011,65,0.011,68,2.48,70,0.902,73,1.029,79,0.819,87,0.76,93,3.852,105,1.294,133,1.817,172,2.94,240,1.25,243,3.15,437,4.014,438,4.482,439,4.482,440,4.014,441,4.014,442,5.306,444,4.482,446,4.484,447,4.779,449,5.486,450,4.484,452,4.014,457,4.484,1648,3.807,1649,3.807,1650,5.198,1651,3.807,1652,3.807,1653,3.807,1654,3.807,1655,3.807,1656,3.807,1657,3.285,1658,3.285,1659,3.285,1660,3.807,1661,5.198,1662,3.807,1663,3.807,1664,3.807]],["title/classes/SimpleRequestCompat.html",[0,0.203,1665,3.284]],["body/classes/SimpleRequestCompat.html",[0,0.25,1,4.753,2,0.146,3,0.146,4,0.114,6,0.066,7,0.535,8,4.142,9,2.656,10,4.753,11,3.298,12,3.298,13,0.846,15,0.605,16,0.017,17,2.309,18,0.355,19,3.298,20,1.034,22,0.772,23,0.75,24,0.188,25,0.432,26,0.854,27,0.782,28,1.165,29,2.309,31,3.046,32,0.561,35,0.146,37,0.892,41,1.624,63,1.455,64,0.01,65,0.01,68,2.233,70,0.812,73,0.818,79,0.721,87,0.654,93,3.554,99,1.165,105,1.114,106,2.696,126,4.198,170,2.44,172,2.53,203,3.877,232,2.605,233,2.827,240,1.192,243,2.836,351,3.002,352,3.002,357,1.749,438,4.947,440,3.615,442,5.499,824,3.877,1225,4.198,1227,2.309,1230,4.86,1247,3.298,1466,5.208,1657,2.827,1658,2.827,1659,2.827,1665,4.038,1666,3.276,1667,4.038,1668,3.276,1669,4.68,1670,3.276,1671,3.276,1672,3.276,1673,3.276,1674,3.276,1675,4.68,1676,3.276,1677,3.276,1678,4.68,1679,3.276,1680,4.68,1681,3.276,1682,3.276,1683,3.276,1684,4.68,1685,3.276,1686,3.276,1687,3.276,1688,3.276,1689,3.276,1690,3.276,1691,3.276,1692,3.276,1693,3.276,1694,3.276,1695,5.46,1696,3.276,1697,3.276,1698,3.276,1699,4.68,1700,4.68,1701,3.276,1702,3.276,1703,3.276]],["title/interfaces/SmtpData.html",[464,0.435,941,2.683]],["body/interfaces/SmtpData.html",[2,0.226,3,0.226,4,0.175,6,0.103,16,0.017,18,0.382,20,1.33,24,0.19,25,0.514,35,0.226,64,0.014,65,0.014,70,1.086,207,2.906,397,1.77,464,0.716,480,5,941,4.41,947,5.479,949,5.479,951,4.617,952,5.479,953,5.479,954,5.479,1704,5.063]],["title/classes/StringUtil.html",[0,0.203,600,2.683]],["body/classes/StringUtil.html",[0,0.335,2,0.226,3,0.226,4,0.175,6,0.103,7,0.716,13,0.777,15,0.565,16,0.017,18,0.363,20,1.179,22,0.716,23,0.716,24,0.156,25,0.413,27,1.209,35,0.226,64,0.014,65,0.014,73,0.937,79,0.579,87,1.355,92,1.506,123,2.563,232,3.385,240,1.326,397,1.849,593,3.911,600,4.41,852,3.911,971,4.368,1441,4.368,1705,5.063,1706,6.257,1707,6.257,1708,5.063,1709,6.257,1710,5.063,1711,5.063,1712,5.063,1713,5.063,1714,5.063,1715,5.063,1716,5.063,1717,5.063]],["title/classes/Token.html",[0,0.203,98,2.032]],["body/classes/Token.html",[0,0.308,2,0.199,3,0.199,4,0.154,6,0.09,7,0.659,13,0.836,15,0.642,16,0.017,18,0.376,22,0.508,23,0.508,24,0.111,25,0.293,35,0.257,64,0.013,65,0.013,71,2.083,79,0.899,87,0.887,98,3.075,133,2.12,397,1.666,464,0.508,813,3.131,815,2.892,824,2.892,877,3.431,905,3.431,1718,3.833,1719,5.834,1720,5.834,1721,5.834,1722,5.834,1723,5.834,1724,5.834,1725,4.443,1726,5.545,1727,4.443,1728,4.443,1729,4.443,1730,4.443,1731,4.443,1732,4.443,1733,4.443,1734,3.833,1735,3.833,1736,3.833,1737,3.833,1738,3.833,1739,3.833,1740,3.833,1741,3.833,1742,3.833,1743,3.833]],["title/interfaces/TokenData.html",[464,0.435,1726,2.94]],["body/interfaces/TokenData.html",[0,0.254,2,0.213,3,0.213,4,0.165,6,0.096,15,0.624,16,0.017,18,0.383,24,0.179,35,0.269,64,0.013,65,0.013,70,1.045,71,2.128,79,0.859,98,2.541,133,2.271,397,1.808,464,0.689,813,4.89,815,4.516,824,4.516,877,5.358,905,5.358,1718,4.105,1719,4.105,1720,4.105,1721,4.105,1722,4.105,1723,4.105,1724,4.105,1726,5.358,1734,4.105,1735,4.105,1736,4.105,1737,4.105,1738,4.105,1739,4.105,1740,4.105,1741,4.105,1742,4.105,1743,4.105]],["title/interfaces/Validation.html",[280,1.083,464,0.435]],["body/interfaces/Validation.html",[2,0.187,3,0.187,4,0.145,6,0.085,16,0.018,18,0.385,20,1.193,24,0.18,25,0.466,35,0.248,64,0.012,65,0.012,70,0.961,153,4.072,174,1.801,280,2.081,316,2.843,393,3.904,397,1.619,400,3.144,401,2.725,404,3.144,407,3.904,414,3.144,417,2.508,421,2.95,424,2.508,427,2.537,430,2.792,464,0.634,574,5.104,716,2.725,750,2.537,752,3.13,810,3.233,1051,4.278,1094,4.779,1098,3.611,1099,3.611,1189,3.233,1360,2.725,1438,3.611,1744,3.611,1745,4.658,1746,3.611,1747,3.611,1748,2.95,1749,2.95,1750,2.95,1751,2.95,1752,2.95,1753,2.95,1754,4.186,1755,4.186,1756,3.233,1757,3.611,1758,4.186,1759,4.186,1760,4.186,1761,4.186,1762,4.186,1763,2.95,1764,2.95,1765,3.611,1766,3.611,1767,4.186,1768,4.186,1769,2.95,1770,4.186,1771,2.95,1772,4.186,1773,2.95]],["title/classes/ValidationError.html",[0,0.203,1774,2.94]],["body/classes/ValidationError.html",[0,0.341,2,0.197,3,0.197,4,0.153,6,0.089,13,0.772,15,0.367,16,0.018,18,0.381,22,0.505,23,0.8,24,0.168,25,0.42,26,1.15,27,1.053,32,0.393,35,0.256,37,1.214,64,0.012,65,0.012,70,0.995,71,2.223,79,0.863,87,1.144,141,3.475,170,2.349,183,2.173,280,1.256,314,3.255,315,2.674,316,3.083,343,2.872,351,3.211,352,3.211,355,3.408,562,3.4,1774,5.209,1775,3.807,1776,5.819,1777,4.947,1778,5.735,1779,4.413,1780,4.413,1781,3.807,1782,3.807,1783,5.496,1784,3.807,1785,3.807,1786,3.807,1787,3.807]],["title/interfaces/ValidationFunc.html",[314,2.16,464,0.435]],["body/interfaces/ValidationFunc.html",[0,0.191,2,0.159,3,0.159,4,0.124,6,0.072,15,0.637,16,0.018,18,0.365,20,0.863,23,0.408,24,0.154,28,1.269,32,0.443,35,0.256,37,0.947,41,1.061,63,1.109,64,0.011,65,0.011,70,0.993,71,1.061,73,1.009,79,0.88,108,1.798,141,2.162,170,2.343,173,2.322,238,3.503,240,0.649,241,4.031,246,2.755,280,1.851,314,3.246,315,4.66,316,1.535,332,4.967,351,2.883,352,2.883,400,2.025,404,2.025,414,2.025,417,1.615,424,1.615,427,2.162,430,1.798,432,2.514,464,0.569,651,1.329,716,2.322,717,2.755,750,2.162,752,2.505,1128,3.503,1360,2.322,1745,2.514,1748,2.514,1749,2.514,1750,2.514,1751,2.514,1752,2.514,1753,2.514,1763,2.514,1764,2.514,1769,2.514,1771,2.514,1773,2.514,1788,2.755,1789,4.934,1790,3.078,1791,3.078,1792,3.078,1793,3.078,1794,3.078,1795,4.288,1796,4.288,1797,3.078,1798,3.078,1799,3.078,1800,4.288,1801,3.078,1802,3.078,1803,3.078,1804,3.078,1805,4.288,1806,3.078,1807,3.078,1808,6.502,1809,3.078,1810,3.078,1811,3.078,1812,3.078,1813,3.078,1814,3.078,1815,3.078,1816,3.078]],["title/classes/ValidationSchema.html",[0,0.203,315,2.307]],["body/classes/ValidationSchema.html",[0,0.207,2,0.114,3,0.114,4,0.088,6,0.051,7,0.444,13,0.863,15,0.644,16,0.018,18,0.372,20,0.914,22,0.649,23,0.733,24,0.172,25,0.374,26,0.663,27,0.607,28,1.38,32,0.346,35,0.21,37,0.74,41,0.756,63,0.79,64,0.008,65,0.008,70,0.817,71,1.399,73,1.085,79,0.902,87,0.507,92,0.756,108,1.281,141,1.54,153,2.071,170,1.927,173,1.655,238,2.734,240,0.856,241,4.212,246,3.634,280,1.104,314,2.67,315,4.701,316,1.669,332,4.722,351,2.371,352,2.371,400,1.443,404,1.443,414,1.443,417,1.151,424,1.151,427,1.54,430,1.281,432,1.792,464,0.291,651,0.947,716,3.427,717,4.066,750,1.54,752,1.955,1128,3.996,1360,3.427,1745,3.711,1748,1.792,1749,3.711,1750,1.792,1751,3.711,1752,3.711,1753,3.711,1756,2.996,1763,3.711,1764,3.711,1769,3.711,1771,3.711,1773,3.711,1788,1.963,1789,2.193,1790,4.542,1791,4.542,1792,3.347,1793,2.193,1794,2.193,1795,3.347,1796,3.347,1797,3.347,1798,2.193,1799,2.193,1800,4.059,1801,2.193,1802,2.193,1803,4.542,1804,2.193,1805,3.347,1806,2.193,1807,2.193,1808,6.153,1809,2.193,1810,3.347,1811,2.193,1812,4.542,1813,4.542,1814,2.193,1815,3.347,1816,2.193,1817,3.88,1818,3.88,1819,3.88,1820,2.542,1821,2.542,1822,2.542,1823,2.542,1824,2.542,1825,2.542,1826,2.542,1827,2.542,1828,2.542,1829,2.542,1830,2.542,1831,2.542,1832,2.542,1833,2.542,1834,2.542,1835,2.542,1836,2.542,1837,2.542,1838,2.542,1839,2.542,1840,2.542,1841,2.542,1842,2.542,1843,2.542,1844,2.542,1845,2.542]],["title/classes/Validator.html",[0,0.203,280,1.083]],["body/classes/Validator.html",[0,0.35,2,0.208,3,0.208,4,0.162,6,0.094,7,0.68,13,0.68,15,0.494,16,0.018,18,0.343,22,0.534,23,0.68,24,0.148,25,0.308,32,0.416,35,0.266,37,1.247,64,0.013,65,0.013,71,1.945,79,0.832,87,1.305,141,2.827,170,2.821,183,2.141,280,1.96,314,4.037,315,2.827,316,2.557,343,3.036,351,3.585,352,3.585,355,3.603,469,2.827,562,3.297,1774,4.59,1775,4.025,1776,4.025,1777,4.025,1781,4.025,1782,5.128,1783,5.643,1784,4.025,1785,4.025,1786,4.025,1787,4.025,1846,4.665,1847,4.665]],["title/interfaces/WinstonFileTransportOptions.html",[464,0.435,1848,2.94]],["body/interfaces/WinstonFileTransportOptions.html",[0,0.16,2,0.196,3,0.134,4,0.103,6,0.06,15,0.474,16,0.018,18,0.352,20,0.99,24,0.142,25,0.444,28,2.257,32,0.566,34,1.113,35,0.134,37,1.087,63,2.038,64,0.01,65,0.01,68,2.089,70,0.76,71,1.806,73,1.113,76,1.843,79,0.653,101,1.843,115,1.786,123,1.793,166,1.166,167,1.352,183,2.197,199,2.206,232,2.472,240,0.796,270,3.243,316,1.884,397,1.864,464,0.501,532,1.595,629,1.506,657,3.381,680,3.381,705,1.944,799,4.002,933,3.372,1143,1.81,1144,1.696,1145,1.944,1157,4.281,1181,1.81,1294,2.307,1295,4.406,1296,2.307,1297,2.307,1848,4.691,1849,2.307,1850,5.24,1851,5.24,1852,5.24,1853,3.777,1854,3.085,1855,2.307,1856,2.577,1857,2.577,1858,2.577,1859,3.777,1860,2.577,1861,2.577,1862,2.577,1863,2.577,1864,2.577,1865,4.47,1866,2.577,1867,2.577,1868,2.577,1869,2.577,1870,2.577,1871,2.577,1872,2.577,1873,2.577,1874,3.777,1875,2.577,1876,2.577,1877,3.777,1878,2.577,1879,2.577,1880,2.577,1881,2.577,1882,4.47,1883,2.577,1884,2.577,1885,2.577,1886,2.577,1887,5.24,1888,2.577,1889,2.577,1890,4.922,1891,2.577,1892,2.577,1893,2.577,1894,2.577,1895,2.577,1896,2.577,1897,2.577,1898,4.922,1899,2.577,1900,2.577,1901,2.577,1902,2.577,1903,2.577,1904,3.777,1905,2.577,1906,2.577,1907,2.577,1908,2.577,1909,2.577,1910,2.577,1911,4.47,1912,2.577,1913,2.577,1914,2.577,1915,2.577,1916,2.577,1917,2.577,1918,4.47,1919,4.47,1920,2.577,1921,2.577]],["title/classes/WinstonLogger.html",[0,0.203,1198,2.307]],["body/classes/WinstonLogger.html",[0,0.283,2,0.275,3,0.138,4,0.107,6,0.063,7,0.514,13,0.705,15,0.592,16,0.018,18,0.307,20,1.069,24,0.132,28,1.1,32,0.626,33,1.673,35,0.138,37,1.263,41,1.725,52,1.756,53,1.267,54,4.48,63,0.962,64,0.01,65,0.01,70,0.779,71,1.335,73,1.098,79,0.758,87,0.617,106,2.033,115,1.223,166,1.208,167,1.401,168,3.204,169,1.875,174,1.331,183,1.396,203,2.923,204,3.468,240,1.371,243,1.875,244,4.088,270,1.652,316,1.331,339,3.165,469,1.875,629,1.559,651,1.152,707,2.18,933,4.314,1025,4.48,1088,3.165,1091,2.389,1097,2.014,1112,5.561,1113,2.389,1114,2.669,1115,2.669,1116,2.669,1117,5.314,1119,2.669,1120,2.669,1124,3.726,1128,4.786,1131,2.669,1135,3.874,1136,2.669,1137,5.314,1138,2.669,1140,3.874,1141,2.669,1142,3.468,1143,3.515,1144,1.756,1145,3.775,1146,2.669,1147,2.389,1148,2.389,1149,2.18,1150,2.669,1151,2.669,1152,2.669,1153,2.669,1154,5.314,1155,4.561,1156,2.669,1157,3.726,1158,2.669,1159,2.669,1160,2.669,1161,2.669,1162,2.669,1163,2.669,1164,2.669,1165,2.669,1166,2.669,1167,2.669,1168,3.874,1169,2.669,1170,2.669,1171,2.669,1172,3.874,1173,2.669,1174,2.669,1175,2.669,1176,2.669,1177,2.669,1178,2.669,1179,2.669,1180,2.669,1181,1.875,1182,2.669,1183,2.669,1184,2.669,1185,2.669,1186,2.389,1187,2.669,1188,2.669,1189,2.389,1190,2.669,1191,2.669,1192,3.874,1193,3.874,1194,2.669,1195,2.669,1196,3.874,1197,2.669,1198,2.721,1199,5.004,1200,2.669,1201,2.669,1202,3.874,1203,2.669,1204,5.004,1922,3.094,1923,3.094,1924,3.094,1925,3.094,1926,3.094]],["title/classes/WistonFileTransport.html",[0,0.203,1145,2.477]],["body/classes/WistonFileTransport.html",[0,0.183,2,0.189,3,0.096,4,0.075,6,0.044,7,0.391,13,0.831,15,0.56,16,0.018,18,0.351,20,1.153,22,0.694,23,0.694,24,0.177,25,0.45,26,1.731,27,1.585,28,2.276,32,0.498,34,0.804,35,0.096,37,0.919,53,1.399,63,1.819,64,0.007,65,0.007,68,2.022,70,0.593,71,2.052,73,1.163,76,1.508,79,0.732,87,0.431,92,0.642,101,1.508,115,1.88,123,1.399,166,0.842,167,0.977,183,2.094,199,2.429,232,2.3,240,1.016,270,3.124,316,2.518,397,1.833,464,0.247,532,1.152,629,1.087,657,2.637,680,3.273,705,1.404,799,4.314,933,3.137,1124,2.407,1143,1.307,1144,1.224,1145,2.223,1157,2.987,1181,1.307,1277,2.946,1294,1.666,1295,3.722,1296,1.666,1297,1.666,1848,4.942,1849,1.666,1850,4.531,1851,3.657,1852,3.657,1853,2.946,1854,2.407,1855,1.666,1856,1.861,1857,4.158,1858,2.946,1859,4.158,1860,2.946,1861,2.946,1862,4.158,1863,4.158,1864,4.158,1865,4.819,1866,4.158,1867,4.158,1868,4.158,1869,4.158,1870,2.946,1871,1.861,1872,1.861,1873,1.861,1874,2.946,1875,1.861,1876,1.861,1877,2.946,1878,1.861,1879,1.861,1880,1.861,1881,4.158,1882,3.657,1883,1.861,1884,1.861,1885,2.946,1886,1.861,1887,4.531,1888,1.861,1889,2.946,1890,4.158,1891,1.861,1892,4.158,1893,1.861,1894,1.861,1895,1.861,1896,2.946,1897,1.861,1898,5.235,1899,2.946,1900,1.861,1901,2.946,1902,1.861,1903,2.946,1904,2.946,1905,1.861,1906,1.861,1907,1.861,1908,2.946,1909,1.861,1910,2.946,1911,3.657,1912,1.861,1913,1.861,1914,1.861,1915,1.861,1916,1.861,1917,1.861,1918,3.657,1919,3.657,1920,1.861,1921,1.861,1927,3.415,1928,3.415,1929,3.415,1930,3.415,1931,3.415,1932,3.415,1933,2.157,1934,2.157,1935,2.157,1936,2.157,1937,2.157,1938,2.157,1939,2.157,1940,2.157,1941,2.157,1942,2.157,1943,2.157,1944,2.157,1945,2.157,1946,2.157,1947,2.157,1948,2.157,1949,2.157,1950,2.157,1951,2.157,1952,2.157]],["title/dependencies.html",[1953,3.178,1954,3.95]],["body/dependencies.html",[4,0.16,16,0.017,24,0.116,64,0.013,65,0.013,105,2.011,109,3.851,240,0.843,241,3.265,280,1.318,329,3.265,330,3.265,331,3.265,343,3.015,357,3.876,430,2.335,550,3.577,584,3.577,590,3.851,658,3.996,835,3.577,836,3.577,951,3.015,974,3.996,1124,3.265,1142,3.577,1143,2.807,1149,3.265,1667,3.996,1854,3.265,1954,3.996,1955,4.632,1956,3.996,1957,5.917,1958,5.917,1959,4.632,1960,4.632,1961,4.632,1962,4.632,1963,4.632,1964,5.917,1965,4.632,1966,3.996,1967,3.996,1968,4.632,1969,4.632,1970,4.632,1971,5.917,1972,4.632,1973,4.632,1974,3.996,1975,4.632,1976,4.632,1977,5.917,1978,4.632,1979,4.632,1980,4.632,1981,4.632,1982,4.632,1983,4.632,1984,4.632,1985,4.632,1986,5.917,1987,4.632,1988,4.632,1989,4.632,1990,4.632,1991,4.632,1992,4.632,1993,4.632,1994,4.632,1995,5.917,1996,4.632,1997,4.632,1998,4.632,1999,4.632,2000,4.632,2001,4.632,2002,4.632,2003,4.632,2004,4.632,2005,4.632,2006,4.632,2007,4.632,2008,4.632,2009,4.632,2010,4.632,2011,4.632,2012,4.632,2013,4.632,2014,4.632]],["title/miscellaneous/enumerations.html",[2015,1.697,2016,3.95]],["body/miscellaneous/enumerations.html",[6,0.088,16,0.017,18,0.284,20,1.1,24,0.142,27,1.911,53,2.334,60,2.451,64,0.012,65,0.012,90,3.233,99,2.026,170,2.334,183,1.771,207,2.334,280,1.912,332,4.015,336,3.708,351,2.871,352,2.871,397,1.485,400,2.479,404,2.479,407,3.079,414,2.479,417,1.977,421,3.079,424,1.977,427,2.647,430,2.202,496,3.708,562,2.871,629,2.871,651,2.122,713,3.769,716,2.843,751,4.4,752,2.871,753,4.915,754,4.915,1051,3.374,1303,3.374,1304,4.015,1360,2.843,1392,4.915,1744,3.769,1748,3.079,1749,3.079,1750,3.079,1751,3.079,1752,3.079,1753,3.079,1756,3.374,1763,3.079,1764,3.079,1765,3.769,1769,3.079,1771,3.079,1773,3.079,1788,3.374,2015,2.332,2016,3.769,2017,4.368,2018,4.368,2019,4.368,2020,4.368,2021,3.769,2022,4.368,2023,5.697,2024,5.697,2025,5.697,2026,4.368,2027,4.368]],["title/miscellaneous/functions.html",[53,1.875,2015,1.697]],["body/miscellaneous/functions.html",[6,0.092,16,0.017,22,0.877,23,0.877,25,0.527,53,1.851,60,2.773,64,0.013,65,0.013,92,2.267,99,2.292,207,2.64,280,1.937,493,4.498,494,3.791,496,3.791,1096,4.498,1217,5.405,1300,4.105,1304,4.105,1308,4.498,1522,5.025,1525,5.025,1530,5.025,2015,2.413,2028,7.51,2029,7.044,2030,4.52,2031,4.52,2032,4.52,2033,4.52,2034,4.52,2035,4.52,2036,4.52,2037,4.52,2038,4.52,2039,4.52,2040,4.52,2041,4.52,2042,4.52,2043,4.52,2044,4.52,2045,4.52]],["title/index.html",[6,0.064,1279,2.24,2046,2.741]],["body/index.html",[16,0.015,64,0.015,65,0.015,105,2.028,357,3.186,438,4.865,528,4.608,578,4.608,852,4.608,1956,5.148,2047,5.967,2048,5.967,2049,5.967,2050,5.967,2051,5.148,2052,5.331,2053,5.967,2054,5.148]],["title/license.html",[1279,2.24,2046,2.741,2052,2.454]],["body/license.html",[4,0.176,16,0.014,64,0.014,65,0.014,105,1.724,174,2.696,383,4.377,578,3.918,609,4.377,861,3.918,881,4.377,1266,4.377,1300,3.576,2051,4.377,2052,3.918,2054,4.377,2055,6.797,2056,5.073,2057,5.073,2058,5.073,2059,6.265,2060,5.073,2061,6.265,2062,5.073,2063,5.073,2064,5.073,2065,5.073,2066,6.265,2067,5.073,2068,7.098,2069,7.665,2070,5.073,2071,6.265,2072,6.797,2073,5.073,2074,6.797,2075,6.265,2076,5.073,2077,5.073,2078,5.073,2079,5.073,2080,5.073,2081,5.073,2082,5.073,2083,5.073,2084,6.265,2085,6.265,2086,5.073,2087,5.073,2088,5.073,2089,6.265,2090,5.073,2091,5.073,2092,5.073,2093,5.073,2094,5.073,2095,5.073,2096,5.073,2097,5.073,2098,5.073,2099,5.073,2100,5.073,2101,5.073,2102,5.073,2103,5.073,2104,5.073,2105,5.073,2106,5.073,2107,5.073,2108,5.073,2109,5.073]],["title/modules.html",[2110,4.483]],["body/modules.html",[16,0.015,64,0.015,65,0.015,2110,5.343]],["title/overview.html",[2111,4.483]],["body/overview.html",[0,0.328,16,0.015,64,0.015,65,0.015,464,0.702,2111,5.293,2112,6.135,2113,6.135]],["title/miscellaneous/typealiases.html",[2015,1.697,2114,4.578]],["body/miscellaneous/typealiases.html",[6,0.111,16,0.015,24,0.164,53,2.884,64,0.014,65,0.014,120,2.625,122,4.583,168,4.267,424,3.188,447,4.583,469,3.334,651,2.049,1056,5.438,1058,4.746,1229,4.249,1230,3.877,1466,5.438,1467,6.075,2015,2.937,2115,5.501,2116,7.041,2117,7.717,2118,7.041,2119,5.501,2120,5.501,2121,5.501,2122,5.501]],["title/miscellaneous/variables.html",[678,3.536,2015,1.697]],["body/miscellaneous/variables.html",[6,0.051,16,0.017,20,0.666,22,0.862,24,0.195,26,1.993,27,1.829,41,0.745,63,2.167,64,0.008,65,0.008,90,2.178,153,4.044,280,2.239,392,2.963,393,3.683,396,2.963,397,1.549,399,2.963,400,2.178,401,2.497,403,2.963,404,2.178,410,2.963,412,2.963,414,2.178,416,2.963,417,1.737,420,4.035,423,2.963,424,1.737,426,2.963,429,2.963,430,1.934,432,5.308,498,4.023,499,4.023,523,4.023,537,2.963,574,4.927,651,1.429,678,1.935,752,2.634,810,2.963,835,3.601,944,2.963,951,1.631,1113,1.935,1147,3.601,1148,1.935,1149,1.766,1745,4.914,1746,3.31,1747,3.31,1757,3.31,1766,4.508,1849,1.935,1854,3.683,1855,1.935,1966,2.162,1967,2.162,1974,4.023,2015,1.338,2021,6.497,2123,2.505,2124,4.663,2125,2.505,2126,3.837,2127,2.505,2128,2.505,2129,4.663,2130,4.663,2131,4.663,2132,4.663,2133,4.663,2134,4.663,2135,4.663,2136,4.663,2137,4.663,2138,4.663,2139,4.663,2140,4.663,2141,4.663,2142,4.663,2143,4.663,2144,4.663,2145,4.663,2146,4.663,2147,4.663,2148,4.663,2149,4.663,2150,4.663,2151,4.663,2152,4.663,2153,2.505,2154,2.505,2155,2.505,2156,2.505,2157,2.505,2158,2.505,2159,2.505,2160,2.505,2161,5.225]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"classes/AuthenticationController.html":{},"interfaces/AuthenticationResult.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":232,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/Configuration.html":{},"classes/DefaultJwtService.html":{},"classes/RequestHandler.html":{},"interfaces/RouteMethod.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["0'].includes(valu",{"_index":271,"title":{},"body":{"classes/AjvInstance.html":{}}}],["0.0.0",{"_index":2007,"title":{},"body":{"dependencies.html":{}}}],["0.1",{"_index":1759,"title":{},"body":{"interfaces/Validation.html":{}}}],["0.1.1",{"_index":1984,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1987,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1982,"title":{},"body":{"dependencies.html":{}}}],["0.2.8",{"_index":1991,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1970,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1995,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1981,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":270,"title":{},"body":{"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/DefaultJwtService.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["1.0.0",{"_index":2002,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":1975,"title":{},"body":{"dependencies.html":{}}}],["1.00003",{"_index":1761,"title":{},"body":{"interfaces/Validation.html":{}}}],["1.1",{"_index":1760,"title":{},"body":{"interfaces/Validation.html":{}}}],["1.1.0",{"_index":2006,"title":{},"body":{"dependencies.html":{}}}],["1.13.0",{"_index":1980,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2005,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":1999,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":1977,"title":{},"body":{"dependencies.html":{}}}],["1.6.16",{"_index":2011,"title":{},"body":{"dependencies.html":{}}}],["1.7.3",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1997,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":799,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["1024",{"_index":1859,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["10h",{"_index":850,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["16",{"_index":2113,"title":{},"body":{"overview.html":{}}}],["1[0",{"_index":284,"title":{},"body":{"classes/AjvInstance.html":{}}}],["2",{"_index":848,"title":{},"body":{"classes/DefaultJwtService.html":{},"classes/LogLevels.html":{}}}],["2.0.0",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":1986,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1993,"title":{},"body":{"dependencies.html":{}}}],["2.8.4",{"_index":1972,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1383,"title":{},"body":{"classes/RequestHandler.html":{}}}],["201",{"_index":490,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["2]|0[1",{"_index":285,"title":{},"body":{"classes/AjvInstance.html":{}}}],["3",{"_index":1094,"title":{},"body":{"classes/LogLevels.html":{},"interfaces/Validation.html":{}}}],["3.0.2",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2013,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":2012,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1878,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["3000",{"_index":1626,"title":{},"body":{"classes/ServerApplication.html":{}}}],["30d",{"_index":803,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["3[01]|0[1",{"_index":287,"title":{},"body":{"classes/AjvInstance.html":{}}}],["3]|[01][0",{"_index":290,"title":{},"body":{"classes/AjvInstance.html":{}}}],["4",{"_index":1098,"title":{},"body":{"classes/LogLevels.html":{},"interfaces/Validation.html":{}}}],["4.0",{"_index":1762,"title":{},"body":{"interfaces/Validation.html":{}}}],["4.16.4",{"_index":1978,"title":{},"body":{"dependencies.html":{}}}],["4.17.10",{"_index":1990,"title":{},"body":{"dependencies.html":{}}}],["4.6.8",{"_index":2000,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1384,"title":{},"body":{"classes/RequestHandler.html":{}}}],["401",{"_index":486,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["409",{"_index":491,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["44",{"_index":2112,"title":{},"body":{"overview.html":{}}}],["465",{"_index":984,"title":{},"body":{"classes/EMailService.html":{}}}],["5",{"_index":1099,"title":{},"body":{"classes/LogLevels.html":{},"interfaces/Validation.html":{}}}],["5.0.0",{"_index":1996,"title":{},"body":{"dependencies.html":{}}}],["5.3.0",{"_index":1979,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":2014,"title":{},"body":{"dependencies.html":{}}}],["587",{"_index":950,"title":{},"body":{"classes/EMailService.html":{},"classes/ServerApplication.html":{}}}],["5][0",{"_index":292,"title":{},"body":{"classes/AjvInstance.html":{}}}],["6",{"_index":1101,"title":{},"body":{"classes/LogLevels.html":{}}}],["6.1.0",{"_index":1973,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1102,"title":{},"body":{"classes/LogLevels.html":{}}}],["7d",{"_index":851,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["8",{"_index":236,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["8').send(classdecorator.url",{"_index":1544,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["8').send(jsondata",{"_index":1424,"title":{},"body":{"classes/RequestHandler.html":{}}}],["8').send(this.escapehtml(string(data",{"_index":1418,"title":{},"body":{"classes/RequestHandler.html":{}}}],["8').status(400",{"_index":362,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["8').status(400).send(errormsg",{"_index":364,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["8.3.0",{"_index":1988,"title":{},"body":{"dependencies.html":{}}}],["8601",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8601]{@link",{"_index":1767,"title":{},"body":{"interfaces/Validation.html":{}}}],["9",{"_index":286,"title":{},"body":{"classes/AjvInstance.html":{}}}],["9+\\/]{4})+={0,2}$/i",{"_index":264,"title":{},"body":{"classes/AjvInstance.html":{}}}],["9])(.[0",{"_index":293,"title":{},"body":{"classes/AjvInstance.html":{}}}],["9]):([0",{"_index":291,"title":{},"body":{"classes/AjvInstance.html":{}}}],["9])t(2[0",{"_index":289,"title":{},"body":{"classes/AjvInstance.html":{}}}],["9]*)?[0",{"_index":282,"title":{},"body":{"classes/AjvInstance.html":{}}}],["9]+)?(z)?$/.test(valu",{"_index":294,"title":{},"body":{"classes/AjvInstance.html":{}}}],["9][0",{"_index":281,"title":{},"body":{"classes/AjvInstance.html":{}}}],["9]{4",{"_index":283,"title":{},"body":{"classes/AjvInstance.html":{}}}],["9]|[12][0",{"_index":288,"title":{},"body":{"classes/AjvInstance.html":{}}}],["_id",{"_index":612,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["_url",{"_index":1472,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["abov",{"_index":2083,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/ApplicationCompat.html":{},"classes/LocalJwtStrategy.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["abstractcompatproxi",{"_index":1,"title":{"classes/AbstractCompatProxy.html":{}},"body":{"classes/AbstractCompatProxy.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["abstractcompatproxy:14",{"_index":1659,"title":{},"body":{"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["abstractcompatproxy:5",{"_index":1657,"title":{},"body":{"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["abstractcompatproxy:7",{"_index":1658,"title":{},"body":{"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["abstractjwtstrategi",{"_index":66,"title":{"classes/AbstractJwtStrategy.html":{}},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["abstractjwtstrategy:101",{"_index":1076,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["abstractjwtstrategy:115",{"_index":1081,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["abstractjwtstrategy:132",{"_index":1079,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["abstractjwtstrategy:14",{"_index":1080,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["abstractjwtstrategy:15",{"_index":1074,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["abstractjwtstrategy:18",{"_index":1069,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["abstractjwtstrategy:19",{"_index":1070,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["abstractjwtstrategy:20",{"_index":1068,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["abstractjwtstrategy:24",{"_index":1073,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["abstractjwtstrategy:60",{"_index":1075,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["abstractjwtstrategy:70",{"_index":1078,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["abstractjwtstrategy:81",{"_index":1077,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["abstractstrategi",{"_index":69,"title":{"classes/AbstractStrategy.html":{}},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{}}}],["abstractstrategy:101",{"_index":117,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["abstractstrategy:115",{"_index":129,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["abstractstrategy:132",{"_index":125,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["abstractstrategy:14",{"_index":127,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["abstractstrategy:15",{"_index":118,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["abstractstrategy:18",{"_index":95,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["abstractstrategy:19",{"_index":96,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["abstractstrategy:20",{"_index":94,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["abstractstrategy:60",{"_index":107,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["abstractstrategy:70",{"_index":121,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["abstractstrategy:81",{"_index":119,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["accept",{"_index":1667,"title":{},"body":{"classes/SimpleRequestCompat.html":{},"dependencies.html":{}}}],["accepthead",{"_index":126,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{},"classes/SimpleRequestCompat.html":{}}}],["acceptheader.indexof",{"_index":233,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/SimpleRequestCompat.html":{}}}],["acceptheader.indexof(jsontyp",{"_index":231,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["acceptheader.indexof(typ",{"_index":1702,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["accepts(typ",{"_index":1675,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["access_token",{"_index":893,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["accesstoken",{"_index":905,"title":{},"body":{"classes/DefaultJwtService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["action",{"_index":2104,"title":{},"body":{"license.html":{}}}],["add",{"_index":108,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/AuthenticationService.html":{},"classes/ExpressValidationResolver.html":{},"classes/LocalJwtStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["addauthent",{"_index":1568,"title":{},"body":{"classes/ServerApplication.html":{}}}],["addauthentication(authconfig",{"_index":1586,"title":{},"body":{"classes/ServerApplication.html":{}}}],["addcloselisten",{"_index":1881,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["addcontrol",{"_index":1547,"title":{},"body":{"interfaces/Server.html":{}}}],["addcontroller(control",{"_index":1484,"title":{},"body":{"interfaces/RouteMethod.html":{},"interfaces/Server.html":{}}}],["addcustomformat",{"_index":242,"title":{},"body":{"classes/AjvInstance.html":{}}}],["addmiddlewar",{"_index":1548,"title":{},"body":{"interfaces/Server.html":{}}}],["addmiddleware(path",{"_index":1554,"title":{},"body":{"interfaces/Server.html":{}}}],["addpassportstrategi",{"_index":1549,"title":{},"body":{"interfaces/Server.html":{}}}],["addpassportstrategy(path",{"_index":1556,"title":{},"body":{"interfaces/Server.html":{}}}],["address",{"_index":418,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/AuthenticationService.html":{},"classes/EMailService.html":{},"classes/ExpressValidationResolver.html":{}}}],["addrout",{"_index":1207,"title":{},"body":{"classes/MethodDecorator.html":{}}}],["addroute(rout",{"_index":1212,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["addrouteexpress(routemethod",{"_index":1508,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["addroutemethod(routemethod",{"_index":1490,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["addroutesfastify(fastifyserv",{"_index":1532,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["addstaticfil",{"_index":1550,"title":{},"body":{"interfaces/Server.html":{}}}],["addstaticfiles(directori",{"_index":1558,"title":{},"body":{"interfaces/Server.html":{}}}],["addtoexpress",{"_index":80,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{},"interfaces/PassportStrategy.html":{}}}],["addtoexpress(express",{"_index":104,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{},"interfaces/PassportStrategy.html":{}}}],["addurl(routemethod",{"_index":1545,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["addvalidationfunc",{"_index":308,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["addvalidationfunc(paramvalid",{"_index":313,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["advanc",{"_index":1440,"title":{},"body":{"classes/RequestHandler.html":{}}}],["ahoi",{"_index":1956,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ajv",{"_index":241,"title":{},"body":{"classes/AjvInstance.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"dependencies.html":{}}}],["ajv.ajv",{"_index":246,"title":{},"body":{"classes/AjvInstance.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["ajv.validatefunct",{"_index":1789,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["ajvinst",{"_index":238,"title":{"classes/AjvInstance.html":{}},"body":{"classes/AjvInstance.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["ajvinstance.addcustomformat",{"_index":254,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ajvinstance.ajv",{"_index":251,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ajvinstance.ajv.addformat('alpha",{"_index":255,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ajvinstance.ajv.addformat('alphanumer",{"_index":257,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ajvinstance.ajv.addformat('ascii",{"_index":259,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ajvinstance.ajv.addformat('base64",{"_index":262,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ajvinstance.ajv.addformat('befor",{"_index":265,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ajvinstance.ajv.addformat('decim",{"_index":276,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ajvinstance.ajv.addformat('json",{"_index":295,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ajvinstance.ajv.addformat('notempti",{"_index":304,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ajvinstance.ajv.addformat('numer",{"_index":302,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ajvinstance.getinst",{"_index":1794,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["ajvinstance.init",{"_index":252,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ajvvalidationresolv",{"_index":306,"title":{"classes/AjvValidationResolver.html":{}},"body":{"classes/AjvValidationResolver.html":{},"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["ajvvalidationresolver.applyvalidators(controllerclass",{"_index":340,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["ajvvalidationresolver.getcontents(validator.requestcontenttyp",{"_index":350,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["ajvvalidationresolver.getvalidationfunction(controllerclass",{"_index":1236,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["algorithm",{"_index":804,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["alias",{"_index":2115,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allerror",{"_index":253,"title":{},"body":{"classes/AjvInstance.html":{}}}],["allow",{"_index":526,"title":{},"body":{"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/DefaultJwtService.html":{},"classes/LogLevels.html":{}}}],["allowedloglevel",{"_index":1090,"title":{},"body":{"classes/LogLevels.html":{}}}],["allowinsecurecont",{"_index":1559,"title":{},"body":{"interfaces/Server.html":{}}}],["alpha",{"_index":1748,"title":{},"body":{"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["alphanumer",{"_index":1750,"title":{},"body":{"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["alreadi",{"_index":536,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["alway",{"_index":586,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["amp",{"_index":1451,"title":{},"body":{"classes/RequestHandler.html":{}}}],["and/or",{"_index":2079,"title":{},"body":{"license.html":{}}}],["anoth",{"_index":577,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["api",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":438,"title":{},"body":{"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"index.html":{}}}],["app).getcompatinstance('request",{"_index":1700,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["applic",{"_index":442,"title":{},"body":{"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["application.log",{"_index":1858,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["application/json",{"_index":230,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["applicationcompat",{"_index":435,"title":{"classes/ApplicationCompat.html":{}},"body":{"classes/ApplicationCompat.html":{}}}],["applicationcompat(fastifyapplication).getcompatinstance('appl",{"_index":463,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["applyvalid",{"_index":309,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["applyvalidators(controllerclass",{"_index":319,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["approv",{"_index":866,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["arg",{"_index":54,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["args.length",{"_index":1192,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["args[0",{"_index":1193,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["aris",{"_index":2108,"title":{},"body":{"license.html":{}}}],["array",{"_index":751,"title":{},"body":{"classes/DataType.html":{},"classes/RequestHandler.html":{},"miscellaneous/enumerations.html":{}}}],["array(paramdescriptors.length",{"_index":1343,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["array.isarray(data",{"_index":1437,"title":{},"body":{"classes/RequestHandler.html":{}}}],["array.isarray(valu",{"_index":778,"title":{},"body":{"classes/DataType.html":{}}}],["ascii",{"_index":400,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["asjson",{"_index":814,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{}}}],["associ",{"_index":2070,"title":{},"body":{"license.html":{}}}],["assum",{"_index":113,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["assumed_max_request_tim",{"_index":785,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["async",{"_index":76,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/LocalJwtStrategy.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["aud",{"_index":859,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["audienc",{"_index":858,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["auth",{"_index":467,"title":{},"body":{"interfaces/AuthenticationConfig.html":{},"classes/EMailService.html":{}}}],["auth/controllers/auth.control",{"_index":1597,"title":{},"body":{"classes/ServerApplication.html":{}}}],["auth/export",{"_index":1598,"title":{},"body":{"classes/ServerApplication.html":{}}}],["auth/passport/passportstrategi",{"_index":470,"title":{},"body":{"interfaces/AuthenticationConfig.html":{},"interfaces/Server.html":{}}}],["auth/passport/strategies/localjwtstrategi",{"_index":1599,"title":{},"body":{"classes/ServerApplication.html":{}}}],["authconfig",{"_index":1588,"title":{},"body":{"classes/ServerApplication.html":{}}}],["authconfig.auth",{"_index":1634,"title":{},"body":{"classes/ServerApplication.html":{}}}],["authconfig.auth.loginpath",{"_index":1635,"title":{},"body":{"classes/ServerApplication.html":{}}}],["authconfig.auth.registrationpath",{"_index":1636,"title":{},"body":{"classes/ServerApplication.html":{}}}],["authconfig.exclud",{"_index":1633,"title":{},"body":{"classes/ServerApplication.html":{}}}],["authconfig.strategi",{"_index":1630,"title":{},"body":{"classes/ServerApplication.html":{}}}],["authconfig.strategy)(this.defaultjwtservic",{"_index":1637,"title":{},"body":{"classes/ServerApplication.html":{}}}],["authent",{"_index":81,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["authenticate(request",{"_index":116,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["authenticatejwtrequest",{"_index":77,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["authenticatejwtrequest(token",{"_index":97,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["authenticaterequest",{"_index":78,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["authenticaterequest(request",{"_index":102,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["authentication.config",{"_index":1600,"title":{},"body":{"classes/ServerApplication.html":{}}}],["authenticationconfig",{"_index":465,"title":{"interfaces/AuthenticationConfig.html":{}},"body":{"interfaces/AuthenticationConfig.html":{},"classes/ServerApplication.html":{}}}],["authenticationcontrol",{"_index":472,"title":{"classes/AuthenticationController.html":{}},"body":{"classes/AuthenticationController.html":{},"classes/ServerApplication.html":{}}}],["authenticationresult",{"_index":132,"title":{"interfaces/AuthenticationResult.html":{}},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"interfaces/AuthenticationResult.html":{},"classes/LocalJwtStrategy.html":{}}}],["authenticationservic",{"_index":477,"title":{"classes/AuthenticationService.html":{}},"body":{"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/ServerApplication.html":{}}}],["authjwtstrategi",{"_index":114,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["authjwtstrategy(jwtservic",{"_index":190,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["author",{"_index":881,"title":{},"body":{"classes/DefaultJwtService.html":{},"license.html":{}}}],["authorization.split",{"_index":925,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["authservic",{"_index":189,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["authservice.addtoexpress(this.express",{"_index":192,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["authus",{"_index":522,"title":{},"body":{"classes/AuthenticationService.html":{},"classes/LocalJwtStrategy.html":{}}}],["authuser().getmodelforclass(authus",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authuser.findbyuuid(userid",{"_index":1084,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["authusermodel",{"_index":523,"title":{},"body":{"classes/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["authusermodel.create(usermodel)).sav",{"_index":540,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["authusermodel.findbyemail(email",{"_index":529,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["authusermodel.findbyidandremove(user.getid",{"_index":547,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["avail",{"_index":1293,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["await",{"_index":135,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/LocalJwtStrategy.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"classes/RequestHandler.html":{}}}],["base",{"_index":2048,"title":{},"body":{"index.html":{}}}],["base64",{"_index":404,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["baseclass",{"_index":38,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["baseclass[key",{"_index":62,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["baseencrypteddocu",{"_index":548,"title":{"classes/BaseEncryptedDocument.html":{}},"body":{"classes/BaseEncryptedDocument.html":{}}}],["baseencrypteddocument.findbyproperti",{"_index":621,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["basehttpclass",{"_index":57,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["baserout",{"_index":1510,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["baseroute.concat(userout",{"_index":1516,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["bcrypt",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":926,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["befor",{"_index":407,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/Validation.html":{},"miscellaneous/enumerations.html":{}}}],["befored",{"_index":1831,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["beforehandl",{"_index":1537,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["bestätigen",{"_index":544,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["blacklist",{"_index":871,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["bodi",{"_index":352,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{},"classes/SimpleRequestCompat.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"miscellaneous/enumerations.html":{}}}],["body.access_token",{"_index":930,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["body['access_token",{"_index":929,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["boolean",{"_index":20,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/RequestHandler.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["boolean.html",{"_index":1716,"title":{},"body":{"classes/StringUtil.html":{}}}],["break",{"_index":395,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"classes/ParameterResolver.html":{},"interfaces/RouteMethod.html":{}}}],["buffer",{"_index":680,"title":{},"body":{"classes/Configuration.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["builder",{"_index":1967,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":2056,"title":{},"body":{"license.html":{}}}],["callback",{"_index":1898,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["case",{"_index":391,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RouteMethod.html":{}}}],["catch",{"_index":219,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AuthenticationService.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/EMailService.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"classes/RequestHandler.html":{}}}],["cbfunc",{"_index":1904,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["certif",{"_index":915,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["chang",{"_index":594,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["char",{"_index":401,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"classes/RequestHandler.html":{},"interfaces/Validation.html":{},"miscellaneous/variables.html":{}}}],["charg",{"_index":2065,"title":{},"body":{"license.html":{}}}],["charset=utf",{"_index":235,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RouteMethod.html":{}}}],["check",{"_index":153,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/BaseEncryptedDocument.html":{},"classes/DefaultJwtService.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/Validation.html":{},"classes/ValidationSchema.html":{},"miscellaneous/variables.html":{}}}],["check().isemail",{"_index":378,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["check(descriptor.nam",{"_index":1046,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["check(nam",{"_index":1797,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["claim",{"_index":2100,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/ExpressValidationResolver.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"classes/RequestUtil.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"classes/ValidationError.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/ExpressValidationResolver.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"overview.html":{}}}],["class.decor",{"_index":1233,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{}}}],["classdecor",{"_index":1232,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{}}}],["classdecorator.addrouteexpress(routemethod",{"_index":1499,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.addroutemethod",{"_index":1242,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["classdecorator.addroutesfastify(fastifyserv",{"_index":1503,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.addurl(routemethod",{"_index":1539,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.createurllistpage(fastifyserv",{"_index":1502,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.createurllistpage(rout",{"_index":1497,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.ensuremetadata(target",{"_index":1479,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.getcontroller(this.controllerclass",{"_index":1386,"title":{},"body":{"classes/RequestHandler.html":{}}}],["classdecorator.gethash(controllerclass",{"_index":1325,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["classdecorator.gethash(target",{"_index":1491,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.hash(control",{"_index":1486,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.hash(target",{"_index":1481,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.htmlstart}${classdecorator.urls}${classdecorator.htmlend",{"_index":1541,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.routemethod",{"_index":1498,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.routemethods.push",{"_index":1494,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.sethash(target",{"_index":1483,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.targets.get(controllerhash",{"_index":1487,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.targets.get(routemethod.targethash",{"_index":1509,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.targets.get(stringutil.hashcode(target.tostr",{"_index":1476,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.targets.has(targethash",{"_index":1492,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.targets.set(targethash",{"_index":1493,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classdecorator.url",{"_index":1540,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classhash",{"_index":1324,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["classinst",{"_index":1470,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["classmetadata",{"_index":1469,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["clazz",{"_index":566,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["clazz.findone(where).exec",{"_index":627,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["close",{"_index":1277,"title":{},"body":{"classes/MongoDbStarter.html":{},"classes/WistonFileTransport.html":{}}}],["close(callback",{"_index":1903,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["closelogfil",{"_index":1927,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["closelogfile(callback",{"_index":1896,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["come",{"_index":1442,"title":{},"body":{"classes/RequestHandler.html":{}}}],["compar",{"_index":266,"title":{},"body":{"classes/AjvInstance.html":{},"classes/BaseEncryptedDocument.html":{}}}],["compared",{"_index":268,"title":{},"body":{"classes/AjvInstance.html":{}}}],["complet",{"_index":903,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["compress",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["concat(routemethod.route.replac",{"_index":1514,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["condit",{"_index":1266,"title":{},"body":{"classes/MongoDbHelper.html":{},"license.html":{}}}],["config",{"_index":677,"title":{},"body":{"classes/Configuration.html":{},"classes/EMailService.html":{},"classes/ServerApplication.html":{}}}],["config/.env.${configuration.environ",{"_index":682,"title":{},"body":{"classes/Configuration.html":{}}}],["config/config",{"_index":167,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["config/env.${configuration.environ",{"_index":683,"title":{},"body":{"classes/Configuration.html":{}}}],["config/environ",{"_index":1144,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/RequestHandler.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["configfil",{"_index":679,"title":{},"body":{"classes/Configuration.html":{}}}],["configur",{"_index":166,"title":{"classes/Configuration.html":{}},"body":{"classes/AbstractStrategy.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/Configuration.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MongoDbStarter.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["configuration.environ",{"_index":659,"title":{},"body":{"classes/Configuration.html":{}}}],["configuration.get('auth_jwt_public_key",{"_index":1612,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.get('email_from",{"_index":1618,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.get('email_host",{"_index":1574,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.get('email_password",{"_index":1577,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.get('email_subject",{"_index":1620,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.get('email_us",{"_index":1576,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.get('log_level').tolowercas",{"_index":1168,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["configuration.get('login_endpoint",{"_index":185,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["configuration.get('mongodb_uri",{"_index":1608,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.get('mongoose_encrypt_secret",{"_index":1017,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["configuration.get('mongoose_encrypt_signkey",{"_index":1019,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["configuration.get('registration_endpoint",{"_index":187,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["configuration.getboolean('auth_email_confirmation_requir",{"_index":542,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["configuration.getboolean('email_ignore_tl",{"_index":1579,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.getboolean('email_require_tl",{"_index":1580,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.getboolean('email_secur",{"_index":1578,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.getboolean('enable_authent",{"_index":193,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["configuration.getboolean('enable_winston_logg",{"_index":1152,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["configuration.getboolean('use_fastifi",{"_index":1627,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.getboolean('use_mongoose_encrypt",{"_index":1013,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["configuration.getboolean('use_tingodb",{"_index":1014,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["configuration.getenviron",{"_index":1181,"title":{},"body":{"classes/LoggerWrapper.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["configuration.getnumber('email_port",{"_index":1575,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.getnumber('server_port",{"_index":1625,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.getobject('email_tl",{"_index":1581,"title":{},"body":{"classes/ServerApplication.html":{}}}],["configuration.getrawvalue('environ",{"_index":703,"title":{},"body":{"classes/Configuration.html":{}}}],["configuration.getrawvalue('node_env",{"_index":702,"title":{},"body":{"classes/Configuration.html":{}}}],["configuration.getrawvalue(nam",{"_index":660,"title":{},"body":{"classes/Configuration.html":{}}}],["configuration.init",{"_index":711,"title":{},"body":{"classes/Configuration.html":{}}}],["configuration.initenviron",{"_index":670,"title":{},"body":{"classes/Configuration.html":{}}}],["configuration.isinit",{"_index":669,"title":{},"body":{"classes/Configuration.html":{}}}],["confirm",{"_index":998,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["confirmationuuid",{"_index":997,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["connect",{"_index":1300,"title":{},"body":{"classes/MongoDbStarter.html":{},"interfaces/RouteMethod.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["connect(rout",{"_index":2032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["consid",{"_index":367,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["consol",{"_index":34,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractStrategy.html":{},"classes/AuthenticationService.html":{},"classes/Configuration.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/LocalJwtStrategy.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["console)[consolelevel",{"_index":1190,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["console.info",{"_index":1187,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["console.log",{"_index":1188,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["consolelevel",{"_index":1138,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["const",{"_index":37,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/ExpressValidationResolver.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"classes/SimpleRequestCompat.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/ExpressValidationResolver.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"classes/ValidationError.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["constructor(authenticationservic",{"_index":476,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["constructor(controllerclass",{"_index":1364,"title":{},"body":{"classes/RequestHandler.html":{}}}],["constructor(fastifyappl",{"_index":1649,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["constructor(fastifyrequest",{"_index":1668,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["constructor(from",{"_index":939,"title":{},"body":{"classes/EMailService.html":{}}}],["constructor(jwtservic",{"_index":88,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AuthenticationService.html":{}}}],["constructor(messag",{"_index":1777,"title":{},"body":{"classes/ValidationError.html":{},"classes/Validator.html":{}}}],["constructor(nam",{"_index":1792,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["constructor(opt",{"_index":1870,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["constructor(priv",{"_index":133,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/MongoDbStarter.html":{},"classes/RequestHandler.html":{},"classes/SimpleApplicationCompat.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["constructor(privatesigncert",{"_index":794,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["constructor(protect",{"_index":1683,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["constructor(tokendata",{"_index":1725,"title":{},"body":{"classes/Token.html":{}}}],["constructor(uri",{"_index":1280,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["constructor(whitelist",{"_index":143,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["contact",{"_index":880,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["contain",{"_index":574,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"interfaces/Validation.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":343,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/EMailService.html":{},"classes/ValidationError.html":{},"classes/Validator.html":{},"dependencies.html":{}}}],["contentnam",{"_index":1783,"title":{},"body":{"classes/ValidationError.html":{},"classes/Validator.html":{}}}],["contentparam",{"_index":341,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["contentquerybodi",{"_index":342,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["contentsecuritypolicybuild",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contenttyp",{"_index":325,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["contenttypes.length",{"_index":381,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["contract",{"_index":2105,"title":{},"body":{"license.html":{}}}],["control",{"_index":471,"title":{},"body":{"interfaces/AuthenticationConfig.html":{},"classes/RequestHandler.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{}}}],["controllerclass",{"_index":322,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"classes/MethodDecorator.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{}}}],["controllerclass.parametermetadata.methodname[paramdata",{"_index":1311,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["controllerclass[parameterdecorator.parametermetadata",{"_index":1313,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{}}}],["controllerclass[parameterdecorator.parametermetadata][methodnam",{"_index":1314,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{}}}],["controllerclass[parameterdecorator.parametermetadata][nam",{"_index":1316,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["controllerhash",{"_index":1485,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["cooki",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["copi",{"_index":2068,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2055,"title":{},"body":{"license.html":{}}}],["cor",{"_index":1971,"title":{},"body":{"dependencies.html":{}}}],["corpor",{"_index":2058,"title":{},"body":{"license.html":{}}}],["correct",{"_index":377,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/BaseEncryptedDocument.html":{},"classes/ExpressValidationResolver.html":{}}}],["corsserveruri",{"_index":1594,"title":{},"body":{"classes/ServerApplication.html":{}}}],["count",{"_index":1915,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["creat",{"_index":147,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/BaseEncryptedDocument.html":{}}}],["createfastifyroutingfunc",{"_index":1208,"title":{},"body":{"classes/MethodDecorator.html":{}}}],["createfastifyroutingfunc(controllerclass",{"_index":1218,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["createifnotexist",{"_index":1261,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["createifnotexists(condit",{"_index":1263,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["createkey",{"_index":1327,"title":{},"body":{"classes/ParameterDecorator.html":{}}}],["createkey(paramtyp",{"_index":1323,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["createmailopt",{"_index":934,"title":{},"body":{"classes/EMailService.html":{}}}],["createmailoptions(to",{"_index":956,"title":{},"body":{"classes/EMailService.html":{}}}],["createroutingfunc",{"_index":1209,"title":{},"body":{"classes/MethodDecorator.html":{}}}],["createroutingfunc(controllerclass",{"_index":1221,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["createtoken",{"_index":787,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{}}}],["createtoken(userid",{"_index":812,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{}}}],["createtransport",{"_index":973,"title":{},"body":{"classes/EMailService.html":{}}}],["createurllistpage(rout",{"_index":1538,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["creation",{"_index":874,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["credenti",{"_index":867,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["custom",{"_index":1816,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["d",{"_index":278,"title":{},"body":{"classes/AjvInstance.html":{}}}],["d*[.])?\\d",{"_index":303,"title":{},"body":{"classes/AjvInstance.html":{}}}],["d*\\.?\\d+|\\d+\\.?\\d*)(?:[ee",{"_index":277,"title":{},"body":{"classes/AjvInstance.html":{}}}],["d+(?:\\.\\d*)?(?:[ee",{"_index":299,"title":{},"body":{"classes/AjvInstance.html":{},"classes/RequestHandler.html":{}}}],["d+)?/g",{"_index":300,"title":{},"body":{"classes/AjvInstance.html":{},"classes/RequestHandler.html":{}}}],["damag",{"_index":2101,"title":{},"body":{"license.html":{}}}],["data",{"_index":1374,"title":{},"body":{"classes/RequestHandler.html":{}}}],["data.constructor",{"_index":1435,"title":{},"body":{"classes/RequestHandler.html":{}}}],["databas",{"_index":1299,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["database/export",{"_index":1601,"title":{},"body":{"classes/ServerApplication.html":{}}}],["datatyp",{"_index":712,"title":{"classes/DataType.html":{}},"body":{"classes/DataType.html":{},"classes/RequestHandler.html":{}}}],["datatype.isarray(valu",{"_index":765,"title":{},"body":{"classes/DataType.html":{}}}],["datatype.isboolean(valu",{"_index":767,"title":{},"body":{"classes/DataType.html":{}}}],["datatype.isdate(valu",{"_index":769,"title":{},"body":{"classes/DataType.html":{}}}],["datatype.iserror(valu",{"_index":771,"title":{},"body":{"classes/DataType.html":{}}}],["datatype.isfunction(valu",{"_index":773,"title":{},"body":{"classes/DataType.html":{}}}],["datatype.isjsonstring(valu",{"_index":757,"title":{},"body":{"classes/DataType.html":{}}}],["datatype.isnumber(valu",{"_index":763,"title":{},"body":{"classes/DataType.html":{}}}],["datatype.isobject(valu",{"_index":761,"title":{},"body":{"classes/DataType.html":{}}}],["datatype.isregexp(valu",{"_index":775,"title":{},"body":{"classes/DataType.html":{}}}],["datatype.isstring(data",{"_index":1421,"title":{},"body":{"classes/RequestHandler.html":{}}}],["datatype.isstring(valu",{"_index":759,"title":{},"body":{"classes/DataType.html":{}}}],["datatype.isundefined(valu",{"_index":755,"title":{},"body":{"classes/DataType.html":{}}}],["date",{"_index":752,"title":{},"body":{"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EmailConfirmation.html":{},"classes/RequestHandler.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["date(input).gettim",{"_index":269,"title":{},"body":{"classes/AjvInstance.html":{}}}],["day",{"_index":849,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["deal",{"_index":2071,"title":{},"body":{"license.html":{}}}],["debug",{"_index":33,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractStrategy.html":{},"classes/AuthenticationService.html":{},"classes/Configuration.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/WinstonLogger.html":{}}}],["debug(",{"_index":221,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AuthenticationService.html":{},"classes/Configuration.html":{},"classes/EMailService.html":{}}}],["debug('(proxi",{"_index":45,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["debug('authenticatejwtrequest",{"_index":1085,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["debug('cr",{"_index":1271,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["debug('jwt",{"_index":904,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["debug('messag",{"_index":989,"title":{},"body":{"classes/EMailService.html":{}}}],["debug('read",{"_index":692,"title":{},"body":{"classes/Configuration.html":{}}}],["debug('us",{"_index":1246,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["debug(err",{"_index":1405,"title":{},"body":{"classes/RequestHandler.html":{}}}],["decim",{"_index":414,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["decod",{"_index":834,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["decode(inputtoken",{"_index":902,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["decoded.head",{"_index":909,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["decoded.header.kid",{"_index":906,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["decoded.payload",{"_index":908,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["decoded.payload.exp",{"_index":907,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["decodetoken",{"_index":788,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{}}}],["decodetoken(inputtoken",{"_index":818,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{}}}],["decodetokenfromrequest",{"_index":789,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{}}}],["decodetokenfromrequest(head",{"_index":822,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{}}}],["decor",{"_index":481,"title":{},"body":{"classes/AuthenticationController.html":{},"classes/BaseEncryptedDocument.html":{},"classes/EmailConfirmation.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["decorators/methoddecor",{"_index":495,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["decorators/parameterdecor",{"_index":497,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["decorators/valid",{"_index":500,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["decoratortype@classname@methodnam",{"_index":1318,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["decrement",{"_index":347,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["decrypt",{"_index":587,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["default",{"_index":26,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"classes/Configuration.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/ExpressValidationResolver.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/ParameterDecorator.html":{},"classes/RequestHandler.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/ValidationError.html":{},"classes/ValidationSchema.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/variables.html":{}}}],["default_email_config",{"_index":932,"title":{},"body":{"classes/EMailService.html":{},"classes/ServerApplication.html":{}}}],["default_log_level",{"_index":1091,"title":{},"body":{"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["default_opt",{"_index":786,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["default_path",{"_index":1114,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["defaultarray",{"_index":643,"title":{},"body":{"classes/Configuration.html":{}}}],["defaultemailservic",{"_index":1566,"title":{},"body":{"classes/ServerApplication.html":{}}}],["defaulthead",{"_index":2116,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["defaultjwtservic",{"_index":783,"title":{"classes/DefaultJwtService.html":{}},"body":{"classes/DefaultJwtService.html":{},"classes/ServerApplication.html":{}}}],["defaultjwtservice(configuration.get('auth_jwt_private_key",{"_index":1611,"title":{},"body":{"classes/ServerApplication.html":{}}}],["defaultjwtservice.assumed_max_request_tim",{"_index":923,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["defaultjwtservice.default_opt",{"_index":885,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["defaultopt",{"_index":1857,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["defaultsubject",{"_index":940,"title":{},"body":{"classes/EMailService.html":{},"classes/ServerApplication.html":{}}}],["defaultvalu",{"_index":640,"title":{},"body":{"classes/Configuration.html":{}}}],["defin",{"_index":13,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"classes/RequestUtil.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"classes/ValidationError.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["defsubject",{"_index":1619,"title":{},"body":{"classes/ServerApplication.html":{}}}],["delay",{"_index":879,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["delet",{"_index":494,"title":{},"body":{"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/RequestHandler.html":{},"interfaces/RouteMethod.html":{},"miscellaneous/functions.html":{}}}],["delete(configuration.get('delete_account_endpoint",{"_index":509,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["delete(email",{"_index":516,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["delete(rout",{"_index":2033,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delete(undefin",{"_index":482,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["deleteaccount",{"_index":474,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["deleteaccount(@queryparam('email",{"_index":510,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["deleteaccount(email",{"_index":479,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["demo",{"_index":2050,"title":{},"body":{"index.html":{}}}],["depend",{"_index":1954,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descript",{"_index":149,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/EMailService.html":{}}}],["descriptor",{"_index":1042,"title":{},"body":{"classes/ExpressValidationResolver.html":{},"classes/MethodDecorator.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/RequestOptions.html":{}}}],["descriptor.nam",{"_index":1043,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["descriptor.paramtyp",{"_index":1344,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["descriptor.valid",{"_index":1045,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["descriptor.valu",{"_index":1244,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["descriptors.push",{"_index":1310,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["determinefiles",{"_index":1889,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["develop",{"_index":2023,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["development').tolowercas",{"_index":704,"title":{},"body":{"classes/Configuration.html":{}}}],["differ",{"_index":527,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["dir",{"_index":1025,"title":{},"body":{"interfaces/Endpoint.html":{},"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["direct",{"_index":1026,"title":{},"body":{"interfaces/Endpoint.html":{},"interfaces/Server.html":{}}}],["directori",{"_index":1561,"title":{},"body":{"interfaces/Server.html":{}}}],["disablecontentsecuritypolici",{"_index":1551,"title":{},"body":{"interfaces/Server.html":{}}}],["distribut",{"_index":2077,"title":{},"body":{"license.html":{}}}],["docid",{"_index":551,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["document",{"_index":578,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":339,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/LoggerWrapper.html":{},"interfaces/RouteMethod.html":{},"classes/WinstonLogger.html":{}}}],["done(errormsg",{"_index":363,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["dotenv",{"_index":658,"title":{},"body":{"classes/Configuration.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":686,"title":{},"body":{"classes/Configuration.html":{}}}],["dotenv.parse(configfil",{"_index":685,"title":{},"body":{"classes/Configuration.html":{}}}],["drawback",{"_index":1445,"title":{},"body":{"classes/RequestHandler.html":{}}}],["du",{"_index":878,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["e",{"_index":220,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AuthenticationService.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/EMailService.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{}}}],["e.g",{"_index":154,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/DefaultJwtService.html":{},"classes/ExpressValidationResolver.html":{}}}],["eleg",{"_index":1715,"title":{},"body":{"classes/StringUtil.html":{}}}],["email",{"_index":417,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/EMailService.html":{},"classes/ExpressValidationResolver.html":{},"classes/ServerApplication.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email.tolowercas",{"_index":539,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["email/email.servic",{"_index":521,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["email/export",{"_index":1602,"title":{},"body":{"classes/ServerApplication.html":{}}}],["emailconfirm",{"_index":995,"title":{"classes/EmailConfirmation.html":{}},"body":{"classes/EmailConfirmation.html":{}}}],["emailservic",{"_index":514,"title":{"classes/EMailService.html":{}},"body":{"classes/AuthenticationService.html":{},"classes/EMailService.html":{},"classes/ServerApplication.html":{}}}],["emailservice(fromaddress",{"_index":1622,"title":{},"body":{"classes/ServerApplication.html":{}}}],["emailservice.default_email_config",{"_index":975,"title":{},"body":{"classes/EMailService.html":{}}}],["empti",{"_index":432,"title":{},"body":{"classes/AjvValidationResolver.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/variables.html":{}}}],["encod",{"_index":810,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/Validation.html":{},"miscellaneous/variables.html":{}}}],["encodeurl",{"_index":1974,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["encrypt",{"_index":584,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"classes/EncryptedMongoDbHelper.html":{},"dependencies.html":{}}}],["encryptedmongodbhelp",{"_index":602,"title":{"classes/EncryptedMongoDbHelper.html":{}},"body":{"classes/BaseEncryptedDocument.html":{},"classes/EncryptedMongoDbHelper.html":{}}}],["encryptedmongodbhelper.getencopt",{"_index":604,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["encryptionkey",{"_index":1016,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["endpoint",{"_index":1023,"title":{"interfaces/Endpoint.html":{}},"body":{"interfaces/Endpoint.html":{},"interfaces/Server.html":{}}}],["ensuremetadata(target",{"_index":1506,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["enum",{"_index":750,"title":{},"body":{"classes/DataType.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["enumer",{"_index":2016,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":689,"title":{},"body":{"classes/Configuration.html":{},"classes/ServerApplication.html":{}}}],["env.startswith('fil",{"_index":691,"title":{},"body":{"classes/Configuration.html":{}}}],["env.substring(5",{"_index":693,"title":{},"body":{"classes/Configuration.html":{}}}],["env.tolowercas",{"_index":696,"title":{},"body":{"classes/Configuration.html":{}}}],["envconfig",{"_index":684,"title":{},"body":{"classes/Configuration.html":{}}}],["envconfig[key",{"_index":688,"title":{},"body":{"classes/Configuration.html":{}}}],["environ",{"_index":629,"title":{},"body":{"classes/Configuration.html":{},"classes/LoggerWrapper.html":{},"classes/RequestHandler.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/enumerations.html":{}}}],["environment.develop",{"_index":705,"title":{},"body":{"classes/Configuration.html":{},"classes/RequestHandler.html":{},"classes/ServerApplication.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["environment.oth",{"_index":708,"title":{},"body":{"classes/Configuration.html":{}}}],["environment.product",{"_index":707,"title":{},"body":{"classes/Configuration.html":{},"classes/LoggerWrapper.html":{},"interfaces/RouteMethod.html":{},"classes/WinstonLogger.html":{}}}],["environment.stag",{"_index":706,"title":{},"body":{"classes/Configuration.html":{}}}],["environment.test",{"_index":697,"title":{},"body":{"classes/Configuration.html":{}}}],["eol",{"_index":1850,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["err",{"_index":200,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/DefaultJwtService.html":{},"classes/RequestHandler.html":{}}}],["err.message.trim",{"_index":1407,"title":{},"body":{"classes/RequestHandler.html":{}}}],["error",{"_index":183,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbStarter.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/ValidationError.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/enumerations.html":{}}}],["error(",{"_index":992,"title":{},"body":{"classes/EMailService.html":{},"classes/MongoDbStarter.html":{}}}],["error('can",{"_index":914,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["error('intern",{"_index":534,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["error('invalid",{"_index":1087,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["error('no",{"_index":698,"title":{},"body":{"classes/Configuration.html":{}}}],["error('rsa",{"_index":838,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["error(err",{"_index":890,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["error).nestederror",{"_index":1430,"title":{},"body":{"classes/RequestHandler.html":{}}}],["error.param",{"_index":1429,"title":{},"body":{"classes/RequestHandler.html":{}}}],["errorhandl",{"_index":1976,"title":{},"body":{"dependencies.html":{}}}],["errorlist",{"_index":1428,"title":{},"body":{"classes/RequestHandler.html":{}}}],["errormsg",{"_index":72,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/LocalJwtStrategy.html":{}}}],["errorrequesthandl",{"_index":2121,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["errors.array",{"_index":1427,"title":{},"body":{"classes/RequestHandler.html":{}}}],["errors.concat(validationfunc.validate.error",{"_index":1786,"title":{},"body":{"classes/ValidationError.html":{},"classes/Validator.html":{}}}],["errors.concat(validator.validate.error",{"_index":354,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["errors.isempti",{"_index":1426,"title":{},"body":{"classes/RequestHandler.html":{}}}],["errors.join",{"_index":1787,"title":{},"body":{"classes/ValidationError.html":{},"classes/Validator.html":{}}}],["errors.length",{"_index":355,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ValidationError.html":{},"classes/Validator.html":{}}}],["escapehtml",{"_index":1358,"title":{},"body":{"classes/RequestHandler.html":{}}}],["escapehtml(valu",{"_index":1369,"title":{},"body":{"classes/RequestHandler.html":{}}}],["etc",{"_index":1189,"title":{},"body":{"classes/LoggerWrapper.html":{},"interfaces/Validation.html":{},"classes/WinstonLogger.html":{}}}],["event",{"_index":2097,"title":{},"body":{"license.html":{}}}],["exampl",{"_index":112,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/EMailService.html":{},"classes/LocalJwtStrategy.html":{}}}],["exclud",{"_index":468,"title":{},"body":{"interfaces/AuthenticationConfig.html":{}}}],["excludedpathsstr",{"_index":74,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["exec",{"_index":1269,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["executerequest",{"_index":1359,"title":{},"body":{"classes/RequestHandler.html":{}}}],["exist",{"_index":537,"title":{},"body":{"classes/AuthenticationService.html":{},"classes/MongoDbHelper.html":{},"miscellaneous/variables.html":{}}}],["existswithdot",{"_index":671,"title":{},"body":{"classes/Configuration.html":{}}}],["existswithoutdot",{"_index":673,"title":{},"body":{"classes/Configuration.html":{}}}],["exitonerror",{"_index":1170,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["exp",{"_index":845,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["expandvalidationfunc",{"_index":1032,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["expandvalidationfunc(paramvalid",{"_index":1035,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["expir",{"_index":877,"title":{},"body":{"classes/DefaultJwtService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["expiresin",{"_index":802,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["export",{"_index":35,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"classes/AuthenticationController.html":{},"interfaces/AuthenticationResult.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["exprequest",{"_index":1255,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["exprespons",{"_index":1257,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["express",{"_index":105,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"classes/LocalJwtStrategy.html":{},"classes/MethodDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["express.all(path",{"_index":197,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["express.express",{"_index":1496,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["express.use(path",{"_index":195,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["expressmiddlewar",{"_index":122,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{},"interfaces/PassportStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["expressrequesthandl",{"_index":1228,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["expressserv",{"_index":1603,"title":{},"body":{"classes/ServerApplication.html":{}}}],["expressserver(serverport",{"_index":1629,"title":{},"body":{"classes/ServerApplication.html":{}}}],["expressserver.us",{"_index":1500,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["expressvalidationresolv",{"_index":1030,"title":{"classes/ExpressValidationResolver.html":{}},"body":{"classes/ExpressValidationResolver.html":{}}}],["exrequest",{"_index":1682,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["extend",{"_index":68,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/ApplicationCompat.html":{},"classes/BaseEncryptedDocument.html":{},"classes/LocalJwtStrategy.html":{},"interfaces/PassportStrategy.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["fail",{"_index":533,"title":{},"body":{"classes/AuthenticationService.html":{},"classes/RequestHandler.html":{}}}],["fals",{"_index":28,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/ApplicationCompat.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/EMailService.html":{},"classes/LoggerWrapper.html":{},"classes/RequestHandler.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["fastifi",{"_index":357,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/MethodDecorator.html":{},"interfaces/PassportStrategy.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"classes/SimpleRequestCompat.html":{},"dependencies.html":{},"index.html":{}}}],["fastifyappl",{"_index":449,"title":{},"body":{"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{}}}],["fastifyinst",{"_index":2122,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["fastifymiddlewar",{"_index":2118,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["fastifyrepli",{"_index":1229,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"miscellaneous/typealiases.html":{}}}],["fastifyreq",{"_index":1466,"title":{},"body":{"interfaces/RouteMethod.html":{},"classes/SimpleRequestCompat.html":{},"miscellaneous/typealiases.html":{}}}],["fastifyrequest",{"_index":1230,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"classes/SimpleRequestCompat.html":{},"miscellaneous/typealiases.html":{}}}],["fastifyrequesthandl",{"_index":1220,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{}}}],["fastifyresp",{"_index":1467,"title":{},"body":{"interfaces/RouteMethod.html":{},"miscellaneous/typealiases.html":{}}}],["fastifyroutefunc",{"_index":1240,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{}}}],["fastifyserv",{"_index":447,"title":{},"body":{"classes/ApplicationCompat.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"miscellaneous/typealiases.html":{}}}],["fastifyserver(serverport",{"_index":1628,"title":{},"body":{"classes/ServerApplication.html":{}}}],["fastifyserver.rout",{"_index":1533,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["fatal",{"_index":1100,"title":{},"body":{"classes/LogLevels.html":{}}}],["fieldnam",{"_index":1791,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"classes/AuthenticationController.html":{},"interfaces/AuthenticationResult.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"dependencies.html":{},"license.html":{}}}],["filedesc",{"_index":1865,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["filenam",{"_index":1157,"title":{},"body":{"classes/LoggerWrapper.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["files",{"_index":1867,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["filetransport",{"_index":1146,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["find",{"_index":572,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["findbyproperti",{"_index":553,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["findbyproperties(properti",{"_index":565,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["findbyrefid",{"_index":554,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"classes/MongoDbHelper.html":{}}}],["findbyrefid(id",{"_index":570,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"classes/MongoDbHelper.html":{}}}],["first",{"_index":1195,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["fit",{"_index":2093,"title":{},"body":{"license.html":{}}}],["float",{"_index":1051,"title":{},"body":{"classes/ExpressValidationResolver.html":{},"interfaces/Validation.html":{},"miscellaneous/enumerations.html":{}}}],["follow",{"_index":2051,"title":{},"body":{"index.html":{},"license.html":{}}}],["form",{"_index":1317,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["format",{"_index":1128,"title":{},"body":{"classes/LoggerWrapper.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/WinstonLogger.html":{}}}],["formbodi",{"_index":1985,"title":{},"body":{"dependencies.html":{}}}],["found",{"_index":699,"title":{},"body":{"classes/Configuration.html":{},"classes/RequestHandler.html":{}}}],["free",{"_index":2064,"title":{},"body":{"license.html":{}}}],["fromaddress",{"_index":1617,"title":{},"body":{"classes/ServerApplication.html":{}}}],["fs",{"_index":657,"title":{},"body":{"classes/Configuration.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["fs.close(this.filedesc",{"_index":1897,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["fs.existssync(`./config/.env.${configuration.environ",{"_index":672,"title":{},"body":{"classes/Configuration.html":{}}}],["fs.existssync(`./config/env.${configuration.environ",{"_index":674,"title":{},"body":{"classes/Configuration.html":{}}}],["fs.open(this.options.filenam",{"_index":1886,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["fs.readfilesync(env.substring(5",{"_index":694,"title":{},"body":{"classes/Configuration.html":{}}}],["fs.readfilesync(existswithdot",{"_index":681,"title":{},"body":{"classes/Configuration.html":{}}}],["fs.statsync(this.options.filenam",{"_index":1894,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["fs.write(this.filedesc",{"_index":1909,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["fshelper",{"_index":1147,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{},"miscellaneous/variables.html":{}}}],["fshelper.mkdirsync(dir",{"_index":1165,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["function",{"_index":53,"title":{"miscellaneous/functions.html":{}},"body":{"classes/AbstractCompatProxy.html":{},"classes/DataType.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/InternalServer.html":{},"classes/LoggerWrapper.html":{},"classes/RequestHandler.html":{},"interfaces/RouteMethod.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["furnish",{"_index":2082,"title":{},"body":{"license.html":{}}}],["get",{"_index":2046,"title":{"index.html":{},"license.html":{}},"body":{}}],["get(nam",{"_index":452,"title":{},"body":{"classes/ApplicationCompat.html":{},"classes/Configuration.html":{},"classes/SimpleApplicationCompat.html":{}}}],["get(rout",{"_index":2034,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaccesstoken",{"_index":1719,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getarray",{"_index":631,"title":{},"body":{"classes/Configuration.html":{}}}],["getarray(nam",{"_index":642,"title":{},"body":{"classes/Configuration.html":{}}}],["getauthfunc",{"_index":82,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["getbasehttpclass",{"_index":10,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["getboolean",{"_index":632,"title":{},"body":{"classes/Configuration.html":{}}}],["getboolean(nam",{"_index":645,"title":{},"body":{"classes/Configuration.html":{}}}],["getclient",{"_index":1742,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getcompatinst",{"_index":11,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["getcompatinstance(typ",{"_index":17,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["getcont",{"_index":310,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["getcontents(contenttyp",{"_index":323,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["getcontroller(target",{"_index":1489,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["getdecoratorfunc",{"_index":1210,"title":{},"body":{"classes/MethodDecorator.html":{},"classes/ParameterDecorator.html":{}}}],["getdecoratorfunc(paramtyp",{"_index":1307,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["getdecoratorfunc(rout",{"_index":1223,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{}}}],["getdefaultemailservic",{"_index":1569,"title":{},"body":{"classes/ServerApplication.html":{}}}],["getdefaultjwtservic",{"_index":1570,"title":{},"body":{"classes/ServerApplication.html":{}}}],["getemailservic",{"_index":1571,"title":{},"body":{"classes/ServerApplication.html":{}}}],["getemailservice(from",{"_index":1591,"title":{},"body":{"classes/ServerApplication.html":{}}}],["getencopt",{"_index":1004,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["getencplugin",{"_index":1005,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["getenviron",{"_index":633,"title":{},"body":{"classes/Configuration.html":{}}}],["getexpir",{"_index":1720,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getfiles",{"_index":1892,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["getformat",{"_index":1116,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["gethash(target",{"_index":1482,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["gethead",{"_index":1721,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getid",{"_index":555,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["getinst",{"_index":243,"title":{},"body":{"classes/AjvInstance.html":{},"classes/ApplicationCompat.html":{},"classes/LoggerWrapper.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/WinstonLogger.html":{}}}],["getinstance(fastifyappl",{"_index":446,"title":{},"body":{"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{}}}],["getinstance(fastifyrequest",{"_index":1678,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["getkid",{"_index":1722,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getmiddlewar",{"_index":83,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{},"interfaces/PassportStrategy.html":{}}}],["getnumb",{"_index":634,"title":{},"body":{"classes/Configuration.html":{}}}],["getnumber(nam",{"_index":648,"title":{},"body":{"classes/Configuration.html":{}}}],["getobject",{"_index":635,"title":{},"body":{"classes/Configuration.html":{}}}],["getobject(nam",{"_index":650,"title":{},"body":{"classes/Configuration.html":{}}}],["getparam",{"_index":1334,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["getparamet",{"_index":1453,"title":{},"body":{"classes/RequestUtil.html":{}}}],["getparameter(nam",{"_index":1456,"title":{},"body":{"classes/RequestUtil.html":{}}}],["getparams(controllerclass",{"_index":1337,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["getpathparamet",{"_index":1454,"title":{},"body":{"classes/RequestUtil.html":{}}}],["getpathparameter(nam",{"_index":1458,"title":{},"body":{"classes/RequestUtil.html":{}}}],["getpayload",{"_index":1723,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getprivatecert",{"_index":1642,"title":{},"body":{"interfaces/SignCertService.html":{}}}],["getprivatecert(kid",{"_index":1644,"title":{},"body":{"interfaces/SignCertService.html":{}}}],["getproxi",{"_index":12,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["getproxy(typ",{"_index":29,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["getproxyinst",{"_index":440,"title":{},"body":{"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["getproxyinstance(fastifyappl",{"_index":450,"title":{},"body":{"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{}}}],["getproxyinstance(fastifyrequest",{"_index":1680,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["getpubliccert",{"_index":1643,"title":{},"body":{"interfaces/SignCertService.html":{}}}],["getpubliccert(kid",{"_index":1646,"title":{},"body":{"interfaces/SignCertService.html":{}}}],["getrawvalu",{"_index":636,"title":{},"body":{"classes/Configuration.html":{}}}],["getrawvalue(nam",{"_index":653,"title":{},"body":{"classes/Configuration.html":{}}}],["getrealm",{"_index":1740,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getresponsetyp",{"_index":84,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["getresponsetype(accepthead",{"_index":124,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["getserv",{"_index":1572,"title":{},"body":{"classes/ServerApplication.html":{}}}],["getserver(port",{"_index":1593,"title":{},"body":{"classes/ServerApplication.html":{}}}],["getserverlogg",{"_index":1117,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["getsigncert",{"_index":790,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["getsigncert(ispriv",{"_index":825,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["getstrategynam",{"_index":85,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["gettokenfromrequest",{"_index":791,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["gettokenfromrequest(head",{"_index":828,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["gettransport",{"_index":1118,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["gettransports(format",{"_index":1131,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["gettyp",{"_index":714,"title":{},"body":{"classes/DataType.html":{}}}],["gettype(valu",{"_index":726,"title":{},"body":{"classes/DataType.html":{}}}],["getuserid",{"_index":1724,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["getvalidationfunc",{"_index":1803,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["getvalidationfunct",{"_index":311,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["getvalidationfunction(controllerclass",{"_index":326,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["getvalidationrul",{"_index":1033,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["getvalidationrules(controllerclass",{"_index":1037,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["global.promis",{"_index":1287,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["grant",{"_index":2063,"title":{},"body":{"license.html":{}}}],["gt",{"_index":1449,"title":{},"body":{"classes/RequestHandler.html":{}}}],["handleexcept",{"_index":1184,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["handler",{"_index":1535,"title":{},"body":{"interfaces/RouteMethod.html":{},"interfaces/Server.html":{}}}],["haschang",{"_index":556,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["haschanged(propnam",{"_index":582,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["hash",{"_index":593,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"interfaces/RouteMethod.html":{},"classes/StringUtil.html":{}}}],["hash(target",{"_index":1504,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["hashcod",{"_index":1706,"title":{},"body":{"classes/StringUtil.html":{}}}],["hashcode(text",{"_index":1709,"title":{},"body":{"classes/StringUtil.html":{}}}],["head",{"_index":1525,"title":{},"body":{"interfaces/RouteMethod.html":{},"miscellaneous/functions.html":{}}}],["head(rout",{"_index":2035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["header",{"_index":824,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{},"classes/SimpleRequestCompat.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["headers['author",{"_index":924,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["helmet",{"_index":1029,"title":{},"body":{"interfaces/Endpoint.html":{},"interfaces/Server.html":{}}}],["here",{"_index":842,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["herebi",{"_index":2062,"title":{},"body":{"license.html":{}}}],["hold",{"_index":592,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["holder",{"_index":2098,"title":{},"body":{"license.html":{}}}],["host",{"_index":947,"title":{},"body":{"classes/EMailService.html":{},"classes/ServerApplication.html":{},"interfaces/SmtpData.html":{}}}],["html",{"_index":964,"title":{},"body":{"classes/EMailService.html":{}}}],["htmlend",{"_index":1474,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["htmlstart",{"_index":1473,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["http",{"_index":1227,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"classes/SimpleRequestCompat.html":{}}}],["httpmethod",{"_index":1213,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{}}}],["https://bloomlab.blogspot.com/2018/06/typescript",{"_index":1713,"title":{},"body":{"classes/StringUtil.html":{}}}],["https://en.wikipedia.org/wiki/iso_8601",{"_index":1768,"title":{},"body":{"interfaces/Validation.html":{}}}],["https://github.com/anhoev/tungu",{"_index":2010,"title":{},"body":{"dependencies.html":{}}}],["https://github.com/sparkassen",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["https://github.com/zeit/ms.j",{"_index":853,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["https://stackoverflow.com/questions/43291659/usag",{"_index":854,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["hub/ahoi",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["iat",{"_index":873,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["id",{"_index":552,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"classes/DefaultJwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/MongoDbHelper.html":{}}}],["ids[key",{"_index":613,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["ignoretl",{"_index":952,"title":{},"body":{"classes/EMailService.html":{},"classes/ServerApplication.html":{},"interfaces/SmtpData.html":{}}}],["ihelmetcontentsecuritypolicydirect",{"_index":1028,"title":{},"body":{"interfaces/Endpoint.html":{},"interfaces/Server.html":{}}}],["ik",{"_index":1436,"title":{},"body":{"classes/RequestHandler.html":{}}}],["implement",{"_index":141,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/DefaultJwtService.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{}}}],["impli",{"_index":2091,"title":{},"body":{"license.html":{}}}],["import",{"_index":32,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["includ",{"_index":2074,"title":{},"body":{"license.html":{}}}],["incomingmessag",{"_index":1225,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"classes/SimpleRequestCompat.html":{}}}],["increment",{"_index":346,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"classes/AuthenticationController.html":{},"interfaces/AuthenticationResult.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"classes/AuthenticationController.html":{},"interfaces/AuthenticationResult.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["info('add",{"_index":1515,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["info('clos",{"_index":1298,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["info('environ",{"_index":709,"title":{},"body":{"classes/Configuration.html":{}}}],["info('us",{"_index":675,"title":{},"body":{"classes/Configuration.html":{}}}],["info.level",{"_index":1177,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["info.messag",{"_index":1178,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["info.timestamp",{"_index":1176,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["inform",{"_index":1621,"title":{},"body":{"classes/ServerApplication.html":{}}}],["inherit",{"_index":93,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/ApplicationCompat.html":{},"classes/LocalJwtStrategy.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["init",{"_index":244,"title":{},"body":{"classes/AjvInstance.html":{},"classes/Configuration.html":{},"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["initdir",{"_index":1119,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["initenviron",{"_index":637,"title":{},"body":{"classes/Configuration.html":{}}}],["initlogg",{"_index":1120,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["initmodel",{"_index":557,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["initshutdownlisten",{"_index":1278,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["initsmtpserv",{"_index":935,"title":{},"body":{"classes/EMailService.html":{}}}],["initsmtpserver(smtpdata",{"_index":960,"title":{},"body":{"classes/EMailService.html":{}}}],["inittargetobject",{"_index":1328,"title":{},"body":{"classes/ParameterDecorator.html":{}}}],["inittargetobject(paramtyp",{"_index":1312,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["input",{"_index":267,"title":{},"body":{"classes/AjvInstance.html":{}}}],["inputtoken",{"_index":821,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{}}}],["insecurecont",{"_index":1027,"title":{},"body":{"interfaces/Endpoint.html":{}}}],["instanc",{"_index":148,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/RequestHandler.html":{}}}],["instancemethod",{"_index":580,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["instanceof",{"_index":779,"title":{},"body":{"classes/DataType.html":{},"classes/RequestHandler.html":{},"interfaces/RouteMethod.html":{}}}],["instancetyp",{"_index":1272,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["interfac",{"_index":464,"title":{"interfaces/AuthenticationConfig.html":{},"interfaces/AuthenticationResult.html":{},"interfaces/Endpoint.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"interfaces/ParamDescriptor.html":{},"interfaces/PassportStrategy.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"interfaces/SignCertService.html":{},"interfaces/SmtpData.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"interfaces/WinstonFileTransportOptions.html":{}},"body":{"interfaces/AuthenticationConfig.html":{},"interfaces/AuthenticationResult.html":{},"classes/AuthenticationService.html":{},"classes/DefaultJwtService.html":{},"interfaces/Endpoint.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"classes/MethodDecorator.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"interfaces/PassportStrategy.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"interfaces/SignCertService.html":{},"interfaces/SmtpData.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{},"overview.html":{}}}],["intern",{"_index":591,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["internalserv",{"_index":1054,"title":{"interfaces/InternalServer.html":{}},"body":{"interfaces/InternalServer.html":{}}}],["invalid",{"_index":900,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["isalpha",{"_index":1749,"title":{},"body":{"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["isalphanumer",{"_index":1751,"title":{},"body":{"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["isarray",{"_index":715,"title":{},"body":{"classes/DataType.html":{}}}],["isarray(valu",{"_index":728,"title":{},"body":{"classes/DataType.html":{}}}],["isascii",{"_index":1752,"title":{},"body":{"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["isauthctrlset",{"_index":1567,"title":{},"body":{"classes/ServerApplication.html":{}}}],["isbase64",{"_index":1753,"title":{},"body":{"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["isbefor",{"_index":1756,"title":{},"body":{"interfaces/Validation.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["isbefore(befored",{"_index":1810,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["isboolean",{"_index":716,"title":{},"body":{"classes/DataType.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["isboolean(valu",{"_index":730,"title":{},"body":{"classes/DataType.html":{}}}],["isclos",{"_index":1869,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["isdat",{"_index":717,"title":{},"body":{"classes/DataType.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["isdate(valu",{"_index":732,"title":{},"body":{"classes/DataType.html":{}}}],["isdebug",{"_index":1204,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["isdebuglevel",{"_index":1199,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["isdecim",{"_index":1763,"title":{},"body":{"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["isdis",{"_index":1868,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["isemail",{"_index":1764,"title":{},"body":{"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["isempti",{"_index":1812,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["iserror",{"_index":718,"title":{},"body":{"classes/DataType.html":{},"classes/RequestHandler.html":{}}}],["iserror(valu",{"_index":734,"title":{},"body":{"classes/DataType.html":{}}}],["isexclud",{"_index":86,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["isexcluded(path",{"_index":128,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{}}}],["isexpir",{"_index":792,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["isexpired(token",{"_index":830,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["isfloat",{"_index":1765,"title":{},"body":{"interfaces/Validation.html":{},"miscellaneous/enumerations.html":{}}}],["isfunct",{"_index":719,"title":{},"body":{"classes/DataType.html":{}}}],["isfunction(valu",{"_index":736,"title":{},"body":{"classes/DataType.html":{}}}],["ishtml",{"_index":957,"title":{},"body":{"classes/EMailService.html":{}}}],["isinit",{"_index":630,"title":{},"body":{"classes/Configuration.html":{}}}],["isiso8601",{"_index":1769,"title":{},"body":{"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["isjson",{"_index":1360,"title":{},"body":{"classes/RequestHandler.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["isjson(data",{"_index":1372,"title":{},"body":{"classes/RequestHandler.html":{}}}],["isjsonstr",{"_index":720,"title":{},"body":{"classes/DataType.html":{}}}],["isjsonstring(valu",{"_index":738,"title":{},"body":{"classes/DataType.html":{}}}],["isloglevel",{"_index":1092,"title":{},"body":{"classes/LogLevels.html":{}}}],["isloglevel(loglevel",{"_index":1104,"title":{},"body":{"classes/LogLevels.html":{}}}],["ismodifi",{"_index":589,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["isnan(number(valu",{"_index":662,"title":{},"body":{"classes/Configuration.html":{}}}],["isnotempti",{"_index":1813,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["isnumb",{"_index":721,"title":{},"body":{"classes/DataType.html":{}}}],["isnumber(valu",{"_index":740,"title":{},"body":{"classes/DataType.html":{}}}],["isnumer",{"_index":1771,"title":{},"body":{"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["iso",{"_index":1766,"title":{},"body":{"interfaces/Validation.html":{},"miscellaneous/variables.html":{}}}],["iso8601",{"_index":421,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/Validation.html":{},"miscellaneous/enumerations.html":{}}}],["isobject",{"_index":722,"title":{},"body":{"classes/DataType.html":{}}}],["isobject(valu",{"_index":742,"title":{},"body":{"classes/DataType.html":{}}}],["ispriv",{"_index":827,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["isregexp",{"_index":723,"title":{},"body":{"classes/DataType.html":{}}}],["isregexp(valu",{"_index":744,"title":{},"body":{"classes/DataType.html":{}}}],["isrequir",{"_index":1790,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["iss",{"_index":864,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["isstr",{"_index":724,"title":{},"body":{"classes/DataType.html":{}}}],["isstring(valu",{"_index":746,"title":{},"body":{"classes/DataType.html":{}}}],["issuer",{"_index":863,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["isundefin",{"_index":725,"title":{},"body":{"classes/DataType.html":{}}}],["isundefined(valu",{"_index":748,"title":{},"body":{"classes/DataType.html":{}}}],["isuuid",{"_index":1773,"title":{},"body":{"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["isvalid",{"_index":1385,"title":{},"body":{"classes/RequestHandler.html":{}}}],["iswrit",{"_index":1866,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["item",{"_index":573,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"classes/MongoDbHelper.html":{}}}],["json",{"_index":424,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/DefaultJwtService.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/JwtService.html":{},"classes/RequestHandler.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["json.pars",{"_index":1770,"title":{},"body":{"interfaces/Validation.html":{}}}],["json.parse(valu",{"_index":666,"title":{},"body":{"classes/Configuration.html":{},"classes/DataType.html":{}}}],["json.stringifi",{"_index":182,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["jsondata",{"_index":1420,"title":{},"body":{"classes/RequestHandler.html":{}}}],["jsonstr",{"_index":753,"title":{},"body":{"classes/DataType.html":{},"miscellaneous/enumerations.html":{}}}],["jsontyp",{"_index":229,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["jsonwebtoken",{"_index":836,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{},"dependencies.html":{}}}],["jti",{"_index":869,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["jwt",{"_index":840,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["jwt.servic",{"_index":525,"title":{},"body":{"classes/AuthenticationService.html":{},"classes/DefaultJwtService.html":{}}}],["jwtid",{"_index":868,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["jwtservic",{"_index":89,"title":{"interfaces/JwtService.html":{}},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AuthenticationService.html":{},"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{},"classes/ServerApplication.html":{}}}],["key",{"_index":44,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DefaultJwtService.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/RequestHandler.html":{}}}],["keyid",{"_index":844,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["kid",{"_index":815,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{},"interfaces/SignCertService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["kind",{"_index":2090,"title":{},"body":{"license.html":{}}}],["length",{"_index":275,"title":{},"body":{"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/MethodDecorator.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{}}}],["letter",{"_index":393,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/Validation.html":{},"miscellaneous/variables.html":{}}}],["level",{"_index":1137,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["liabil",{"_index":2102,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":2099,"title":{},"body":{"license.html":{}}}],["licens",{"_index":2052,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":2075,"title":{},"body":{"license.html":{}}}],["line",{"_index":274,"title":{},"body":{"classes/AjvInstance.html":{},"classes/MethodDecorator.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{}}}],["line:max",{"_index":273,"title":{},"body":{"classes/AjvInstance.html":{},"classes/MethodDecorator.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{}}}],["line:no",{"_index":345,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["link",{"_index":188,"title":{},"body":{"classes/AbstractStrategy.html":{},"interfaces/RouteMethod.html":{}}}],["list",{"_index":150,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/DefaultJwtService.html":{}}}],["liter",{"_index":469,"title":{},"body":{"interfaces/AuthenticationConfig.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/Validator.html":{},"classes/WinstonLogger.html":{},"miscellaneous/typealiases.html":{}}}],["local",{"_index":2001,"title":{},"body":{"dependencies.html":{}}}],["localauth",{"_index":1066,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["localhost",{"_index":948,"title":{},"body":{"classes/EMailService.html":{},"classes/ServerApplication.html":{}}}],["localjwtstrategi",{"_index":1063,"title":{"classes/LocalJwtStrategy.html":{}},"body":{"classes/LocalJwtStrategy.html":{},"classes/ServerApplication.html":{}}}],["localjwtstrategy(this.defaultjwtservic",{"_index":1632,"title":{},"body":{"classes/ServerApplication.html":{}}}],["localjwtstrategy.strategynam",{"_index":1082,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["lodash",{"_index":1989,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1124,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"dependencies.html":{}}}],["log(info",{"_index":1899,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["logdir",{"_index":1115,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["logform",{"_index":1141,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["logger",{"_index":1140,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["logger)[level]('%o",{"_index":1194,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["logger)[level](first",{"_index":1197,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["logger/winstonlogg",{"_index":1231,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"classes/ServerApplication.html":{}}}],["loggerstream",{"_index":1156,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["loggerstream.logstring(messag",{"_index":1162,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["loggerwrapp",{"_index":1112,"title":{"classes/LoggerWrapper.html":{}},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["loggerwrapper.default_log_level",{"_index":1169,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["loggerwrapper.default_path",{"_index":1164,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["loggerwrapper.getinst",{"_index":1201,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["loggerwrapper.loggerwrapp",{"_index":1155,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["login",{"_index":155,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{}}}],["login(email",{"_index":518,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["loginpath",{"_index":144,"title":{},"body":{"classes/AbstractStrategy.html":{},"interfaces/AuthenticationConfig.html":{},"classes/ServerApplication.html":{}}}],["loginus",{"_index":475,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["loginuser(@queryparam('email",{"_index":507,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["loginuser(email",{"_index":484,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["loglevel",{"_index":1088,"title":{"classes/LogLevels.html":{}},"body":{"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["loglevels.allowedloglevel",{"_index":1106,"title":{},"body":{"classes/LogLevels.html":{}}}],["loglevels.default_log_level",{"_index":1109,"title":{},"body":{"classes/LogLevels.html":{}}}],["loglevels.isloglevel(level",{"_index":1191,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["loglevels.loglevels.get((configuration.get('log_level",{"_index":1107,"title":{},"body":{"classes/LogLevels.html":{}}}],["loglevels.loglevels.get(allowedloglevel.touppercas",{"_index":1111,"title":{},"body":{"classes/LogLevels.html":{}}}],["loglevels.loglevels.get(loglevel.touppercas",{"_index":1110,"title":{},"body":{"classes/LogLevels.html":{}}}],["logstr",{"_index":1928,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["logstring(messag",{"_index":1901,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["mailopt",{"_index":968,"title":{},"body":{"classes/EMailService.html":{}}}],["malform",{"_index":917,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["mandatori",{"_index":839,"title":{},"body":{"classes/DefaultJwtService.html":{},"classes/ExpressValidationResolver.html":{}}}],["map",{"_index":444,"title":{},"body":{"classes/ApplicationCompat.html":{},"classes/LogLevels.html":{},"interfaces/RouteMethod.html":{},"classes/SimpleApplicationCompat.html":{}}}],["match",{"_index":65,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"classes/AuthenticationController.html":{},"interfaces/AuthenticationResult.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":945,"title":{},"body":{"classes/EMailService.html":{}}}],["maxfil",{"_index":1851,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["maxmsgcount",{"_index":1862,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["maxsiz",{"_index":1852,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["mb",{"_index":1860,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["meaning",{"_index":546,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["memberof",{"_index":171,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/BaseEncryptedDocument.html":{},"classes/DefaultJwtService.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["merchant",{"_index":2092,"title":{},"body":{"license.html":{}}}],["merg",{"_index":383,"title":{},"body":{"classes/AjvValidationResolver.html":{},"license.html":{}}}],["messag",{"_index":316,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/AuthenticationService.html":{},"classes/ExpressValidationResolver.html":{},"classes/LoggerWrapper.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["metadata",{"_index":1320,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["method",{"_index":7,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["methoddecor",{"_index":1205,"title":{"classes/MethodDecorator.html":{}},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["methoddecorator.addroute(rout",{"_index":1235,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["methoddecorator.createfastifyroutingfunc(controllerclass",{"_index":1241,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["methoddecorator.createroutingfunc(controllerclass",{"_index":1239,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["methodnam",{"_index":320,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"classes/MethodDecorator.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{}}}],["microsoft",{"_index":2057,"title":{},"body":{"license.html":{}}}],["middlewar",{"_index":1056,"title":{},"body":{"interfaces/InternalServer.html":{},"interfaces/Server.html":{},"miscellaneous/typealiases.html":{}}}],["mime",{"_index":1992,"title":{},"body":{"dependencies.html":{}}}],["miscellan",{"_index":2015,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":916,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["mit",{"_index":2054,"title":{},"body":{"index.html":{},"license.html":{}}}],["mkdir",{"_index":1994,"title":{},"body":{"dependencies.html":{}}}],["model",{"_index":567,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/MongoDbHelper.html":{}}}],["model.initmodel",{"_index":1021,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["model.isnew",{"_index":1020,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["model.updatemodified(model",{"_index":1022,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["modelclazz",{"_index":1264,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["modelclazz.create(condit",{"_index":1273,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["modelclazz.findon",{"_index":1268,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["modelclazz.findone(conditions).exec",{"_index":1270,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["models/authus",{"_index":524,"title":{},"body":{"classes/AuthenticationService.html":{},"classes/LocalJwtStrategy.html":{}}}],["models/token",{"_index":130,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{}}}],["modifi",{"_index":609,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"license.html":{}}}],["modul",{"_index":2110,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mongodb",{"_index":1292,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["mongodbhelp",{"_index":1259,"title":{"classes/MongoDbHelper.html":{}},"body":{"classes/MongoDbHelper.html":{}}}],["mongodbstart",{"_index":1275,"title":{"classes/MongoDbStarter.html":{}},"body":{"classes/MongoDbStarter.html":{},"classes/ServerApplication.html":{}}}],["mongodbstarter(configuration.get('mongodb_uri')).start",{"_index":1609,"title":{},"body":{"classes/ServerApplication.html":{}}}],["mongoos",{"_index":590,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"dependencies.html":{}}}],["mongoose.connect(this.uri",{"_index":1289,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["mongoose.connection.clos",{"_index":1301,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["mongoose.disconnect",{"_index":1302,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["mongoose.promis",{"_index":1286,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["mongoosedocu",{"_index":1012,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["more",{"_index":545,"title":{},"body":{"classes/AuthenticationService.html":{},"classes/RequestHandler.html":{}}}],["morgan",{"_index":1142,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{},"dependencies.html":{}}}],["morgan('combin",{"_index":1159,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["msg",{"_index":388,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["msgbuffer",{"_index":1864,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["msgcount",{"_index":1863,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["multer",{"_index":1998,"title":{},"body":{"dependencies.html":{}}}],["mustermann",{"_index":946,"title":{},"body":{"classes/EMailService.html":{}}}],["name",{"_index":23,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"classes/RequestUtil.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/functions.html":{}}}],["nbf",{"_index":855,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["nestederror",{"_index":1431,"title":{},"body":{"classes/RequestHandler.html":{}}}],["nestederror.loc",{"_index":1432,"title":{},"body":{"classes/RequestHandler.html":{}}}],["nestederror.valu",{"_index":1433,"title":{},"body":{"classes/RequestHandler.html":{}}}],["new",{"_index":41,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/ApplicationCompat.html":{},"classes/AuthenticationService.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/WinstonLogger.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":199,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/MethodDecorator.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["next(err",{"_index":208,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["nextfunc",{"_index":168,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/LoggerWrapper.html":{},"interfaces/RouteMethod.html":{},"classes/WinstonLogger.html":{},"miscellaneous/typealiases.html":{}}}],["node",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["nodemail",{"_index":974,"title":{},"body":{"classes/EMailService.html":{},"dependencies.html":{}}}],["noninfring",{"_index":2096,"title":{},"body":{"license.html":{}}}],["notbefor",{"_index":857,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["note",{"_index":1438,"title":{},"body":{"classes/RequestHandler.html":{},"interfaces/Validation.html":{}}}],["notempti",{"_index":1814,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["notic",{"_index":2084,"title":{},"body":{"license.html":{}}}],["notimestamp",{"_index":872,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["now",{"_index":408,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["null",{"_index":123,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AuthenticationService.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/MethodDecorator.html":{},"interfaces/PassportStrategy.html":{},"interfaces/RequestOptions.html":{},"classes/ServerApplication.html":{},"classes/StringUtil.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["number",{"_index":397,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/ExpressValidationResolver.html":{},"classes/LogLevels.html":{},"classes/MethodDecorator.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["number(valu",{"_index":663,"title":{},"body":{"classes/Configuration.html":{}}}],["number.isfinite(valu",{"_index":781,"title":{},"body":{"classes/DataType.html":{}}}],["numer",{"_index":427,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["o",{"_index":1086,"title":{},"body":{"classes/LocalJwtStrategy.html":{},"classes/MongoDbHelper.html":{}}}],["object",{"_index":651,"title":{},"body":{"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{},"classes/LoggerWrapper.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/RequestHandler.html":{},"classes/ServerApplication.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/WinstonLogger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.assign.apply(nul",{"_index":356,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["object.getownpropertydescriptors(this)['_doc']['valu",{"_index":611,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["object.getownpropertydescriptors(this)['_doc']['value']['_id",{"_index":610,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["object.getownpropertydescriptors(this)['_doc']['value'][propnam",{"_index":606,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["obtain",{"_index":2067,"title":{},"body":{"license.html":{}}}],["ok",{"_index":1434,"title":{},"body":{"classes/RequestHandler.html":{}}}],["on",{"_index":843,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["openlogfil",{"_index":1929,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["openlogfile(determinefiles",{"_index":1885,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["opt",{"_index":884,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["option",{"_index":25,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"classes/AuthenticationController.html":{},"interfaces/AuthenticationResult.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/functions.html":{}}}],["options(rout",{"_index":2036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["options.eol",{"_index":1875,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["options.error",{"_index":1251,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["options.success",{"_index":1250,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["options.typ",{"_index":1252,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["options.valid",{"_index":1237,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["opts.subject",{"_index":886,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["originalmethod",{"_index":1243,"title":{},"body":{"classes/MethodDecorator.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{}}}],["os",{"_index":1853,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["os.eol",{"_index":1876,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["otherwis",{"_index":2107,"title":{},"body":{"license.html":{}}}],["out",{"_index":2109,"title":{},"body":{"license.html":{}}}],["overview",{"_index":2111,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1953,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1390,"title":{},"body":{"classes/RequestHandler.html":{}}}],["param",{"_index":170,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/BaseEncryptedDocument.html":{},"classes/EMailService.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/RequestHandler.html":{},"classes/SimpleRequestCompat.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"miscellaneous/enumerations.html":{}}}],["paramdecor",{"_index":1322,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["paramdescriptor",{"_index":335,"title":{"interfaces/ParamDescriptor.html":{}},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{}}}],["paramet",{"_index":22,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"classes/RequestUtil.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"classes/ValidationError.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["parameter.decor",{"_index":337,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{}}}],["parameter.nam",{"_index":368,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["parameter.paramtyp",{"_index":372,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["parameter.valid",{"_index":369,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["parameterdecor",{"_index":1305,"title":{"classes/ParameterDecorator.html":{}},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{}}}],["parameterdecorator.createkey(paramtyp",{"_index":1315,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["parameterdecorator.inittargetobject(paramtyp",{"_index":1309,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["parametermetadata",{"_index":1306,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["parameterresolv",{"_index":338,"title":{"classes/ParameterResolver.html":{}},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{}}}],["parameterresolver.getparams(controllerclass",{"_index":366,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"classes/ParameterResolver.html":{}}}],["parameterresolver.resolveparams(this.request",{"_index":1394,"title":{},"body":{"classes/RequestHandler.html":{}}}],["parameters[descriptor.index",{"_index":1346,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["paramnam",{"_index":1308,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"miscellaneous/functions.html":{}}}],["paramtyp",{"_index":336,"title":{},"body":{"classes/AjvValidationResolver.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"miscellaneous/enumerations.html":{}}}],["paramtype.pathparam",{"_index":373,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ParameterResolver.html":{}}}],["paramtype.queryparam",{"_index":1345,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["paramtype.request",{"_index":1349,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["paramtype.respons",{"_index":1350,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["paramtype.us",{"_index":1351,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["paramtype}@${classhash}@${methodnam",{"_index":1326,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["paramvalid",{"_index":318,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["paramvalidation.requir",{"_index":386,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["paramvalidation.typ",{"_index":390,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["pars",{"_index":1441,"title":{},"body":{"classes/RequestHandler.html":{},"classes/StringUtil.html":{}}}],["parser",{"_index":2004,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":2094,"title":{},"body":{"license.html":{}}}],["pass",{"_index":980,"title":{},"body":{"classes/EMailService.html":{}}}],["passport",{"_index":109,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{},"interfaces/PassportStrategy.html":{},"dependencies.html":{}}}],["passport.authenticate(this.getstrategynam",{"_index":205,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["passport.initi",{"_index":196,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["passport.initialize()(request",{"_index":201,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["passport.strategi",{"_index":1356,"title":{},"body":{"interfaces/PassportStrategy.html":{}}}],["passport.use(this.getstrategynam",{"_index":194,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["passportstrategi",{"_index":142,"title":{"interfaces/PassportStrategy.html":{}},"body":{"classes/AbstractStrategy.html":{},"interfaces/AuthenticationConfig.html":{},"interfaces/PassportStrategy.html":{},"interfaces/Server.html":{}}}],["password",{"_index":480,"title":{},"body":{"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/ServerApplication.html":{},"interfaces/SmtpData.html":{}}}],["patch",{"_index":1530,"title":{},"body":{"interfaces/RouteMethod.html":{},"miscellaneous/functions.html":{}}}],["patch(rout",{"_index":2037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":106,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"interfaces/AuthenticationConfig.html":{},"classes/Configuration.html":{},"interfaces/Endpoint.html":{},"classes/LocalJwtStrategy.html":{},"classes/LoggerWrapper.html":{},"interfaces/PassportStrategy.html":{},"interfaces/Server.html":{},"classes/SimpleRequestCompat.html":{},"classes/WinstonLogger.html":{}}}],["path.normalize(path.normalize(configuration.get('log_fold",{"_index":1163,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["pathormiddlewar",{"_index":1057,"title":{},"body":{"interfaces/InternalServer.html":{}}}],["pathparam",{"_index":1304,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["pathparam(paramnam",{"_index":2042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["payload",{"_index":813,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["perform",{"_index":1444,"title":{},"body":{"classes/RequestHandler.html":{}}}],["permiss",{"_index":2061,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2081,"title":{},"body":{"license.html":{}}}],["person",{"_index":2066,"title":{},"body":{"license.html":{}}}],["plugin",{"_index":585,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["plugin(encryptedmongodbhelper.getencplugin",{"_index":603,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["polici",{"_index":1966,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":949,"title":{},"body":{"classes/EMailService.html":{},"classes/ServerApplication.html":{},"interfaces/SmtpData.html":{}}}],["portion",{"_index":2087,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":919,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["post",{"_index":493,"title":{},"body":{"classes/AuthenticationController.html":{},"interfaces/RouteMethod.html":{},"miscellaneous/functions.html":{}}}],["post(configuration.get('login_endpoint",{"_index":506,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["post(configuration.get('registration_endpoint",{"_index":502,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["post(rout",{"_index":2038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["post(undefin",{"_index":485,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["preconfigur",{"_index":2047,"title":{},"body":{"index.html":{}}}],["prefunc",{"_index":1006,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["prefunc(model",{"_index":1010,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["privat",{"_index":73,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/ExpressValidationResolver.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["privatesigncert",{"_index":798,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["process.env",{"_index":687,"title":{},"body":{"classes/Configuration.html":{}}}],["process.env[key",{"_index":690,"title":{},"body":{"classes/Configuration.html":{}}}],["process.env[nam",{"_index":710,"title":{},"body":{"classes/Configuration.html":{}}}],["process.exit(1",{"_index":701,"title":{},"body":{"classes/Configuration.html":{}}}],["process.exitcod",{"_index":1906,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["process.kill(process.pid",{"_index":1883,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["process.once('sigint",{"_index":1294,"title":{},"body":{"classes/MongoDbStarter.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["process.once('sigterm",{"_index":1296,"title":{},"body":{"classes/MongoDbStarter.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["process.once('sigusr2",{"_index":1297,"title":{},"body":{"classes/MongoDbStarter.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["product",{"_index":2025,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["promis",{"_index":101,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"classes/RequestHandler.html":{},"interfaces/SignCertService.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["promise((resolv",{"_index":887,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["prop",{"_index":439,"title":{},"body":{"classes/ApplicationCompat.html":{},"classes/BaseEncryptedDocument.html":{},"classes/EmailConfirmation.html":{},"classes/SimpleApplicationCompat.html":{}}}],["prop({index",{"_index":561,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["properti",{"_index":70,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"interfaces/AuthenticationResult.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"interfaces/Endpoint.html":{},"interfaces/InternalServer.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["properties[key",{"_index":623,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["propertydescriptor",{"_index":1214,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["propnam",{"_index":595,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["protect",{"_index":8,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/ApplicationCompat.html":{},"classes/BaseEncryptedDocument.html":{},"classes/LocalJwtStrategy.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["provid",{"_index":2088,"title":{},"body":{"license.html":{}}}],["proxy(thi",{"_index":42,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["proxyclass",{"_index":51,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["proxyclassdata",{"_index":40,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["proxyclassdata[key",{"_index":49,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["public",{"_index":79,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/ExpressValidationResolver.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["publicsigncert",{"_index":795,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["publish",{"_index":2076,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":2095,"title":{},"body":{"license.html":{}}}],["put",{"_index":1522,"title":{},"body":{"interfaces/RouteMethod.html":{},"miscellaneous/functions.html":{}}}],["put(rout",{"_index":2039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["p{letter}\\p{number}]+$/u",{"_index":258,"title":{},"body":{"classes/AjvInstance.html":{}}}],["p{letter}]+$/u.test(valu",{"_index":256,"title":{},"body":{"classes/AjvInstance.html":{}}}],["queri",{"_index":351,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{},"classes/SimpleRequestCompat.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"miscellaneous/enumerations.html":{}}}],["query.access_token",{"_index":928,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["query['access_token",{"_index":927,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["queryparam",{"_index":496,"title":{},"body":{"classes/AuthenticationController.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["queryparam('password",{"_index":504,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["queryparam(paramnam",{"_index":2043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["questmark",{"_index":1695,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["rang",{"_index":2003,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":204,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["readonli",{"_index":71,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["recip",{"_index":1714,"title":{},"body":{"classes/StringUtil.html":{}}}],["recommend",{"_index":806,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["recurs",{"_index":1149,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["refid",{"_index":622,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"classes/MongoDbHelper.html":{}}}],["refrenc",{"_index":576,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["refuuid",{"_index":575,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["regexp",{"_index":90,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/DataType.html":{},"classes/LocalJwtStrategy.html":{},"classes/RequestHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["regexp(`[/+]${jsontype}[,;+]`).test(accepthead",{"_index":234,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["regexp(`[/+]${type}[,;+]`).test(accepthead",{"_index":1703,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["regexp(path",{"_index":180,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["regexp(whitelist",{"_index":177,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["regist",{"_index":191,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{}}}],["register(@queryparam('email",{"_index":503,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["register(email",{"_index":488,"title":{},"body":{"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{}}}],["registr",{"_index":186,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AuthenticationService.html":{}}}],["registrationpath",{"_index":145,"title":{},"body":{"classes/AbstractStrategy.html":{},"interfaces/AuthenticationConfig.html":{},"classes/ServerApplication.html":{}}}],["regular",{"_index":151,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["reject",{"_index":888,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["reject(err",{"_index":891,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["relev",{"_index":841,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["replac",{"_index":1186,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/RequestHandler.html":{},"classes/WinstonLogger.html":{}}}],["replace(/\"[^\"\\\\\\n\\r]*\"|true|false|nul",{"_index":298,"title":{},"body":{"classes/AjvInstance.html":{},"classes/RequestHandler.html":{}}}],["replace(/(?:^|:|,)(?:\\s*\\[)+/g",{"_index":301,"title":{},"body":{"classes/AjvInstance.html":{},"classes/RequestHandler.html":{}}}],["replace(/\\\\[\"\\\\\\/bfnrtu]/g",{"_index":297,"title":{},"body":{"classes/AjvInstance.html":{}}}],["replaceconsolelog",{"_index":1121,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["replaceconsolelog(logg",{"_index":1136,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["repres",{"_index":1757,"title":{},"body":{"interfaces/Validation.html":{},"miscellaneous/variables.html":{}}}],["req",{"_index":203,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/LoggerWrapper.html":{},"interfaces/RouteMethod.html":{},"classes/SimpleRequestCompat.html":{},"classes/WinstonLogger.html":{}}}],["req)['us",{"_index":212,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["req.authinfo",{"_index":213,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["request",{"_index":99,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/DefaultJwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/MethodDecorator.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"classes/SimpleRequestCompat.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["request).expressrequest",{"_index":1256,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["request)[contenttyp",{"_index":384,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["request.bodi",{"_index":137,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["request.body[nam",{"_index":1460,"title":{},"body":{"classes/RequestUtil.html":{}}}],["request.params[nam",{"_index":1462,"title":{},"body":{"classes/RequestUtil.html":{}}}],["request.queri",{"_index":138,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["request.query[nam",{"_index":1461,"title":{},"body":{"classes/RequestUtil.html":{}}}],["request.req.url",{"_index":1254,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["request.url",{"_index":1248,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["request.us",{"_index":1352,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["request['raw",{"_index":358,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["request[contenttypes[0",{"_index":382,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["requestcontentnam",{"_index":1800,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["requestcontenttyp",{"_index":332,"title":{},"body":{"classes/AjvValidationResolver.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["requestcontenttype.bodi",{"_index":376,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["requesthandl",{"_index":120,"title":{"classes/RequestHandler.html":{}},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/ExpressValidationResolver.html":{},"classes/LocalJwtStrategy.html":{},"classes/MethodDecorator.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"miscellaneous/typealiases.html":{}}}],["requesthandler(controllerclass",{"_index":1249,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["requesthandler.executerequest",{"_index":1253,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["requestopt",{"_index":1215,"title":{"interfaces/RequestOptions.html":{}},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["requestutil",{"_index":1341,"title":{"classes/RequestUtil.html":{}},"body":{"classes/ParameterResolver.html":{},"classes/RequestUtil.html":{}}}],["requestutil.getparameter(descriptor.nam",{"_index":1347,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["requestutil.getpathparameter(descriptor.nam",{"_index":1348,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["requir",{"_index":1745,"title":{},"body":{"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/variables.html":{}}}],["require('cont",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('encodeurl",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('express",{"_index":1468,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["require('log",{"_index":1855,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/variables.html":{}}}],["require('mkdir",{"_index":1148,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{},"miscellaneous/variables.html":{}}}],["require('mongoos",{"_index":1015,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{},"classes/MongoDbStarter.html":{}}}],["require('sign",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiretl",{"_index":953,"title":{},"body":{"classes/EMailService.html":{},"classes/ServerApplication.html":{},"interfaces/SmtpData.html":{}}}],["res.status(401).type(resptype).send(this.errormsg",{"_index":211,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["reserv",{"_index":2060,"title":{},"body":{"license.html":{}}}],["resolv",{"_index":1391,"title":{},"body":{"classes/RequestHandler.html":{}}}],["resolve(asjson",{"_index":892,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["resolve(tru",{"_index":921,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["resolveparam",{"_index":1335,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["resolveparams(request",{"_index":1339,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["resourc",{"_index":860,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["resp",{"_index":1401,"title":{},"body":{"classes/RequestHandler.html":{},"interfaces/RouteMethod.html":{}}}],["resp.status(200).type('text/html",{"_index":1543,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["respdata",{"_index":1404,"title":{},"body":{"classes/RequestHandler.html":{}}}],["respons",{"_index":60,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/MethodDecorator.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["response).expressrespons",{"_index":1258,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["response.serializer((payload",{"_index":359,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["response.type('application/json",{"_index":361,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["resptyp",{"_index":209,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["rest",{"_index":1196,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["restrict",{"_index":2073,"title":{},"body":{"license.html":{}}}],["result",{"_index":64,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"classes/AuthenticationController.html":{},"interfaces/AuthenticationResult.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.sav",{"_index":1274,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["return",{"_index":15,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["revok",{"_index":870,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["right",{"_index":2059,"title":{},"body":{"license.html":{}}}],["rotat",{"_index":1854,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rotate(this.options.filenam",{"_index":1914,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["rout",{"_index":1217,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"miscellaneous/functions.html":{}}}],["route(rout",{"_index":2045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["routefunc",{"_index":1238,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{}}}],["routemethod",{"_index":1463,"title":{"interfaces/RouteMethod.html":{}},"body":{"interfaces/RouteMethod.html":{}}}],["routemethod.fastifyroutefunc",{"_index":1536,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["routemethod.method",{"_index":1517,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["routemethod.method.touppercas",{"_index":1534,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["routemethod.rout",{"_index":1513,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["routemethod.routefunc",{"_index":1520,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["routemethod.valid",{"_index":1519,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["router",{"_index":111,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/LocalJwtStrategy.html":{},"interfaces/RouteMethod.html":{}}}],["router).get('/_url",{"_index":1542,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["router.connect(baseroute.concat(userout",{"_index":1529,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["router.delete(baseroute.concat(userout",{"_index":1524,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["router.get(baseroute.concat(userout",{"_index":1518,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["router.head(baseroute.concat(userout",{"_index":1526,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["router.options(baseroute.concat(userout",{"_index":1528,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["router.patch(baseroute.concat(userout",{"_index":1531,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["router.post(baseroute.concat(userout",{"_index":1521,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["router.put(baseroute.concat(userout",{"_index":1523,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["router.trace(baseroute.concat(userout",{"_index":1527,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["rs256",{"_index":805,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["rs384",{"_index":808,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["rs512",{"_index":809,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["rsa",{"_index":807,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["s",{"_index":47,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AjvInstance.html":{},"classes/Configuration.html":{},"classes/EMailService.html":{},"classes/LocalJwtStrategy.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{}}}],["s::found",{"_index":50,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["s::get",{"_index":46,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["s::set",{"_index":61,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["s]*$/.test(data.replace(/\\\\[\"\\\\\\/bfnrtu]/g",{"_index":1446,"title":{},"body":{"classes/RequestHandler.html":{}}}],["safe",{"_index":330,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/BaseEncryptedDocument.html":{},"classes/RequestHandler.html":{},"dependencies.html":{}}}],["sanit",{"_index":1040,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["schema",{"_index":1804,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["schema.properties[this.fieldnam",{"_index":1807,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["schema.requir",{"_index":1806,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["sec",{"_index":875,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["second",{"_index":846,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["secur",{"_index":951,"title":{},"body":{"classes/EMailService.html":{},"classes/ServerApplication.html":{},"interfaces/SmtpData.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":852,"title":{},"body":{"classes/DefaultJwtService.html":{},"classes/StringUtil.html":{},"index.html":{}}}],["sell",{"_index":2080,"title":{},"body":{"license.html":{}}}],["send",{"_index":1398,"title":{},"body":{"classes/RequestHandler.html":{}}}],["senddat",{"_index":999,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["sender",{"_index":943,"title":{},"body":{"classes/EMailService.html":{}}}],["sendhtmlmail",{"_index":936,"title":{},"body":{"classes/EMailService.html":{}}}],["sendhtmlmail(html",{"_index":962,"title":{},"body":{"classes/EMailService.html":{}}}],["sendjson",{"_index":1361,"title":{},"body":{"classes/RequestHandler.html":{}}}],["sendjson(statu",{"_index":1375,"title":{},"body":{"classes/RequestHandler.html":{}}}],["sendmail",{"_index":937,"title":{},"body":{"classes/EMailService.html":{}}}],["sendmail(mailopt",{"_index":965,"title":{},"body":{"classes/EMailService.html":{}}}],["sendmailopt",{"_index":966,"title":{},"body":{"classes/EMailService.html":{}}}],["sendrespons",{"_index":1362,"title":{},"body":{"classes/RequestHandler.html":{}}}],["sendresponse(statu",{"_index":1378,"title":{},"body":{"classes/RequestHandler.html":{}}}],["sendtextmail",{"_index":938,"title":{},"body":{"classes/EMailService.html":{}}}],["sendtextmail(text",{"_index":969,"title":{},"body":{"classes/EMailService.html":{}}}],["sent",{"_index":990,"title":{},"body":{"classes/EMailService.html":{}}}],["sentinfo",{"_index":987,"title":{},"body":{"classes/EMailService.html":{}}}],["sentinfo.messageid",{"_index":991,"title":{},"body":{"classes/EMailService.html":{}}}],["sentmessageinfo",{"_index":972,"title":{},"body":{"classes/EMailService.html":{}}}],["server",{"_index":535,"title":{"interfaces/Server.html":{}},"body":{"classes/AuthenticationService.html":{},"classes/Configuration.html":{},"classes/DefaultJwtService.html":{},"classes/MongoDbStarter.html":{},"classes/RequestHandler.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{}}}],["server/express/expressserv",{"_index":1604,"title":{},"body":{"classes/ServerApplication.html":{}}}],["server/fastify/fastifyserv",{"_index":1605,"title":{},"body":{"classes/ServerApplication.html":{}}}],["server/serv",{"_index":1606,"title":{},"body":{"classes/ServerApplication.html":{}}}],["server/typ",{"_index":169,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/LoggerWrapper.html":{},"interfaces/PassportStrategy.html":{},"interfaces/RouteMethod.html":{},"classes/WinstonLogger.html":{}}}],["serverappl",{"_index":1564,"title":{"classes/ServerApplication.html":{}},"body":{"classes/ServerApplication.html":{}}}],["serverapplication.default_email_config",{"_index":1616,"title":{},"body":{"classes/ServerApplication.html":{}}}],["serverport",{"_index":1624,"title":{},"body":{"classes/ServerApplication.html":{}}}],["serverrespons",{"_index":1226,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{}}}],["servic",{"_index":528,"title":{},"body":{"classes/AuthenticationService.html":{},"classes/DefaultJwtService.html":{},"index.html":{}}}],["services/authentication.servic",{"_index":501,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["services/jwt.servic",{"_index":131,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["session",{"_index":206,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["set",{"_index":441,"title":{},"body":{"classes/ApplicationCompat.html":{},"classes/DefaultJwtService.html":{},"classes/SimpleApplicationCompat.html":{}}}],["set(nam",{"_index":457,"title":{},"body":{"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{}}}],["set(target",{"_index":59,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["sethash(target",{"_index":1478,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["setroutesexpress(expressserv",{"_index":1495,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["setroutesfastify(fastifyserv",{"_index":1501,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["shall",{"_index":2085,"title":{},"body":{"license.html":{}}}],["sign",{"_index":835,"title":{},"body":{"classes/DefaultJwtService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sign(payload",{"_index":889,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["signcert",{"_index":882,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["signcert.servic",{"_index":837,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["signcertservic",{"_index":796,"title":{"interfaces/SignCertService.html":{}},"body":{"classes/DefaultJwtService.html":{},"interfaces/SignCertService.html":{}}}],["signific",{"_index":1443,"title":{},"body":{"classes/RequestHandler.html":{}}}],["signingkey",{"_index":1018,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["signopt",{"_index":801,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{}}}],["sigusr2",{"_index":1884,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["simpl",{"_index":944,"title":{},"body":{"classes/EMailService.html":{},"classes/RequestHandler.html":{},"miscellaneous/variables.html":{}}}],["simple/simpleapplicationcompat",{"_index":462,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["simpleapplicationcompat",{"_index":437,"title":{"classes/SimpleApplicationCompat.html":{}},"body":{"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{}}}],["simpleapplicationcompat(fastifyapplication).getcompatinstance('appl",{"_index":1661,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["simpleapplicationcompat:14",{"_index":461,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["simpleapplicationcompat:16",{"_index":455,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["simpleapplicationcompat:20",{"_index":456,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["simpleapplicationcompat:24",{"_index":454,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["simpleapplicationcompat:28",{"_index":458,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["simpleapplicationcompat:33",{"_index":453,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["simpleapplicationcompat:5",{"_index":459,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["simpleapplicationcompat:7",{"_index":460,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["simpleapplicationcompat:8",{"_index":443,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["simpleapplicationcompat:9",{"_index":445,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["simplerequestcompat",{"_index":1665,"title":{"classes/SimpleRequestCompat.html":{}},"body":{"classes/SimpleRequestCompat.html":{}}}],["simplerequestcompat(fastifyrequest",{"_index":1699,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["skipvalid",{"_index":1367,"title":{},"body":{"classes/RequestHandler.html":{}}}],["smtpdata",{"_index":941,"title":{"interfaces/SmtpData.html":{}},"body":{"classes/EMailService.html":{},"classes/ServerApplication.html":{},"interfaces/SmtpData.html":{}}}],["smtpdata.host",{"_index":981,"title":{},"body":{"classes/EMailService.html":{}}}],["smtpdata.password",{"_index":978,"title":{},"body":{"classes/EMailService.html":{}}}],["smtpdata.port",{"_index":982,"title":{},"body":{"classes/EMailService.html":{}}}],["smtpdata.secur",{"_index":983,"title":{},"body":{"classes/EMailService.html":{}}}],["smtpdata.us",{"_index":979,"title":{},"body":{"classes/EMailService.html":{}}}],["softwar",{"_index":2069,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"classes/AuthenticationController.html":{},"interfaces/AuthenticationResult.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["specifi",{"_index":1755,"title":{},"body":{"interfaces/Validation.html":{}}}],["src/.../abstractserver.t",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authuser.t",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../classdecorator.t",{"_index":2030,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../datatype.t",{"_index":2020,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.t",{"_index":2017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../filetransport.t",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt.service.t",{"_index":2119,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../methoddecorators.t",{"_index":2028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../parameter.decorator.t",{"_index":2018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../parameterdecorators.t",{"_index":2029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../responsecompat.t",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.t",{"_index":2117,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validationschema.t",{"_index":2019,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.t",{"_index":2021,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../winstonlogger.t",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth/controllers/auth.controller.t",{"_index":473,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["src/auth/controllers/auth.controller.ts:15",{"_index":492,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["src/auth/controllers/auth.controller.ts:23",{"_index":487,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["src/auth/controllers/auth.controller.ts:29",{"_index":483,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["src/auth/controllers/auth.controller.ts:7",{"_index":478,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["src/auth/models/authuser.t",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth/models/emailconfirmation.t",{"_index":996,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["src/auth/models/emailconfirmation.ts:12",{"_index":1000,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["src/auth/models/emailconfirmation.ts:6",{"_index":1001,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["src/auth/models/emailconfirmation.ts:9",{"_index":1002,"title":{},"body":{"classes/EmailConfirmation.html":{}}}],["src/auth/models/token.t",{"_index":1718,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["src/auth/models/token.ts:10",{"_index":1727,"title":{},"body":{"classes/Token.html":{}}}],["src/auth/models/token.ts:14",{"_index":1728,"title":{},"body":{"classes/Token.html":{}}}],["src/auth/models/token.ts:18",{"_index":1731,"title":{},"body":{"classes/Token.html":{}}}],["src/auth/models/token.ts:22",{"_index":1729,"title":{},"body":{"classes/Token.html":{}}}],["src/auth/models/token.ts:26",{"_index":1732,"title":{},"body":{"classes/Token.html":{}}}],["src/auth/models/token.ts:30",{"_index":1730,"title":{},"body":{"classes/Token.html":{}}}],["src/auth/models/token.ts:34",{"_index":1733,"title":{},"body":{"classes/Token.html":{}}}],["src/auth/passport/abstractjwtstrategy.t",{"_index":67,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["src/auth/passport/abstractjwtstrategy.ts:15",{"_index":103,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["src/auth/passport/abstractjwtstrategy.ts:24",{"_index":100,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["src/auth/passport/abstractjwtstrategy.ts:8",{"_index":91,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["src/auth/passport/abstractstrategy.t",{"_index":140,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["src/auth/passport/abstractstrategy.ts:101",{"_index":159,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["src/auth/passport/abstractstrategy.ts:115",{"_index":165,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["src/auth/passport/abstractstrategy.ts:132",{"_index":163,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["src/auth/passport/abstractstrategy.ts:14",{"_index":164,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["src/auth/passport/abstractstrategy.ts:15",{"_index":160,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["src/auth/passport/abstractstrategy.ts:18",{"_index":156,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["src/auth/passport/abstractstrategy.ts:19",{"_index":157,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["src/auth/passport/abstractstrategy.ts:20",{"_index":146,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["src/auth/passport/abstractstrategy.ts:60",{"_index":158,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["src/auth/passport/abstractstrategy.ts:70",{"_index":162,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["src/auth/passport/abstractstrategy.ts:81",{"_index":161,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["src/auth/passport/authenticationresult.t",{"_index":512,"title":{},"body":{"interfaces/AuthenticationResult.html":{}}}],["src/auth/passport/passportstrategy.t",{"_index":1353,"title":{},"body":{"interfaces/PassportStrategy.html":{}}}],["src/auth/passport/passportstrategy.ts:12",{"_index":1355,"title":{},"body":{"interfaces/PassportStrategy.html":{}}}],["src/auth/passport/passportstrategy.ts:9",{"_index":1354,"title":{},"body":{"interfaces/PassportStrategy.html":{}}}],["src/auth/passport/strategies/localjwtstrategy.t",{"_index":1064,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["src/auth/passport/strategies/localjwtstrategy.ts:12",{"_index":1067,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["src/auth/passport/strategies/localjwtstrategy.ts:14",{"_index":1072,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["src/auth/passport/strategies/localjwtstrategy.ts:18",{"_index":1071,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["src/auth/services/authentication.service.t",{"_index":513,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["src/auth/services/authentication.service.ts:14",{"_index":519,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["src/auth/services/authentication.service.ts:27",{"_index":520,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["src/auth/services/authentication.service.ts:53",{"_index":517,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["src/auth/services/authentication.service.ts:8",{"_index":515,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["src/auth/services/defaultjwt.service.t",{"_index":784,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["src/auth/services/defaultjwt.service.ts:116",{"_index":833,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["src/auth/services/defaultjwt.service.ts:140",{"_index":831,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["src/auth/services/defaultjwt.service.ts:144",{"_index":829,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["src/auth/services/defaultjwt.service.ts:46",{"_index":811,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["src/auth/services/defaultjwt.service.ts:54",{"_index":800,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["src/auth/services/defaultjwt.service.ts:56",{"_index":816,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["src/auth/services/defaultjwt.service.ts:79",{"_index":826,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["src/auth/services/defaultjwt.service.ts:87",{"_index":823,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["src/auth/services/defaultjwt.service.ts:9",{"_index":797,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["src/auth/services/defaultjwt.service.ts:95",{"_index":820,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["src/auth/services/jwt.service.t",{"_index":1058,"title":{},"body":{"interfaces/JwtService.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/services/jwt.service.ts:10",{"_index":1059,"title":{},"body":{"interfaces/JwtService.html":{}}}],["src/auth/services/jwt.service.ts:7",{"_index":1062,"title":{},"body":{"interfaces/JwtService.html":{}}}],["src/auth/services/jwt.service.ts:8",{"_index":1060,"title":{},"body":{"interfaces/JwtService.html":{}}}],["src/auth/services/jwt.service.ts:9",{"_index":1061,"title":{},"body":{"interfaces/JwtService.html":{}}}],["src/auth/services/signcert.service.t",{"_index":1641,"title":{},"body":{"interfaces/SignCertService.html":{}}}],["src/auth/services/signcert.service.ts:4",{"_index":1645,"title":{},"body":{"interfaces/SignCertService.html":{}}}],["src/auth/services/signcert.service.ts:6",{"_index":1647,"title":{},"body":{"interfaces/SignCertService.html":{}}}],["src/authentication.config.t",{"_index":466,"title":{},"body":{"interfaces/AuthenticationConfig.html":{}}}],["src/config/config.t",{"_index":628,"title":{},"body":{"classes/Configuration.html":{}}}],["src/config/config.ts:10",{"_index":639,"title":{},"body":{"classes/Configuration.html":{}}}],["src/config/config.ts:11",{"_index":638,"title":{},"body":{"classes/Configuration.html":{}}}],["src/config/config.ts:115",{"_index":654,"title":{},"body":{"classes/Configuration.html":{}}}],["src/config/config.ts:13",{"_index":647,"title":{},"body":{"classes/Configuration.html":{}}}],["src/config/config.ts:17",{"_index":641,"title":{},"body":{"classes/Configuration.html":{}}}],["src/config/config.ts:21",{"_index":646,"title":{},"body":{"classes/Configuration.html":{}}}],["src/config/config.ts:29",{"_index":649,"title":{},"body":{"classes/Configuration.html":{}}}],["src/config/config.ts:37",{"_index":652,"title":{},"body":{"classes/Configuration.html":{}}}],["src/config/config.ts:50",{"_index":644,"title":{},"body":{"classes/Configuration.html":{}}}],["src/config/config.ts:58",{"_index":655,"title":{},"body":{"classes/Configuration.html":{}}}],["src/config/config.ts:96",{"_index":656,"title":{},"body":{"classes/Configuration.html":{}}}],["src/config/environment.t",{"_index":2022,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/database/mongodb/baseencdocument.t",{"_index":549,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["src/database/mongodb/baseencdocument.ts:12",{"_index":563,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["src/database/mongodb/baseencdocument.ts:15",{"_index":564,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["src/database/mongodb/baseencdocument.ts:18",{"_index":581,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["src/database/mongodb/baseencdocument.ts:35",{"_index":583,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["src/database/mongodb/baseencdocument.ts:42",{"_index":596,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["src/database/mongodb/baseencdocument.ts:57",{"_index":598,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["src/database/mongodb/baseencdocument.ts:63",{"_index":599,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["src/database/mongodb/baseencdocument.ts:81",{"_index":571,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["src/database/mongodb/baseencdocument.ts:87",{"_index":569,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["src/database/mongodb/encryptedmongodbhelper.t",{"_index":1003,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["src/database/mongodb/encryptedmongodbhelper.ts:13",{"_index":1008,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["src/database/mongodb/encryptedmongodbhelper.ts:20",{"_index":1011,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["src/database/mongodb/encryptedmongodbhelper.ts:4",{"_index":1007,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["src/database/mongodb/encryptedmongodbhelper.ts:8",{"_index":1009,"title":{},"body":{"classes/EncryptedMongoDbHelper.html":{}}}],["src/database/mongodb/mongodbhelper.t",{"_index":1260,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["src/database/mongodb/mongodbhelper.ts:17",{"_index":1265,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["src/database/mongodb/mongodbhelper.ts:4",{"_index":1262,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["src/database/mongodb/mongodbhelper.ts:8",{"_index":1267,"title":{},"body":{"classes/MongoDbHelper.html":{}}}],["src/database/mongodb/mongodbstarter.t",{"_index":1276,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["src/database/mongodb/mongodbstarter.ts:10",{"_index":1285,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["src/database/mongodb/mongodbstarter.ts:19",{"_index":1284,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["src/database/mongodb/mongodbstarter.ts:25",{"_index":1283,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["src/database/mongodb/mongodbstarter.ts:6",{"_index":1281,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["src/decorators/classdecorator.t",{"_index":2044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/decorators/internal/class.decorator.t",{"_index":1464,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["src/decorators/internal/method.decorator.t",{"_index":1206,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["src/decorators/internal/method.decorator.ts:19",{"_index":1211,"title":{},"body":{"classes/MethodDecorator.html":{}}}],["src/decorators/internal/method.decorator.ts:23",{"_index":1224,"title":{},"body":{"classes/MethodDecorator.html":{}}}],["src/decorators/internal/method.decorator.ts:30",{"_index":1216,"title":{},"body":{"classes/MethodDecorator.html":{}}}],["src/decorators/internal/method.decorator.ts:50",{"_index":1222,"title":{},"body":{"classes/MethodDecorator.html":{}}}],["src/decorators/internal/method.decorator.ts:74",{"_index":1219,"title":{},"body":{"classes/MethodDecorator.html":{}}}],["src/decorators/internal/parameter.decorator.t",{"_index":1303,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"miscellaneous/enumerations.html":{}}}],["src/decorators/internal/parameter.decorator.ts:21",{"_index":1329,"title":{},"body":{"classes/ParameterDecorator.html":{}}}],["src/decorators/internal/parameter.decorator.ts:23",{"_index":1331,"title":{},"body":{"classes/ParameterDecorator.html":{}}}],["src/decorators/internal/parameter.decorator.ts:38",{"_index":1332,"title":{},"body":{"classes/ParameterDecorator.html":{}}}],["src/decorators/internal/parameter.decorator.ts:64",{"_index":1330,"title":{},"body":{"classes/ParameterDecorator.html":{}}}],["src/decorators/internal/parameterresolver.t",{"_index":1333,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["src/decorators/internal/parameterresolver.ts:11",{"_index":1340,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["src/decorators/internal/parameterresolver.ts:39",{"_index":1338,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["src/decorators/internal/parameterresolver.ts:7",{"_index":1336,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["src/decorators/internal/requesthandler.t",{"_index":1357,"title":{},"body":{"classes/RequestHandler.html":{}}}],["src/decorators/internal/requesthandler.ts:118",{"_index":1373,"title":{},"body":{"classes/RequestHandler.html":{}}}],["src/decorators/internal/requesthandler.ts:13",{"_index":1368,"title":{},"body":{"classes/RequestHandler.html":{}}}],["src/decorators/internal/requesthandler.ts:143",{"_index":1370,"title":{},"body":{"classes/RequestHandler.html":{}}}],["src/decorators/internal/requesthandler.ts:25",{"_index":1371,"title":{},"body":{"classes/RequestHandler.html":{}}}],["src/decorators/internal/requesthandler.ts:68",{"_index":1379,"title":{},"body":{"classes/RequestHandler.html":{}}}],["src/decorators/internal/requesthandler.ts:85",{"_index":1376,"title":{},"body":{"classes/RequestHandler.html":{}}}],["src/decorators/internal/requesthandler.ts:97",{"_index":1380,"title":{},"body":{"classes/RequestHandler.html":{}}}],["src/decorators/internal/validation/expressvalidationresolver.t",{"_index":1031,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["src/decorators/internal/validation/expressvalidationresolver.ts:13",{"_index":1038,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["src/decorators/internal/validation/expressvalidationresolver.ts:32",{"_index":1036,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["src/decorators/internal/validation/expressvalidationresolver.ts:9",{"_index":1034,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["src/decorators/internal/validation/validationresolver.t",{"_index":307,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["src/decorators/internal/validation/validationresolver.ts:13",{"_index":328,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["src/decorators/internal/validation/validationresolver.ts:57",{"_index":321,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["src/decorators/internal/validation/validationresolver.ts:79",{"_index":324,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["src/decorators/internal/validation/validationresolver.ts:9",{"_index":312,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["src/decorators/internal/validation/validationresolver.ts:90",{"_index":317,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["src/decorators/methoddecorators.t",{"_index":2031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/decorators/parameterdecorators.t",{"_index":2041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/decorators/validators.t",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/email/email.service.t",{"_index":931,"title":{},"body":{"classes/EMailService.html":{}}}],["src/email/email.service.ts:18",{"_index":942,"title":{},"body":{"classes/EMailService.html":{}}}],["src/email/email.service.ts:33",{"_index":961,"title":{},"body":{"classes/EMailService.html":{}}}],["src/email/email.service.ts:45",{"_index":970,"title":{},"body":{"classes/EMailService.html":{}}}],["src/email/email.service.ts:50",{"_index":963,"title":{},"body":{"classes/EMailService.html":{}}}],["src/email/email.service.ts:55",{"_index":967,"title":{},"body":{"classes/EMailService.html":{}}}],["src/email/email.service.ts:65",{"_index":958,"title":{},"body":{"classes/EMailService.html":{}}}],["src/email/email.service.ts:9",{"_index":955,"title":{},"body":{"classes/EMailService.html":{}}}],["src/email/smtpdata.t",{"_index":1704,"title":{},"body":{"interfaces/SmtpData.html":{}}}],["src/logger/filetransport.t",{"_index":1849,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/variables.html":{}}}],["src/logger/filetransport.ts:100",{"_index":1945,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:108",{"_index":1951,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:116",{"_index":1952,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:21",{"_index":1933,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:27",{"_index":1940,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:29",{"_index":1943,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:30",{"_index":1939,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:31",{"_index":1934,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:33",{"_index":1942,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:34",{"_index":1941,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:36",{"_index":1935,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:37",{"_index":1938,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:38",{"_index":1936,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:39",{"_index":1937,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:40",{"_index":1932,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:51",{"_index":1944,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:67",{"_index":1950,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:80",{"_index":1947,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:85",{"_index":1946,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:90",{"_index":1948,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/filetransport.ts:96",{"_index":1949,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["src/logger/loglevels.t",{"_index":1089,"title":{},"body":{"classes/LogLevels.html":{}}}],["src/logger/loglevels.ts:17",{"_index":1093,"title":{},"body":{"classes/LogLevels.html":{}}}],["src/logger/loglevels.ts:19",{"_index":1105,"title":{},"body":{"classes/LogLevels.html":{}}}],["src/logger/loglevels.ts:5",{"_index":1095,"title":{},"body":{"classes/LogLevels.html":{}}}],["src/logger/loglevels.ts:7",{"_index":1103,"title":{},"body":{"classes/LogLevels.html":{}}}],["src/logger/winstonlogger.t",{"_index":1113,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{},"miscellaneous/variables.html":{}}}],["src/logger/winstonlogger.ts:105",{"_index":1139,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["src/logger/winstonlogger.ts:122",{"_index":1923,"title":{},"body":{"classes/WinstonLogger.html":{}}}],["src/logger/winstonlogger.ts:123",{"_index":1922,"title":{},"body":{"classes/WinstonLogger.html":{}}}],["src/logger/winstonlogger.ts:125",{"_index":1925,"title":{},"body":{"classes/WinstonLogger.html":{}}}],["src/logger/winstonlogger.ts:130",{"_index":1924,"title":{},"body":{"classes/WinstonLogger.html":{}}}],["src/logger/winstonlogger.ts:134",{"_index":1926,"title":{},"body":{"classes/WinstonLogger.html":{}}}],["src/logger/winstonlogger.ts:18",{"_index":1125,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["src/logger/winstonlogger.ts:19",{"_index":1123,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["src/logger/winstonlogger.ts:21",{"_index":1126,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["src/logger/winstonlogger.ts:23",{"_index":1122,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["src/logger/winstonlogger.ts:38",{"_index":1129,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["src/logger/winstonlogger.ts:45",{"_index":1130,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["src/logger/winstonlogger.ts:54",{"_index":1133,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["src/logger/winstonlogger.ts:62",{"_index":1134,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["src/logger/winstonlogger.ts:72",{"_index":1127,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["src/logger/winstonlogger.ts:80",{"_index":1132,"title":{},"body":{"classes/LoggerWrapper.html":{}}}],["src/server/abstractserver.t",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/server/endpoint.t",{"_index":1024,"title":{},"body":{"interfaces/Endpoint.html":{}}}],["src/server/fastify/fastifycompat/abstractcompatproxy.t",{"_index":5,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["src/server/fastify/fastifycompat/abstractcompatproxy.ts:14",{"_index":30,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["src/server/fastify/fastifycompat/abstractcompatproxy.ts:5",{"_index":14,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["src/server/fastify/fastifycompat/abstractcompatproxy.ts:7",{"_index":21,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["src/server/fastify/fastifycompat/extended/applicationcompat.t",{"_index":436,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["src/server/fastify/fastifycompat/extended/applicationcompat.ts:10",{"_index":451,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["src/server/fastify/fastifycompat/extended/applicationcompat.ts:6",{"_index":448,"title":{},"body":{"classes/ApplicationCompat.html":{}}}],["src/server/fastify/fastifycompat/extended/responsecompat.t",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/server/fastify/fastifycompat/simple/simpleapplicationcompat.t",{"_index":1648,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:16",{"_index":1654,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:20",{"_index":1655,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:24",{"_index":1653,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:28",{"_index":1656,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:33",{"_index":1652,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:8",{"_index":1651,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:9",{"_index":1650,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simplerequestcompat.t",{"_index":1666,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:11",{"_index":1674,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:13",{"_index":1670,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:14",{"_index":1672,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:15",{"_index":1673,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:16",{"_index":1671,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:17",{"_index":1669,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:33",{"_index":1679,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:38",{"_index":1681,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:43",{"_index":1677,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:47",{"_index":1676,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["src/server/internalserver.t",{"_index":1055,"title":{},"body":{"interfaces/InternalServer.html":{}}}],["src/server/server.t",{"_index":1546,"title":{},"body":{"interfaces/Server.html":{}}}],["src/server/server.ts:14",{"_index":1553,"title":{},"body":{"interfaces/Server.html":{}}}],["src/server/server.ts:15",{"_index":1557,"title":{},"body":{"interfaces/Server.html":{}}}],["src/server/server.ts:16",{"_index":1562,"title":{},"body":{"interfaces/Server.html":{}}}],["src/server/server.ts:7",{"_index":1563,"title":{},"body":{"interfaces/Server.html":{}}}],["src/server/server.ts:8",{"_index":1555,"title":{},"body":{"interfaces/Server.html":{}}}],["src/server/server.ts:9",{"_index":1560,"title":{},"body":{"interfaces/Server.html":{}}}],["src/server/types.t",{"_index":2120,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/serverapplication.t",{"_index":1565,"title":{},"body":{"classes/ServerApplication.html":{}}}],["src/serverapplication.ts:16",{"_index":1582,"title":{},"body":{"classes/ServerApplication.html":{}}}],["src/serverapplication.ts:27",{"_index":1585,"title":{},"body":{"classes/ServerApplication.html":{}}}],["src/serverapplication.ts:28",{"_index":1584,"title":{},"body":{"classes/ServerApplication.html":{}}}],["src/serverapplication.ts:29",{"_index":1583,"title":{},"body":{"classes/ServerApplication.html":{}}}],["src/serverapplication.ts:30",{"_index":1573,"title":{},"body":{"classes/ServerApplication.html":{}}}],["src/serverapplication.ts:42",{"_index":1596,"title":{},"body":{"classes/ServerApplication.html":{}}}],["src/serverapplication.ts:46",{"_index":1592,"title":{},"body":{"classes/ServerApplication.html":{}}}],["src/serverapplication.ts:53",{"_index":1590,"title":{},"body":{"classes/ServerApplication.html":{}}}],["src/serverapplication.ts:57",{"_index":1589,"title":{},"body":{"classes/ServerApplication.html":{}}}],["src/serverapplication.ts:61",{"_index":1595,"title":{},"body":{"classes/ServerApplication.html":{}}}],["src/serverapplication.ts:72",{"_index":1587,"title":{},"body":{"classes/ServerApplication.html":{}}}],["src/util/datatype.t",{"_index":713,"title":{},"body":{"classes/DataType.html":{},"miscellaneous/enumerations.html":{}}}],["src/util/datatype.ts:102",{"_index":749,"title":{},"body":{"classes/DataType.html":{}}}],["src/util/datatype.ts:19",{"_index":727,"title":{},"body":{"classes/DataType.html":{}}}],["src/util/datatype.ts:56",{"_index":729,"title":{},"body":{"classes/DataType.html":{}}}],["src/util/datatype.ts:60",{"_index":731,"title":{},"body":{"classes/DataType.html":{}}}],["src/util/datatype.ts:64",{"_index":733,"title":{},"body":{"classes/DataType.html":{}}}],["src/util/datatype.ts:68",{"_index":735,"title":{},"body":{"classes/DataType.html":{}}}],["src/util/datatype.ts:72",{"_index":737,"title":{},"body":{"classes/DataType.html":{}}}],["src/util/datatype.ts:76",{"_index":739,"title":{},"body":{"classes/DataType.html":{}}}],["src/util/datatype.ts:83",{"_index":741,"title":{},"body":{"classes/DataType.html":{}}}],["src/util/datatype.ts:87",{"_index":743,"title":{},"body":{"classes/DataType.html":{}}}],["src/util/datatype.ts:94",{"_index":745,"title":{},"body":{"classes/DataType.html":{}}}],["src/util/datatype.ts:98",{"_index":747,"title":{},"body":{"classes/DataType.html":{}}}],["src/util/requestutil.t",{"_index":1452,"title":{},"body":{"classes/RequestUtil.html":{}}}],["src/util/requestutil.ts:11",{"_index":1459,"title":{},"body":{"classes/RequestUtil.html":{}}}],["src/util/requestutil.ts:3",{"_index":1455,"title":{},"body":{"classes/RequestUtil.html":{}}}],["src/util/requestutil.ts:7",{"_index":1457,"title":{},"body":{"classes/RequestUtil.html":{}}}],["src/util/stringutil.t",{"_index":1705,"title":{},"body":{"classes/StringUtil.html":{}}}],["src/util/stringutil.ts:2",{"_index":1708,"title":{},"body":{"classes/StringUtil.html":{}}}],["src/util/stringutil.ts:25",{"_index":1712,"title":{},"body":{"classes/StringUtil.html":{}}}],["src/util/stringutil.ts:6",{"_index":1710,"title":{},"body":{"classes/StringUtil.html":{}}}],["src/validation/ajvinstance.t",{"_index":239,"title":{},"body":{"classes/AjvInstance.html":{}}}],["src/validation/ajvinstance.ts:16",{"_index":250,"title":{},"body":{"classes/AjvInstance.html":{}}}],["src/validation/ajvinstance.ts:21",{"_index":248,"title":{},"body":{"classes/AjvInstance.html":{}}}],["src/validation/ajvinstance.ts:3",{"_index":245,"title":{},"body":{"classes/AjvInstance.html":{}}}],["src/validation/ajvinstance.ts:7",{"_index":247,"title":{},"body":{"classes/AjvInstance.html":{}}}],["src/validation/ajvinstance.ts:9",{"_index":249,"title":{},"body":{"classes/AjvInstance.html":{}}}],["src/validation/validationschema.t",{"_index":1788,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"miscellaneous/enumerations.html":{}}}],["src/validation/validationschema.ts:103",{"_index":1834,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:108",{"_index":1835,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:113",{"_index":1837,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:118",{"_index":1838,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:123",{"_index":1840,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:128",{"_index":1841,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:133",{"_index":1836,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:138",{"_index":1839,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:143",{"_index":1845,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:18",{"_index":1820,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:21",{"_index":1823,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:22",{"_index":1822,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:23",{"_index":1821,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:24",{"_index":1819,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:32",{"_index":1824,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:36",{"_index":1844,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:44",{"_index":1825,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:64",{"_index":1842,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:69",{"_index":1826,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:74",{"_index":1827,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:79",{"_index":1828,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:84",{"_index":1829,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:89",{"_index":1830,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:93",{"_index":1832,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validationschema.ts:98",{"_index":1833,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["src/validation/validator.t",{"_index":1775,"title":{},"body":{"classes/ValidationError.html":{},"classes/Validator.html":{}}}],["src/validation/validator.ts:14",{"_index":1846,"title":{},"body":{"classes/Validator.html":{}}}],["src/validation/validator.ts:18",{"_index":1847,"title":{},"body":{"classes/Validator.html":{}}}],["src/validation/validator.ts:5",{"_index":1780,"title":{},"body":{"classes/ValidationError.html":{}}}],["src/validation/validator.ts:6",{"_index":1779,"title":{},"body":{"classes/ValidationError.html":{}}}],["src/validation/validator.ts:7",{"_index":1778,"title":{},"body":{"classes/ValidationError.html":{}}}],["src/validation/validators.t",{"_index":1744,"title":{},"body":{"interfaces/Validation.html":{},"miscellaneous/enumerations.html":{}}}],["sso",{"_index":865,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["stabl",{"_index":331,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/BaseEncryptedDocument.html":{},"classes/RequestHandler.html":{},"dependencies.html":{}}}],["stack",{"_index":1776,"title":{},"body":{"classes/ValidationError.html":{},"classes/Validator.html":{}}}],["stage",{"_index":2024,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start",{"_index":1279,"title":{"index.html":{},"license.html":{}},"body":{"classes/MongoDbStarter.html":{},"classes/ServerApplication.html":{}}}],["startserv",{"_index":1552,"title":{},"body":{"interfaces/Server.html":{}}}],["stat",{"_index":1893,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["static",{"_index":240,"title":{},"body":{"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EncryptedMongoDbHelper.html":{},"classes/ExpressValidationResolver.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"dependencies.html":{}}}],["staticmethod",{"_index":568,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["stats['siz",{"_index":1895,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["statu",{"_index":1377,"title":{},"body":{"classes/RequestHandler.html":{}}}],["status",{"_index":2008,"title":{},"body":{"dependencies.html":{}}}],["statuserror",{"_index":1366,"title":{},"body":{"classes/RequestHandler.html":{}}}],["statussuccess",{"_index":1365,"title":{},"body":{"classes/RequestHandler.html":{}}}],["stop",{"_index":700,"title":{},"body":{"classes/Configuration.html":{}}}],["store",{"_index":1319,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["strategi",{"_index":110,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"interfaces/AuthenticationConfig.html":{},"classes/LocalJwtStrategy.html":{},"interfaces/Server.html":{}}}],["strategynam",{"_index":1065,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["stream",{"_index":1160,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["string",{"_index":18,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"classes/AuthenticationController.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/enumerations.html":{}}}],["stringifi",{"_index":329,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/BaseEncryptedDocument.html":{},"classes/RequestHandler.html":{},"dependencies.html":{}}}],["stringify.default(data",{"_index":1422,"title":{},"body":{"classes/RequestHandler.html":{}}}],["stringify.default(object.getownpropertydescriptors(this)['_doc']['value'][nam",{"_index":618,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["stringify.default(payload",{"_index":360,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["stringutil",{"_index":600,"title":{"classes/StringUtil.html":{}},"body":{"classes/BaseEncryptedDocument.html":{},"interfaces/RouteMethod.html":{},"classes/StringUtil.html":{}}}],["stringutil.hashcod",{"_index":617,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["stringutil.hashcode(stringify.default(properties[key",{"_index":625,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["stringutil.hashcode(stringify.default(result[key",{"_index":614,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["stringutil.hashcode(target.constructor.tostr",{"_index":1505,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["stringutil.hashcode(valu",{"_index":607,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["stringvalu",{"_index":228,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["sub",{"_index":862,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["subject",{"_index":861,"title":{},"body":{"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"license.html":{}}}],["sublicens",{"_index":2078,"title":{},"body":{"license.html":{}}}],["subset",{"_index":2027,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["substanti",{"_index":2086,"title":{},"body":{"license.html":{}}}],["subtract",{"_index":876,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["success",{"_index":489,"title":{},"body":{"classes/AuthenticationController.html":{},"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["such",{"_index":1758,"title":{},"body":{"interfaces/Validation.html":{}}}],["super",{"_index":172,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["super(opt",{"_index":1871,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["super(whitelist",{"_index":134,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["suppli",{"_index":676,"title":{},"body":{"classes/Configuration.html":{}}}],["support",{"_index":2026,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["switch",{"_index":389,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"classes/ParameterResolver.html":{},"classes/RequestHandler.html":{},"interfaces/RouteMethod.html":{}}}],["symbol.for('messag",{"_index":1861,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["t",{"_index":31,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/ApplicationCompat.html":{},"classes/MongoDbHelper.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["target",{"_index":43,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"interfaces/RouteMethod.html":{}}}],["target[classdecorator.classmetadata",{"_index":1507,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["target[classdecorator.classmetadata]['hash",{"_index":1480,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["target[classdecorator.classmetadata]['rout",{"_index":1511,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["target[classdecorator.classmetadata][classdecorator.classinst",{"_index":1488,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["targethash",{"_index":1465,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["targetobj",{"_index":1475,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["targetobj[classdecorator.classmetadata]['rout",{"_index":1477,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["targetvalu",{"_index":48,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["targetvalue.apply(target",{"_index":55,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["targetvalue1",{"_index":56,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["targetvalue1.apply(baseclass.req",{"_index":58,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["test",{"_index":1392,"title":{},"body":{"classes/RequestHandler.html":{},"miscellaneous/enumerations.html":{}}}],["test(valu",{"_index":296,"title":{},"body":{"classes/AjvInstance.html":{}}}],["text",{"_index":971,"title":{},"body":{"classes/EMailService.html":{},"classes/StringUtil.html":{}}}],["text.length",{"_index":1717,"title":{},"body":{"classes/StringUtil.html":{}}}],["text/plain",{"_index":237,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["that'",{"_index":1754,"title":{},"body":{"interfaces/Validation.html":{}}}],["therefor",{"_index":588,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["this.addcloselisten",{"_index":1880,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.addvalidationfunc(parameter.valid",{"_index":379,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["this.ajv",{"_index":1793,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["this.ajv.addformat('iso8601",{"_index":279,"title":{},"body":{"classes/AjvInstance.html":{}}}],["this.ajv.compile(schema",{"_index":1809,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["this.app",{"_index":1663,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["this.authenticatejwtrequest(token",{"_index":139,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["this.authenticaterequest(request",{"_index":217,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.authenticationservice.delete(email",{"_index":511,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["this.authenticationservice.login(email",{"_index":508,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["this.authenticationservice.register(email",{"_index":505,"title":{},"body":{"classes/AuthenticationController.html":{}}}],["this.bodi",{"_index":1686,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.clos",{"_index":1295,"title":{},"body":{"classes/MongoDbStarter.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.closelogfil",{"_index":1905,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.closelogfile((error",{"_index":1913,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.controllerclass",{"_index":1396,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.controllerclass.constructor.length",{"_index":1387,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.controllerclass.constructor.nam",{"_index":1388,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.controllerclass[parameterdecorator.parametermetadata",{"_index":1393,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.createmailoptions(to",{"_index":985,"title":{},"body":{"classes/EMailService.html":{}}}],["this.decodetoken(token",{"_index":901,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["this.defaultemailservic",{"_index":1613,"title":{},"body":{"classes/ServerApplication.html":{}}}],["this.defaultjwtservic",{"_index":1610,"title":{},"body":{"classes/ServerApplication.html":{}}}],["this.defaultsubject",{"_index":994,"title":{},"body":{"classes/EMailService.html":{}}}],["this.docid",{"_index":605,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["this.emailservice.sendtextmail('bitt",{"_index":543,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["this.eol",{"_index":1874,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.errormsg",{"_index":181,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.escapehtml(data",{"_index":1412,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.escapehtml(valu",{"_index":1419,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.excludedpathsstr",{"_index":226,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.excludedpathsstring.length",{"_index":227,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.expandvalidationfunc(descriptor.valid",{"_index":1047,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["this.fail(401",{"_index":222,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.fastifyrequest.bodi",{"_index":1687,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.fastifyrequest.head",{"_index":1693,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.fastifyrequest.param",{"_index":1689,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.fastifyrequest.queri",{"_index":1691,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.fastifyrequest.req",{"_index":1685,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.fastifyrequest.req.url",{"_index":1694,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.fieldnam",{"_index":1795,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["this.filedesc",{"_index":1888,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.files",{"_index":1890,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.format",{"_index":1808,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["this.from",{"_index":993,"title":{},"body":{"classes/EMailService.html":{}}}],["this.getauthfunc",{"_index":198,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.getauthfunc()(request",{"_index":202,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.getbasehttpclass",{"_index":39,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["this.getemailservic",{"_index":1614,"title":{},"body":{"classes/ServerApplication.html":{}}}],["this.getfiles",{"_index":1891,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.getformat",{"_index":1166,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["this.getproxy(typ",{"_index":36,"title":{},"body":{"classes/AbstractCompatProxy.html":{}}}],["this.getresponsetype(req.headers['accept",{"_index":210,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.getsigncert(fals",{"_index":912,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["this.getsigncert(tru",{"_index":883,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["this.gettokenfromrequest(head",{"_index":899,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["this.gettransports(format",{"_index":1171,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["this.haschanged(key",{"_index":619,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["this.head",{"_index":1692,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.headers.accept",{"_index":1701,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.id",{"_index":615,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["this.ids[nam",{"_index":616,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["this.ids[propnam",{"_index":608,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["this.initdir",{"_index":1151,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["this.initlogg",{"_index":1153,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["this.initshutdownlisten",{"_index":1290,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["this.initsmtpserver(config",{"_index":977,"title":{},"body":{"classes/EMailService.html":{}}}],["this.isauthctrlset",{"_index":1639,"title":{},"body":{"classes/ServerApplication.html":{}}}],["this.isclos",{"_index":1882,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.isdis",{"_index":1911,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.isexcluded(request.path",{"_index":214,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.isexpired(token",{"_index":911,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["this.isjson(data",{"_index":1413,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.isrequir",{"_index":1805,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["this.iswrit",{"_index":1887,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.jwtservice.createtoken(user.getuuid",{"_index":531,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["this.jwtservice.decodetokenfromrequest(request.head",{"_index":136,"title":{},"body":{"classes/AbstractJwtStrategy.html":{}}}],["this.logdir",{"_index":1150,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["this.logdir}${path.sep}application.log",{"_index":1179,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["this.logdir}${path.sep}error.log",{"_index":1180,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["this.logdir}${path.sep}server.log",{"_index":1158,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["this.maxmsgcount",{"_index":1877,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.messag",{"_index":1781,"title":{},"body":{"classes/ValidationError.html":{},"classes/Validator.html":{}}}],["this.methodnam",{"_index":1397,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.msgbuff",{"_index":1918,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.msgbuffer.length",{"_index":1920,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.msgcount",{"_index":1919,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.openlogfil",{"_index":1917,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.openlogfile(tru",{"_index":1879,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.opt",{"_index":1872,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.options.maxfil",{"_index":1916,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.options.maxs",{"_index":1912,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.originalmethod.apply(control",{"_index":1402,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.param",{"_index":1688,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.pass",{"_index":215,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.path",{"_index":1697,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.privatesigncert",{"_index":897,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["this.prop",{"_index":1660,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["this.props.get(nam",{"_index":1664,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["this.props.set(nam",{"_index":1662,"title":{},"body":{"classes/SimpleApplicationCompat.html":{}}}],["this.publicsigncert",{"_index":898,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["this.queri",{"_index":1690,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.replaceconsolelog(logg",{"_index":1154,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["this.req",{"_index":1684,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["this.request.accepts('application/json",{"_index":1416,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.request.accepts('text/plain",{"_index":1415,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.request.app.get('env",{"_index":1406,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.requestcontenttyp",{"_index":1796,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["this.requestcontenttypes.concat([...requestcontentnam",{"_index":1802,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["this.requestcontenttypes.push(requestcontentnam",{"_index":1801,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["this.respons",{"_index":1395,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.response.status(status).type('application/json",{"_index":1423,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.response.status(status).type('text/plain",{"_index":1417,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.response.status(status).type(this.type).send(datatype.isstring(data",{"_index":1411,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.sendjson(statu",{"_index":1414,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.sendmail(mailopt",{"_index":986,"title":{},"body":{"classes/EMailService.html":{}}}],["this.sendresponse(404",{"_index":1389,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.sendresponse(this.statuserror",{"_index":1408,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.sendresponse(this.statussuccess",{"_index":1403,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.serv",{"_index":1623,"title":{},"body":{"classes/ServerApplication.html":{}}}],["this.server.addcontroller(authconfig.auth.control",{"_index":1638,"title":{},"body":{"classes/ServerApplication.html":{}}}],["this.server.addcontroller(new",{"_index":1640,"title":{},"body":{"classes/ServerApplication.html":{}}}],["this.server.addpassportstrategy(authconfig.path",{"_index":1631,"title":{},"body":{"classes/ServerApplication.html":{}}}],["this.server.startserv",{"_index":1615,"title":{},"body":{"classes/ServerApplication.html":{}}}],["this.signcertservic",{"_index":894,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["this.signcertservice.getprivatecert(kid",{"_index":895,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["this.signcertservice.getpubliccert(kid",{"_index":896,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["this.skipvalid",{"_index":1399,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.success(result.us",{"_index":218,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.tokendata.accesstoken",{"_index":1734,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.expir",{"_index":1736,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.head",{"_index":1738,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.kid",{"_index":1735,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.payload",{"_index":1737,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.payload.azp",{"_index":1743,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.payload.iss.split('/').pop",{"_index":1741,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.tokendata.payload.sub",{"_index":1739,"title":{},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["this.transport",{"_index":976,"title":{},"body":{"classes/EMailService.html":{}}}],["this.transporter.sendmail(mailopt",{"_index":988,"title":{},"body":{"classes/EMailService.html":{}}}],["this.typ",{"_index":1409,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.type.startswith('application/json",{"_index":1410,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.update(key",{"_index":620,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["this.uri",{"_index":1288,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["this.validaterequestparam",{"_index":1400,"title":{},"body":{"classes/RequestHandler.html":{}}}],["this.verifytoken(token",{"_index":910,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["this.whitelist",{"_index":176,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.whitelist.length",{"_index":223,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["this.writefile(buff",{"_index":1921,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.writefile(this.msgbuff",{"_index":1907,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.writemsg(info[wistonfiletransport.messag",{"_index":1900,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["this.writemsg(messag",{"_index":1902,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["those",{"_index":152,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["throw",{"_index":532,"title":{},"body":{"classes/AuthenticationService.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/LocalJwtStrategy.html":{},"classes/MongoDbHelper.html":{},"classes/RequestHandler.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["throw('not",{"_index":1811,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["time",{"_index":847,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["tl",{"_index":954,"title":{},"body":{"classes/EMailService.html":{},"classes/ServerApplication.html":{},"interfaces/SmtpData.html":{}}}],["toboolean",{"_index":1707,"title":{},"body":{"classes/StringUtil.html":{}}}],["toboolean(valu",{"_index":1711,"title":{},"body":{"classes/StringUtil.html":{}}}],["todo",{"_index":173,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/AuthenticationService.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["token",{"_index":98,"title":{"classes/Token.html":{}},"body":{"classes/AbstractJwtStrategy.html":{},"interfaces/AuthenticationResult.html":{},"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["token.getexpir",{"_index":922,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["token.getkid",{"_index":913,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["token.getuserid",{"_index":1083,"title":{},"body":{"classes/LocalJwtStrategy.html":{}}}],["tokendata",{"_index":1726,"title":{"interfaces/TokenData.html":{}},"body":{"classes/Token.html":{},"interfaces/TokenData.html":{}}}],["tort",{"_index":2106,"title":{},"body":{"license.html":{}}}],["touppercas",{"_index":1108,"title":{},"body":{"classes/LogLevels.html":{}}}],["trace",{"_index":1096,"title":{},"body":{"classes/LogLevels.html":{},"interfaces/RouteMethod.html":{},"miscellaneous/functions.html":{}}}],["trace(rout",{"_index":2040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["transfer",{"_index":1321,"title":{},"body":{"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["transport",{"_index":933,"title":{},"body":{"classes/EMailService.html":{},"classes/LoggerWrapper.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["transport.transportstreamopt",{"_index":1856,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["transports.push(new",{"_index":1182,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["tri",{"_index":216,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AuthenticationService.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/EMailService.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"classes/RequestHandler.html":{}}}],["true",{"_index":63,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/ApplicationCompat.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/LoggerWrapper.html":{},"classes/RequestHandler.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":272,"title":{},"body":{"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/MethodDecorator.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{}}}],["tungu",{"_index":2009,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":24,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/ApplicationCompat.html":{},"interfaces/AuthenticationConfig.html":{},"classes/AuthenticationController.html":{},"interfaces/AuthenticationResult.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/EmailConfirmation.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/Endpoint.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/InternalServer.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbHelper.html":{},"classes/MongoDbStarter.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ParameterResolver.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"classes/RequestUtil.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/SignCertService.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"interfaces/SmtpData.html":{},"classes/StringUtil.html":{},"classes/Token.html":{},"interfaces/TokenData.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.array",{"_index":766,"title":{},"body":{"classes/DataType.html":{}}}],["type.boolean",{"_index":768,"title":{},"body":{"classes/DataType.html":{}}}],["type.d",{"_index":770,"title":{},"body":{"classes/DataType.html":{}}}],["type.error",{"_index":772,"title":{},"body":{"classes/DataType.html":{}}}],["type.funct",{"_index":774,"title":{},"body":{"classes/DataType.html":{}}}],["type.jsonstr",{"_index":758,"title":{},"body":{"classes/DataType.html":{}}}],["type.numb",{"_index":764,"title":{},"body":{"classes/DataType.html":{}}}],["type.object",{"_index":762,"title":{},"body":{"classes/DataType.html":{}}}],["type.regexp",{"_index":776,"title":{},"body":{"classes/DataType.html":{}}}],["type.str",{"_index":760,"title":{},"body":{"classes/DataType.html":{}}}],["type.undefin",{"_index":756,"title":{},"body":{"classes/DataType.html":{}}}],["type.unknown",{"_index":777,"title":{},"body":{"classes/DataType.html":{}}}],["typealias",{"_index":2114,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoos",{"_index":550,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"classes/EmailConfirmation.html":{},"dependencies.html":{}}}],["typeof",{"_index":52,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractStrategy.html":{},"classes/DataType.html":{},"classes/LoggerWrapper.html":{},"classes/RequestHandler.html":{},"classes/ServerApplication.html":{},"classes/WinstonLogger.html":{}}}],["types.objectid",{"_index":560,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["u0026",{"_index":1450,"title":{},"body":{"classes/RequestHandler.html":{}}}],["u003",{"_index":1448,"title":{},"body":{"classes/RequestHandler.html":{}}}],["unabl",{"_index":541,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["unauthor",{"_index":184,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["undefin",{"_index":562,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"classes/ValidationError.html":{},"classes/Validator.html":{},"miscellaneous/enumerations.html":{}}}],["under",{"_index":2053,"title":{},"body":{"index.html":{}}}],["uniqu",{"_index":579,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"classes/DefaultJwtService.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["unknown",{"_index":754,"title":{},"body":{"classes/DataType.html":{},"miscellaneous/enumerations.html":{}}}],["updat",{"_index":558,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["update(nam",{"_index":597,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["updatemodifi",{"_index":559,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["upload",{"_index":1983,"title":{},"body":{"dependencies.html":{}}}],["uri",{"_index":1282,"title":{},"body":{"classes/MongoDbStarter.html":{}}}],["url",{"_index":1247,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"classes/SimpleRequestCompat.html":{}}}],["url.indexof",{"_index":1696,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["url.substring(0",{"_index":1698,"title":{},"body":{"classes/SimpleRequestCompat.html":{}}}],["urls_endpoint",{"_index":1471,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["us",{"_index":174,"title":{},"body":{"classes/AbstractStrategy.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/DefaultJwtService.html":{},"interfaces/InternalServer.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"interfaces/Validation.html":{},"classes/WinstonLogger.html":{},"license.html":{}}}],["usag",{"_index":2049,"title":{},"body":{"index.html":{}}}],["useproxi",{"_index":19,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/ApplicationCompat.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{}}}],["user",{"_index":207,"title":{},"body":{"classes/AbstractStrategy.html":{},"interfaces/AuthenticationResult.html":{},"classes/AuthenticationService.html":{},"classes/BaseEncryptedDocument.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/LocalJwtStrategy.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/ServerApplication.html":{},"interfaces/SmtpData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["user.ispasswordvalid(password",{"_index":530,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["userequestcont",{"_index":1817,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["userequestcontent(...requestcontentnam",{"_index":1799,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["userequestcontent(requestcontentnam",{"_index":1843,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["userid",{"_index":817,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{}}}],["usermodel",{"_index":538,"title":{},"body":{"classes/AuthenticationService.html":{}}}],["userout",{"_index":1512,"title":{},"body":{"interfaces/RouteMethod.html":{}}}],["utf8",{"_index":695,"title":{},"body":{"classes/Configuration.html":{},"classes/DefaultJwtService.html":{}}}],["util/datatyp",{"_index":1382,"title":{},"body":{"classes/RequestHandler.html":{}}}],["util/requestutil",{"_index":1342,"title":{},"body":{"classes/ParameterResolver.html":{}}}],["util/stringutil",{"_index":601,"title":{},"body":{"classes/BaseEncryptedDocument.html":{},"interfaces/RouteMethod.html":{}}}],["uuid",{"_index":430,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/BaseEncryptedDocument.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/Validation.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["valfunc",{"_index":385,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valfunc.isalpha",{"_index":394,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valfunc.isalphanumer",{"_index":398,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valfunc.isascii",{"_index":402,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valfunc.isbase64",{"_index":405,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valfunc.isbefore().withmessage(msg",{"_index":409,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valfunc.isboolean",{"_index":411,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valfunc.isdecim",{"_index":415,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valfunc.isemail().normalizeemail().withmessage(msg",{"_index":1050,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["valfunc.isemail().withmessage(msg",{"_index":419,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["valfunc.isfloat",{"_index":1052,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["valfunc.isiso8601",{"_index":422,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valfunc.isjson",{"_index":425,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valfunc.isnotempty().withmessage(msg",{"_index":433,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["valfunc.isnumeric().withmessage(msg",{"_index":428,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valfunc.isuuid().withmessage(msg",{"_index":431,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valfunc.not().isempty().withmessage(msg",{"_index":1053,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["valfunc.withmessage(msg",{"_index":434,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["valid",{"_index":280,"title":{"interfaces/Validation.html":{},"classes/Validator.html":{}},"body":{"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/DefaultJwtService.html":{},"classes/ExpressValidationResolver.html":{},"classes/MethodDecorator.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"interfaces/Validation.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validate(validationfunc",{"_index":1782,"title":{},"body":{"classes/ValidationError.html":{},"classes/Validator.html":{}}}],["validaterequestparam",{"_index":1363,"title":{},"body":{"classes/RequestHandler.html":{}}}],["validation/valid",{"_index":334,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/ParamDescriptor.html":{},"classes/ParameterDecorator.html":{}}}],["validation/validationresolv",{"_index":1234,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["validation/validationschema",{"_index":333,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["validationchain",{"_index":327,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["validationerror",{"_index":1774,"title":{"classes/ValidationError.html":{}},"body":{"classes/ValidationError.html":{},"classes/Validator.html":{}}}],["validationfunc",{"_index":314,"title":{"interfaces/ValidationFunc.html":{}},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{}}}],["validationfunc.opt",{"_index":1049,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["validationfunc.requestcontenttyp",{"_index":1784,"title":{},"body":{"classes/ValidationError.html":{},"classes/Validator.html":{}}}],["validationfunc.requir",{"_index":387,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["validationfunc.validate(cont",{"_index":1785,"title":{},"body":{"classes/ValidationError.html":{},"classes/Validator.html":{}}}],["validationfunct",{"_index":365,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["validationfunctions.push(valschema.getvalidationfunc",{"_index":380,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["validationresult",{"_index":1381,"title":{},"body":{"classes/RequestHandler.html":{}}}],["validationresult(this.request",{"_index":1425,"title":{},"body":{"classes/RequestHandler.html":{}}}],["validationschema",{"_index":315,"title":{"classes/ValidationSchema.html":{}},"body":{"classes/AjvValidationResolver.html":{},"classes/ValidationError.html":{},"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{},"classes/Validator.html":{}}}],["validationschema(nam",{"_index":1798,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["validationschema.check(parameter.nam",{"_index":371,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["validator.requestcontenttype.length",{"_index":349,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["validator.validate(cont",{"_index":353,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["validator/check",{"_index":1039,"title":{},"body":{"classes/ExpressValidationResolver.html":{},"classes/RequestHandler.html":{}}}],["validator/filt",{"_index":1041,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["validator_alpha",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_alphanumer",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_alphanumericrequir",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_alpharequir",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_ascii",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_asciirequir",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_base64",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_base64requir",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_bool",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_boolrequir",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_d",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_daterequir",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_decim",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_decimalrequir",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_email",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_emailrequir",{"_index":498,"title":{},"body":{"classes/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["validator_iso8601",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_iso8601requir",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_json",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_jsonrequir",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_notempti",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_numer",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_numericrequir",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_requir",{"_index":499,"title":{},"body":{"classes/AuthenticationController.html":{},"miscellaneous/variables.html":{}}}],["validator_uuid",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator_uuidrequir",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.alpha",{"_index":392,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"miscellaneous/variables.html":{}}}],["validators.alphanumer",{"_index":396,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"miscellaneous/variables.html":{}}}],["validators.ascii",{"_index":399,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"miscellaneous/variables.html":{}}}],["validators.base64",{"_index":403,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"miscellaneous/variables.html":{}}}],["validators.befor",{"_index":406,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["validators.boolean",{"_index":410,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"miscellaneous/variables.html":{}}}],["validators.decim",{"_index":412,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"miscellaneous/variables.html":{}}}],["validators.email",{"_index":416,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"miscellaneous/variables.html":{}}}],["validators.float",{"_index":413,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{}}}],["validators.iso8601",{"_index":420,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"miscellaneous/variables.html":{}}}],["validators.json",{"_index":423,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"miscellaneous/variables.html":{}}}],["validators.length",{"_index":344,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["validators.numer",{"_index":426,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"miscellaneous/variables.html":{}}}],["validators.push(sanitize(descriptor.name).trim",{"_index":1044,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["validators.push(validationfunc",{"_index":1048,"title":{},"body":{"classes/ExpressValidationResolver.html":{}}}],["validators.uuid",{"_index":429,"title":{},"body":{"classes/AjvValidationResolver.html":{},"classes/ExpressValidationResolver.html":{},"miscellaneous/variables.html":{}}}],["validators[length",{"_index":348,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["valschema",{"_index":370,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["valschema.userequestcontent(requestcontenttype.param",{"_index":374,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["valschema.userequestcontent(requestcontenttype.queri",{"_index":375,"title":{},"body":{"classes/AjvValidationResolver.html":{}}}],["valu",{"_index":27,"title":{},"body":{"classes/AbstractCompatProxy.html":{},"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/ApplicationCompat.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/DataType.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/ParameterDecorator.html":{},"classes/RequestHandler.html":{},"classes/ServerApplication.html":{},"classes/SimpleApplicationCompat.html":{},"classes/SimpleRequestCompat.html":{},"classes/StringUtil.html":{},"classes/ValidationError.html":{},"classes/ValidationSchema.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.constructor",{"_index":782,"title":{},"body":{"classes/DataType.html":{}}}],["value.endswith",{"_index":665,"title":{},"body":{"classes/Configuration.html":{}}}],["value.indexof",{"_index":667,"title":{},"body":{"classes/Configuration.html":{}}}],["value.messag",{"_index":780,"title":{},"body":{"classes/DataType.html":{}}}],["value.replace(/[<>&]/g",{"_index":1447,"title":{},"body":{"classes/RequestHandler.html":{}}}],["value.split",{"_index":668,"title":{},"body":{"classes/Configuration.html":{}}}],["value.startswith",{"_index":664,"title":{},"body":{"classes/Configuration.html":{}}}],["value.tolowercas",{"_index":661,"title":{},"body":{"classes/Configuration.html":{}}}],["value.trim().length",{"_index":305,"title":{},"body":{"classes/AjvInstance.html":{}}}],["valueid",{"_index":624,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["valueregexp",{"_index":224,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["valueregexp.test(path",{"_index":225,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["variabl",{"_index":678,"title":{"miscellaneous/variables.html":{}},"body":{"classes/Configuration.html":{},"miscellaneous/variables.html":{}}}],["veri",{"_index":1439,"title":{},"body":{"classes/RequestHandler.html":{}}}],["verif",{"_index":918,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["verifi",{"_index":819,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{}}}],["verify(token.getaccesstoken",{"_index":920,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["verifytoken",{"_index":793,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{}}}],["verifytoken(token",{"_index":832,"title":{},"body":{"classes/DefaultJwtService.html":{},"interfaces/JwtService.html":{}}}],["version",{"_index":1772,"title":{},"body":{"interfaces/Validation.html":{}}}],["void",{"_index":115,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvInstance.html":{},"classes/AjvValidationResolver.html":{},"classes/BaseEncryptedDocument.html":{},"classes/Configuration.html":{},"classes/EncryptedMongoDbHelper.html":{},"interfaces/InternalServer.html":{},"classes/LocalJwtStrategy.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/MongoDbStarter.html":{},"classes/ParameterDecorator.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/RequestOptions.html":{},"interfaces/RouteMethod.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["warn",{"_index":1097,"title":{},"body":{"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MongoDbStarter.html":{},"classes/RequestHandler.html":{},"classes/WinstonLogger.html":{}}}],["warn('no",{"_index":1291,"title":{},"body":{"classes/MongoDbStarter.html":{},"classes/RequestHandler.html":{}}}],["warranti",{"_index":2089,"title":{},"body":{"license.html":{}}}],["web",{"_index":856,"title":{},"body":{"classes/DefaultJwtService.html":{}}}],["where[`ids.${key",{"_index":626,"title":{},"body":{"classes/BaseEncryptedDocument.html":{}}}],["whether",{"_index":2103,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":75,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/DefaultJwtService.html":{},"classes/LocalJwtStrategy.html":{}}}],["whitelist).map(path",{"_index":179,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["whitelist.length",{"_index":175,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["whitelist[0",{"_index":178,"title":{},"body":{"classes/AbstractStrategy.html":{}}}],["winston",{"_index":1143,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/ParameterResolver.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{},"dependencies.html":{}}}],["winston.createlogg",{"_index":1167,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["winston.format.color",{"_index":1185,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["winston.format.combin",{"_index":1172,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["winston.format.printf(info",{"_index":1175,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["winston.format.splat",{"_index":1174,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["winston.format.timestamp",{"_index":1173,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["winston.logg",{"_index":1135,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["winston.transports.consol",{"_index":1183,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["winstonfiletransportopt",{"_index":1848,"title":{"interfaces/WinstonFileTransportOptions.html":{}},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["winstonlogg",{"_index":1198,"title":{"classes/WinstonLogger.html":{}},"body":{"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{},"classes/ServerApplication.html":{},"classes/WinstonLogger.html":{}}}],["winstonlogger.init",{"_index":1607,"title":{},"body":{"classes/ServerApplication.html":{}}}],["winstonlogger.isdebug",{"_index":1245,"title":{},"body":{"classes/MethodDecorator.html":{},"interfaces/RequestOptions.html":{}}}],["winstonlogger.isdebuglevel",{"_index":1202,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["winstonlogger.loggerwrapp",{"_index":1200,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["winstonlogger.loggerwrapper.getserverlogg",{"_index":1203,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["wistonfiletransport",{"_index":1145,"title":{"classes/WistonFileTransport.html":{}},"body":{"classes/LoggerWrapper.html":{},"interfaces/WinstonFileTransportOptions.html":{},"classes/WinstonLogger.html":{},"classes/WistonFileTransport.html":{}}}],["wistonfiletransport.defaultopt",{"_index":1873,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["withmessag",{"_index":1818,"title":{},"body":{"classes/ValidationSchema.html":{}}}],["withmessage(messag",{"_index":1815,"title":{},"body":{"interfaces/ValidationFunc.html":{},"classes/ValidationSchema.html":{}}}],["without",{"_index":2072,"title":{},"body":{"license.html":{}}}],["write",{"_index":1161,"title":{},"body":{"classes/LoggerWrapper.html":{},"classes/WinstonLogger.html":{}}}],["writefil",{"_index":1930,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["writefile(buff",{"_index":1908,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["writemsg",{"_index":1931,"title":{},"body":{"classes/WistonFileTransport.html":{}}}],["writemsg(messag",{"_index":1910,"title":{},"body":{"interfaces/WinstonFileTransportOptions.html":{},"classes/WistonFileTransport.html":{}}}],["x",{"_index":959,"title":{},"body":{"classes/EMailService.html":{}}}],["x00",{"_index":260,"title":{},"body":{"classes/AjvInstance.html":{}}}],["x7f",{"_index":261,"title":{},"body":{"classes/AjvInstance.html":{}}}],["ye",{"_index":92,"title":{},"body":{"classes/AbstractJwtStrategy.html":{},"classes/AbstractStrategy.html":{},"classes/AjvValidationResolver.html":{},"classes/DefaultJwtService.html":{},"classes/EMailService.html":{},"classes/ExpressValidationResolver.html":{},"interfaces/JwtService.html":{},"classes/LocalJwtStrategy.html":{},"classes/LogLevels.html":{},"classes/LoggerWrapper.html":{},"classes/MethodDecorator.html":{},"classes/ParameterDecorator.html":{},"interfaces/PassportStrategy.html":{},"classes/RequestHandler.html":{},"interfaces/Server.html":{},"classes/ServerApplication.html":{},"classes/StringUtil.html":{},"classes/ValidationSchema.html":{},"classes/WistonFileTransport.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":1747,"title":{},"body":{"interfaces/Validation.html":{},"miscellaneous/variables.html":{}}}],["z0",{"_index":263,"title":{},"body":{"classes/AjvInstance.html":{}}}],["za",{"_index":1746,"title":{},"body":{"interfaces/Validation.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractCompatProxy.html":{"url":"classes/AbstractCompatProxy.html","title":"class - AbstractCompatProxy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractCompatProxy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/fastify/fastifycompat/abstractcompatproxy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                getBaseHttpClass\n                            \n                            \n                                    Protected\n                                getCompatInstance\n                            \n                            \n                                    Protected\n                                getProxy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            getBaseHttpClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseHttpClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/abstractcompatproxy.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getCompatInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCompatInstance(type: string, useProxy: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/abstractcompatproxy.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        useProxy\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getProxy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getProxy(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/abstractcompatproxy.ts:14\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug } from 'console';\n\nexport abstract class AbstractCompatProxy {\n\n  protected abstract getBaseHttpClass(): any;\n\n  protected getCompatInstance(type: string, useProxy: boolean = false): any {\n    if (useProxy) {\n      return this.getProxy(type);\n    }\n    return this;\n  }\n\n  protected getProxy(type: string): T {\n    const baseClass: any = this.getBaseHttpClass() as any;\n    const proxyClassData: any = this as any;\n\n    return new Proxy(this, {\n      get: (target: any, key: any) => {\n\n        debug('(Proxy) %s::Get %s', type, key);\n\n        const targetValue = proxyClassData[key];\n        if (targetValue) {\n          debug('(Proxy) %s::Found targetValue %s in proxyClass', type, key);\n          if (typeof targetValue === 'function') {\n            return (...args: any[]) => {\n              return targetValue.apply(target, args);\n            };\n          }\n          return targetValue;\n        }\n\n        const targetValue1 = proxyClassData[key];\n        if (targetValue1) {\n          debug('(Proxy) %s::Found targetValue %s in baseHttpClass', key);\n          if (typeof targetValue1 === 'function') {\n            return (...args: any[]) => {\n              return targetValue1.apply(baseClass.req, args);\n            };\n          }\n          return targetValue1;\n        }\n\n      },\n      set(target: Response, key: any, value: any): boolean {\n        debug('(Proxy) %s::Set %s', key);\n        proxyClassData[key] = value;\n        baseClass[key] = value;\n        return true;\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractJwtStrategy.html":{"url":"classes/AbstractJwtStrategy.html","title":"class - AbstractJwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractJwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/abstractjwtstrategy.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractStrategy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                errorMsg\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                excludedPathsString\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                whitelist\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                authenticateJwtRequest\n                            \n                            \n                                    Protected\n                                    Async\n                                authenticateRequest\n                            \n                            \n                                    Public\n                                addToExpress\n                            \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                authenticateRequest\n                            \n                            \n                                    Private\n                                getAuthFunc\n                            \n                            \n                                    Public\n                                getMiddleware\n                            \n                            \n                                    Private\n                                getResponseType\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getStrategyName\n                            \n                            \n                                    Private\n                                isExcluded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, whitelist?: string[] | RegExp[])\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/abstractjwtstrategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        whitelist\n                                                  \n                                                        \n                                                                    string[] | RegExp[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            errorMsg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMsg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractStrategy:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            excludedPathsString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        excludedPathsString:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractStrategy:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            whitelist\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        whitelist:     RegExp[]\n\n                    \n                \n                    \n                        \n                            Type :     RegExp[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractStrategy:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                                Async\n                            authenticateJwtRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticateJwtRequest(token: Token, request: Request, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/abstractjwtstrategy.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    Token\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            authenticateRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticateRequest(request: Request, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/abstractjwtstrategy.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addToExpress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addToExpress(express: Express, path: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractStrategy:60\n                            \n                        \n\n\n                \n                    \n                            Adds this passport strategy to the express router.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        express\n                                                        \n                                                                    Express\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                '/'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            \n// Assumed AuthJwtStrategy extends {\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticate(request: Request, options?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractStrategy:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                                Async\n                            authenticateRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticateRequest(request: Request, options?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractStrategy:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAuthFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthFunc()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractStrategy:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     RequestHandler\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMiddleware\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMiddleware()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractStrategy:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ExpressMiddleware | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getResponseType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getResponseType(acceptHeader: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractStrategy:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        acceptHeader\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            getStrategyName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStrategyName()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractStrategy:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isExcluded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isExcluded(path: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractStrategy:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request } from 'express';\n\nimport { Token } from '../models/token';\nimport { JwtService } from '../services/jwt.service';\nimport { AbstractStrategy } from './abstractstrategy';\nimport { AuthenticationResult } from './authenticationresult';\n\nexport abstract class AbstractJwtStrategy extends AbstractStrategy {\n\n  constructor(private jwtService: JwtService,\n              whitelist?: string[] | RegExp[]) {\n    super(whitelist);\n  }\n\n  protected async authenticateRequest(request: Request,\n                                      options?: any): Promise {\n    const token: Token = await this.jwtService.decodeTokenFromRequest(request.headers,\n                                                                      request.body,\n                                                                      request.query,\n                                                                      true);\n    return this.authenticateJwtRequest(token, request, options);\n  }\n\n  protected abstract async authenticateJwtRequest(token: Token,\n                                                  request: Request,\n                                                  options?: any): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractStrategy.html":{"url":"classes/AbstractStrategy.html","title":"class - AbstractStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/abstractstrategy.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Strategy\n            \n\n            \n                Implements\n            \n            \n                        PassportStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                errorMsg\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                excludedPathsString\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                whitelist\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addToExpress\n                            \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                authenticateRequest\n                            \n                            \n                                    Private\n                                getAuthFunc\n                            \n                            \n                                    Public\n                                getMiddleware\n                            \n                            \n                                    Private\n                                getResponseType\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getStrategyName\n                            \n                            \n                                    Private\n                                isExcluded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(whitelist?: string[] | RegExp[] | string, loginPath?: string, registrationPath?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/abstractstrategy.ts:20\n                            \n                        \n\n                \n                    \n                            Creates an instance of AbstractJwtStrategy.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        whitelist\n                                                  \n                                                        \n                                                                    string[] | RegExp[] | string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                List of regular expressions matching those paths\nthat should not checked for authentication, e.g. /login\n\n                                                        \n                                                \n                                                \n                                                        loginPath\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        registrationPath\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            errorMsg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMsg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/passport/abstractstrategy.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            excludedPathsString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        excludedPathsString:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/passport/abstractstrategy.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            whitelist\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        whitelist:     RegExp[]\n\n                    \n                \n                    \n                        \n                            Type :     RegExp[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/passport/abstractstrategy.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addToExpress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addToExpress(express: Express, path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/abstractstrategy.ts:60\n                            \n                        \n\n\n                \n                    \n                            Adds this passport strategy to the express router.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        express\n                                                        \n                                                                    Express\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                '/'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            \n// Assumed AuthJwtStrategy extends {\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticate(request: Request, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/abstractstrategy.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                                Async\n                            authenticateRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticateRequest(request: Request, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/abstractstrategy.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAuthFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthFunc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/abstractstrategy.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     RequestHandler\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMiddleware\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMiddleware()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/abstractstrategy.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ExpressMiddleware | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getResponseType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getResponseType(acceptHeader: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/abstractstrategy.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        acceptHeader\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            getStrategyName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStrategyName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/abstractstrategy.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isExcluded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isExcluded(path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/abstractstrategy.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug } from 'console';\n\nimport { Express, Request, Response, RequestHandler } from 'express';\nimport * as passport from 'passport';\nimport { Strategy } from 'passport-strategy';\n\nimport { Configuration } from '../../config/config';\nimport { ExpressMiddleware, NextFunc } from '../../server/types';\nimport { AuthenticationResult } from './authenticationresult';\nimport { PassportStrategy } from './passportstrategy';\n\nexport abstract class AbstractStrategy extends Strategy implements PassportStrategy {\n\n  protected abstract getStrategyName(): string;\n  protected abstract async authenticateRequest(request: Request,\n                                               options?: any): Promise;\n\n  private readonly excludedPathsString?: string[];\n  private readonly whitelist?: RegExp[];\n  protected readonly errorMsg: string;\n\n  /**\n   * Creates an instance of AbstractJwtStrategy.\n   * @param {(string[] | RegExp[])} [whitelist] List of regular expressions matching those paths\n   * that should not checked for authentication, e.g. /login\n   * @memberof AbstractJwtStrategy\n   */\n  constructor(whitelist?: string[] | RegExp[] | string, loginPath?: string, registrationPath?: string) {\n    super();\n    // TODO: use path-to-regexp?\n    if (whitelist && whitelist.length) {\n      if (typeof whitelist === 'string') {\n        this.whitelist = [new RegExp(whitelist)];\n      } else if (typeof whitelist[0] === 'string') {\n        this.whitelist = (whitelist).map(path => new RegExp(path));\n      } else {\n        this.whitelist = [...whitelist] as RegExp[];\n      }\n    }\n    this.errorMsg = JSON.stringify({\n      error: 'Unauthorized',\n      login: loginPath || Configuration.get('LOGIN_ENDPOINT'),\n      registration: registrationPath || Configuration.get('REGISTRATION_ENDPOINT'),\n    });\n  }\n\n  /**\n   * Adds this passport strategy to the express router.\n   *\n   * @example\n   * ````\n   * // Assumed AuthJwtStrategy extends {@link AbstractJwtStrategy}\n   * const authService = new AuthJwtStrategy(jwtService, ['/register', '/login']);\n   * authService.addToExpress(this.express);\n   * ```\n   * @param {Express} express\n   * @param {string} path\n   * @memberof AbstractJwtStrategy\n   */\n  public addToExpress(express: Express, path: string = '/'): void {\n    if (Configuration.getBoolean('ENABLE_AUTHENTICATION')) {\n      passport.use(this.getStrategyName(), this);\n      express.use(path, passport.initialize());\n      express.all(path, this.getAuthFunc(),\n\n        );\n    }\n  }\n\n  public getMiddleware(): ExpressMiddleware | null {\n    if (Configuration.getBoolean('ENABLE_AUTHENTICATION')) {\n      passport.use(this.getStrategyName(), this);\n      return (request: Request, response: Response, next: (err?: any) => void) => {\n        passport.initialize()(request, response, () => {});\n        this.getAuthFunc()(request, response, next);\n      };\n    }\n    return null;\n  }\n\n  private getAuthFunc(): RequestHandler {\n    return async (req: Request, res: Response, next: NextFunc) => {\n      passport.authenticate(this.getStrategyName(),\n                            { session: false },\n                            (err, user, info) => {\n                              if (err) {\n                                return next(err);\n                              }\n                              if (!user) {\n                                const respType = this.getResponseType(req.headers['accept']);\n                                res.status(401).type(respType).send(this.errorMsg);\n                              } else {\n                                (req)['user'] = user;\n                                req.authInfo = info;\n                                next();\n                              }\n                            })(req, res, next);\n    };\n  }\n\n  public async authenticate(request: Request, options?: any): Promise {\n    if (this.isExcluded(request.path)) {\n      this.pass();\n    } else {\n      try {\n        const result: AuthenticationResult = await this.authenticateRequest(request, options);\n        this.success(result.user, result);\n      } catch (e) {\n        debug(e);\n        this.fail(401);\n      }\n    }\n  }\n\n  private isExcluded(path: string): boolean {\n    if (this.whitelist && this.whitelist.length) {\n      for (const valueRegExp of this.whitelist) {\n        if (valueRegExp.test(path)) {\n          return true;\n        }\n      }\n    } else if (this.excludedPathsString && this.excludedPathsString.length) {\n      for (const stringValue of this.excludedPathsString) {\n        if (path === stringValue) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  private getResponseType(acceptHeader: string = ''): string {\n    const jsonType = 'application/json';\n    if (acceptHeader && acceptHeader.indexOf(jsonType) >= 0\n      || acceptHeader.indexOf('/*') >= 0\n      || new RegExp(`[/+]${jsonType}[,;+]`).test(acceptHeader)) {\n      return `${jsonType}; charset=utf-8`;\n    }\n    return 'text/plain; charset=utf-8';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AjvInstance.html":{"url":"classes/AjvInstance.html","title":"class - AjvInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AjvInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/ajvinstance.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                ajv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                addCustomFormats\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                            \n                                    Private\n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/validation/ajvinstance.ts:3\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            ajv\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ajv:     ajv.Ajv\n\n                    \n                \n                    \n                        \n                            Type :     ajv.Ajv\n\n                        \n                    \n                        \n                            \n                                    Defined in src/validation/ajvinstance.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            addCustomFormats\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addCustomFormats()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/ajvinstance.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getInstance()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/ajvinstance.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/ajvinstance.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as ajv from 'ajv';\n\nexport class AjvInstance {\n\n  private constructor() { }\n\n  private static ajv: ajv.Ajv;\n\n  public static getInstance() {\n    if (!AjvInstance.ajv) {\n      AjvInstance.init();\n    }\n    return AjvInstance.ajv;\n  }\n\n  private static init(): void {\n    AjvInstance.ajv = new ajv({ allErrors: true });\n    AjvInstance.addCustomFormats();\n  }\n\n  private static addCustomFormats(): void {\n    AjvInstance.ajv.addFormat('alpha', value => /^[\\p{Letter}]+$/u.test(value));\n    AjvInstance.ajv.addFormat('alphanumeric', /^[\\p{Letter}\\p{Number}]+$/u);\n    AjvInstance.ajv.addFormat('ascii', /^[\\x00-\\x7F]+$/);\n    AjvInstance.ajv.addFormat('base64', /^(?:[A-Z0-9+\\/]{4})+={0,2}$/i);\n    // AjvInstance.ajv.addFormat('before', { compare: (input, comparedate) => {\n    //   return new Date(input).getTime()  ['true', 'false', '1', '0'].includes(value));\n    // tslint:disable-next-line:max-line-length\n    AjvInstance.ajv.addFormat('decimal', /[-+]?(?:\\d*\\.?\\d+|\\d+\\.?\\d*)(?:[eE][-+]?\\d+)?/);\n    // tslint:disable-next-line:max-line-length\n    // this.ajv.addFormat('iso8601', { validate: value => /^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(.[0-9]+)?(Z)?$/.test(value), type: 'string' });\n    AjvInstance.ajv.addFormat('json', value => /^[\\],:{}\\s]*$/\n      .test(value\n        .replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@')\n        .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\n        .replace(/(?:^|:|,)(?:\\s*\\[)+/g, '')));\n    AjvInstance.ajv.addFormat('numeric', /^[+-]?(\\d*[.])?\\d+$/);\n    AjvInstance.ajv.addFormat('notempty', value => value.trim().length > 0);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AjvValidationResolver.html":{"url":"classes/AjvValidationResolver.html","title":"class - AjvValidationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AjvValidationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/internal/validation/validationresolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                addValidationFunc\n                            \n                            \n                                    Private\n                                    Static\n                                applyValidators\n                            \n                            \n                                    Private\n                                    Static\n                                getContents\n                            \n                            \n                                    Static\n                                getValidationFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/decorators/internal/validation/validationresolver.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            addValidationFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addValidationFunc(paramValidation: Validation, name: string, validationFunc: ValidationSchema, message?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/validation/validationresolver.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paramValidation\n                                                        \n                                                                    Validation\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validationFunc\n                                                        \n                                                                    ValidationSchema\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationSchema\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            applyValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        applyValidators(controllerClass: any, methodName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/validation/validationresolver.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controllerClass\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationFunc[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getContents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getContents(contentTypes: string[], request: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/validation/validationresolver.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contentTypes\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        request\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getValidationFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValidationFunction(controllerClass: any, methodName: string, validationchain?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/validation/validationresolver.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controllerClass\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validationchain\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as stringify from 'safe-stable-stringify';\n\nimport { NextFunc } from '../../../server/types';\nimport { RequestContentType, ValidationFunc, ValidationSchema } from '../../../validation/validationschema';\nimport { Validation, Validators } from '../../../validation/validators';\nimport { ParamDescriptor, ParamType } from '../parameter.decorator';\nimport { ParameterResolver } from '../parameterresolver';\n\nexport class AjvValidationResolver {\n\n  private constructor() { }\n\n  public static getValidationFunction(controllerClass: any,\n                                      methodName: string,\n                                      validationchain?: any): (request: any, response: any, done: NextFunc) => void {\n    // const validators: ValidationFunc[] = validationchain ? validationchain : [];\n    const validators: ValidationFunc[] = AjvValidationResolver.applyValidators(controllerClass, methodName);\n    return (request: any, response: any, done: any) => {\n      let errors: any[] = [];\n      let contentParams: any;\n      let contentQueryBody: any;\n      let content: any;\n      let length = validators.length;\n\n      // tslint:disable-next-line:no-increment-decrement\n      while (length--) {\n        const validator = validators[length];\n        // check params\n        if (validator.requestcontenttype.length === 1) {\n          content = contentParams = contentParams ? contentParams\n            : AjvValidationResolver.getContents(validator.requestcontenttype, request);\n        } else { // check query and body\n          content = contentQueryBody = contentQueryBody ? contentQueryBody\n            : AjvValidationResolver.getContents(validator.requestcontenttype, request);\n        }\n        if (!validator.validate(content)) {\n          errors = errors.concat(validator.validate.errors);\n        }\n      }\n\n      if (errors.length) {\n        const errorMsg = { errors: Object.assign.apply(null, errors) };\n        // Fastify\n        if (request['raw']) {\n          response.serializer((payload: any) => stringify.default(payload));\n          response.type('application/json; charset=utf-8').status(400);\n          done(errorMsg);\n        } else { // express\n          response.type('application/json; charset=utf-8').status(400).send(errorMsg);\n        }\n      } else {\n        done();\n      }\n    };\n  }\n\n  private static applyValidators(controllerClass: any,\n                                 methodName: string): ValidationFunc[] {\n    const validationFunctions: ValidationFunc[] = [];\n    const parameters: ParamDescriptor[] = ParameterResolver.getParams(controllerClass, methodName);\n\n    // TODO: consider validationchain\n    for (const parameter of parameters) {\n      if (parameter.name && parameter.validation) {\n        const valSchema = ValidationSchema.check(parameter.name);\n        if (parameter.paramtype === ParamType.PATHPARAM) {\n          valSchema.useRequestContent(RequestContentType.PARAMS);\n        } else {\n          valSchema.useRequestContent(RequestContentType.QUERY, RequestContentType.BODY);\n        }\n        // add correct type to check e.g. check().isEmail()\n        this.addValidationFunc(parameter.validation, parameter.name, valSchema);\n        validationFunctions.push(valSchema.getValidationFunc());\n      }\n    }\n    return validationFunctions;\n  }\n\n  private static getContents(contentTypes: string[], request: any): any {\n    if (contentTypes.length === 1) {\n      return request[contentTypes[0]];\n    }\n    let merged = {};\n    for (const contentType of contentTypes) {\n      merged = { ...merged, ...(request)[contentType] };\n    }\n    return merged;\n  }\n\n  private static addValidationFunc(paramValidation: Validation,\n                                   name: string,\n                                   validationFunc: ValidationSchema,\n                                   message?: string): ValidationSchema {\n    let valFunc = paramValidation.required ? validationFunc.required() : validationFunc;\n    let type: string;\n    let msg;\n    switch (paramValidation.type) {\n      case Validators.Alpha:\n        type = 'letters only';\n        valFunc = valFunc.isAlpha();\n        break;\n      case Validators.Alphanumeric:\n        type = 'letters and numbers only';\n        valFunc = valFunc.isAlphanumeric();\n        break;\n      case Validators.Ascii:\n        type = 'ascii chars only';\n        valFunc = valFunc.isAscii();\n        break;\n      case Validators.Base64:\n        type = 'Base64';\n        valFunc = valFunc.isBase64();\n        break;\n      case Validators.Before:\n        msg = message ? message : `Parameter \"${name}\" is not before now`;\n        return valFunc.isBefore().withMessage(msg);\n      case Validators.Boolean:\n        type = 'boolean';\n        valFunc = valFunc.isBoolean();\n        break;\n      case Validators.Decimal:\n      case Validators.Float:\n        type = 'decimal';\n        valFunc = valFunc.isDecimal();\n        break;\n      case Validators.Email:\n        msg = message ? message : `Parameter \"${name}\" is not a valid email address`;\n        return valFunc.isEmail().withMessage(msg);\n      case Validators.ISO8601:\n        type = 'ISO8601';\n        valFunc = valFunc.isISO8601();\n        break;\n      case Validators.JSON:\n        type = 'JSON';\n        valFunc = valFunc.isJSON();\n        break;\n      case Validators.Numeric:\n        msg = message ? message : `Parameter \"${name}\" is not numeric`;\n        return valFunc.isNumeric().withMessage(msg);\n      case Validators.UUID:\n        msg = message ? message : `Parameter \"${name}\" is not an UUID`;\n        return valFunc.isUUID().withMessage(msg);\n      default:\n        msg = message ? message : `Parameter \"${name}\" must not be empty`;\n        return valFunc.isNotEmpty().withMessage(msg);\n    }\n    msg = message ? message : `Parameter \"${name}\" is not from type ${type}`;\n    return valFunc.withMessage(msg);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationCompat.html":{"url":"classes/ApplicationCompat.html","title":"class - ApplicationCompat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationCompat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/fastify/fastifycompat/extended/applicationcompat.ts\n        \n\n\n            \n                Extends\n            \n            \n                    SimpleApplicationCompat\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                app\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInstance\n                            \n                            \n                                    Static\n                                getProxyInstance\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Protected\n                                getBaseHttpClass\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                            \n                                    Static\n                                getProxyInstance\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getBaseHttpClass\n                            \n                            \n                                    Protected\n                                getCompatInstance\n                            \n                            \n                                    Protected\n                                getProxy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            app\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        app:     Application\n\n                    \n                \n                    \n                        \n                            Type :     Application\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleApplicationCompat\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleApplicationCompat:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            props\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        props:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleApplicationCompat\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleApplicationCompat:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getInstance(fastifyApplication: FastifyServer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/extended/applicationcompat.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fastifyApplication\n                                                        \n                                                                    FastifyServer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getProxyInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getProxyInstance(fastifyApplication: FastifyServer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/extended/applicationcompat.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fastifyApplication\n                                                        \n                                                                    FastifyServer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(name: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleApplicationCompat\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleApplicationCompat:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getBaseHttpClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseHttpClass()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleApplicationCompat\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleApplicationCompat:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getInstance(fastifyApplication: FastifyServer)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleApplicationCompat\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleApplicationCompat:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fastifyApplication\n                                                        \n                                                                    FastifyServer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getProxyInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getProxyInstance(fastifyApplication: FastifyServer)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleApplicationCompat\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleApplicationCompat:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fastifyApplication\n                                                        \n                                                                    FastifyServer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(name: any, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleApplicationCompat\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleApplicationCompat:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Application\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            getBaseHttpClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseHttpClass()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleApplicationCompat\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleApplicationCompat:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getCompatInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCompatInstance(type: string, useProxy: boolean)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleApplicationCompat\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleApplicationCompat:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        useProxy\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getProxy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getProxy(type: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleApplicationCompat\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleApplicationCompat:14\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { FastifyServer } from '../../../types';\nimport { SimpleApplicationCompat } from '../simple/simpleapplicationcompat';\n\nexport class ApplicationCompat extends SimpleApplicationCompat {\n\n  public static getInstance(fastifyApplication: FastifyServer): any {\n    return new ApplicationCompat(fastifyApplication).getCompatInstance('APPLICATION');\n  }\n\n  public static getProxyInstance(fastifyApplication: FastifyServer): any {\n    return new ApplicationCompat(fastifyApplication).getCompatInstance('APPLICATION', true);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticationConfig.html":{"url":"interfaces/AuthenticationConfig.html","title":"interface - AuthenticationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthenticationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication.config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        auth\n                                \n                                \n                                            Optional\n                                        excludes\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        strategy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        excludes\n                                    \n                                \n                                \n                                    \n                                        excludes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strategy\n                                    \n                                \n                                \n                                    \n                                        strategy:     PassportStrategy\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PassportStrategy\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PassportStrategy } from './auth/passport/passportstrategy';\n\nexport interface AuthenticationConfig {\n  path?: string;\n  excludes?: string[];\n  auth?: {\n    loginPath: string;\n    registrationPath: string;\n    controller: any;\n  };\n  strategy?: PassportStrategy;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthenticationController.html":{"url":"classes/AuthenticationController.html","title":"class - AuthenticationController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthenticationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controllers/auth.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                deleteAccount\n                            \n                            \n                                    Public\n                                    Async\n                                loginUser\n                            \n                            \n                                    Public\n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/controllers/auth.controller.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            deleteAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deleteAccount(email: string, password: string)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DELETE(undefined)\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/auth/controllers/auth.controller.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loginUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginUser(email: string, password: string)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @POST(undefined, {error: 401})\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/auth/controllers/auth.controller.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register(email: string, password: string)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @POST(undefined, {success: 201, error: 409})\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/auth/controllers/auth.controller.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration } from '../../config/config';\nimport { POST, DELETE } from '../../decorators/methoddecorators';\nimport { QUERYPARAM } from '../../decorators/parameterdecorators';\nimport { Validator_EmailRequired, Validator_Required } from '../../decorators/validators';\nimport { AuthenticationService } from '../services/authentication.service';\n\nexport class AuthenticationController {\n\n  constructor(private authenticationService: AuthenticationService) { }\n\n  @POST(Configuration.get('REGISTRATION_ENDPOINT') || '/register', {\n    success: 201,\n    error: 409,\n  })\n  public async register(@QUERYPARAM('email', Validator_EmailRequired) email: string,\n                        @QUERYPARAM('password', Validator_Required) password: string): Promise {\n    return this.authenticationService.register(email, password);\n  }\n\n  @POST(Configuration.get('LOGIN_ENDPOINT') || '/login', {\n    error: 401,\n  })\n  public async loginUser(@QUERYPARAM('email', Validator_EmailRequired) email: string,\n                         @QUERYPARAM('password', Validator_Required) password: string): Promise {\n    return this.authenticationService.login(email, password);\n  }\n\n  @DELETE(Configuration.get('DELETE_ACCOUNT_ENDPOINT') || '/deleteaccount')\n  public async deleteAccount(@QUERYPARAM('email', Validator_EmailRequired) email: string,\n                             @QUERYPARAM('password', Validator_Required) password: string): Promise {\n    this.authenticationService.delete(email, password);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticationResult.html":{"url":"interfaces/AuthenticationResult.html","title":"interface - AuthenticationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthenticationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/authenticationresult.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticationResult {\n  user: any;\n  token?: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthenticationService.html":{"url":"classes/AuthenticationService.html","title":"class - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                            \n                                    Public\n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, emailService: EMailService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/authentication.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                    EMailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/authentication.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/authentication.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/authentication.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug } from 'console';\n\nimport { EMailService } from '../../email/email.service';\nimport { AuthUser, AuthUserModel } from '../models/authuser';\nimport { JwtService } from './jwt.service';\nimport { Configuration } from '../../config/config';\n\nexport class AuthenticationService {\n\n  // TODO: emailservice as interface to allow different services\n  constructor(private jwtService: JwtService,\n              private emailService: EMailService) { }\n\n  public async login(email: string, password: string): Promise {\n    try {\n      const user: AuthUser = await AuthUserModel.findByEmail(email);\n      if (user && user.isPasswordValid(password)) {\n        return this.jwtService.createToken(user.getUUID());\n      }\n      throw ('Login failed');\n    } catch (e) {\n      debug(e);\n      throw new Error('Internal server error');\n    }\n  }\n\n  public async register(email: string, password: string): Promise {\n    let user: AuthUser | null = null;\n    user = await AuthUserModel.findByEmail(email);\n    if (user) {\n      throw ('User with that email address already exists');\n    }\n    try {\n      const userModel = {\n        password,\n        email: email.toLowerCase(),\n      };\n      user = await (await AuthUserModel.create(userModel)).save();\n      if (!user) {\n        throw ('Registration failed. Unable to add user.');\n      }\n      if (Configuration.getBoolean('AUTH_EMAIL_CONFIRMATION_REQUIRED')) {\n        this.emailService.sendTextMail('Bitte Email bestätigen...', email);\n      }\n      return this.jwtService.createToken(user.getUUID());\n    } catch (e) {\n      debug(e);\n      // TODO: use more meaningful message\n      throw ('Unable to add new user');\n    }\n  }\n\n  public async delete(email: string, password: string): Promise {\n    try {\n      const user: AuthUser = await AuthUserModel.findByEmail(email);\n      if (user && user.isPasswordValid(password)) {\n        await AuthUserModel.findByIdAndRemove(user.getId());\n        return;\n      }\n      throw ('Deletion of user failed');\n    } catch (e) {\n      debug(e);\n      throw new Error('Internal server error');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEncryptedDocument.html":{"url":"classes/BaseEncryptedDocument.html","title":"class - BaseEncryptedDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEncryptedDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/mongodb/baseencdocument.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Typegoose\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                docId\n                            \n                            \n                                    Private\n                                ids\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                findByProperties\n                            \n                            \n                                    Static\n                                    Async\n                                findByRefId\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Protected\n                                hasChanged\n                            \n                            \n                                    Protected\n                                initModel\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Protected\n                                updateModified\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            docId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        docId:     Types.ObjectId\n\n                    \n                \n                    \n                        \n                            Type :     Types.ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({index: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/mongodb/baseencdocument.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ids\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ids:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({index: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/database/mongodb/baseencdocument.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Async\n                            findByProperties\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        findByProperties(properties: any, clazz: Model)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @staticMethod()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/database/mongodb/baseencdocument.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        properties\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clazz\n                                                        \n                                                                    Model\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Async\n                            findByRefId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        findByRefId(id: string, clazz: Model)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @staticMethod()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/database/mongodb/baseencdocument.ts:81\n                            \n                        \n\n\n                \n                    \n                            Find an item that contains a refuuid which refrences to another document or model with that\nunique document id.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clazz\n                                                        \n                                                                    Model\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getId()\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @instanceMethod()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/database/mongodb/baseencdocument.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Types.ObjectId\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            hasChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasChanged(propname: string)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @instanceMethod()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/database/mongodb/baseencdocument.ts:35\n                            \n                        \n\n\n                \n                    \n                            When using the encryption plugin the properties are always updated with the decrypted values.\nTherefore the method isModified from mongoose does not return the correct result. This method\ncompares a value with a internally hold hash key to check, if the value has been changed. If\nyou use the mongoose-encrypt plugin you should use this method to check, if values have been\nchanged.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propname\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initModel()\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @instanceMethod()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/database/mongodb/baseencdocument.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        update(name: string)\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @instanceMethod()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/database/mongodb/baseencdocument.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            updateModified\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateModified()\n                    \n                \n\n                    \n                        \n                            Decorators : \n                            \n                            \n                                @instanceMethod()\n                            \n                        \n                    \n\n                        \n                            \n                                    Defined in src/database/mongodb/baseencdocument.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Model, Types } from 'mongoose';\nimport * as stringify from 'safe-stable-stringify';\nimport { Typegoose, instanceMethod, prop, staticMethod, plugin } from 'typegoose';\n\nimport { StringUtil } from '../../util/stringutil';\nimport { EncryptedMongoDbHelper } from './encryptedmongodbhelper';\n\n@plugin(EncryptedMongoDbHelper.getEncPlugin(), EncryptedMongoDbHelper.getEncOptions())\nexport class BaseEncryptedDocument extends Typegoose {\n\n  @prop({ index: true })\n  private docId!: Types.ObjectId;\n\n  @prop({ index: true })\n  private ids!: any;\n\n  @instanceMethod\n  public getId(): Types.ObjectId {\n    return this.docId;\n  }\n\n  /**\n   * When using the encryption plugin the properties are always updated with the decrypted values.\n   * Therefore the method isModified from mongoose does not return the correct result. This method\n   * compares a value with a internally hold hash key to check, if the value has been changed. If\n   * you use the mongoose-encrypt plugin you should use this method to check, if values have been\n   * changed.\n   *\n   * @protected\n   * @param {string} propname\n   * @returns\n   * @memberof BaseEncryptedDocument\n   */\n  @instanceMethod\n  protected hasChanged(propname: string) {\n    const value = Object.getOwnPropertyDescriptors(this)['_doc']['value'][propname];\n    return StringUtil.hashCode(value) === this.ids[propname];\n  }\n\n  @instanceMethod\n  // create uuid and internally hold hash keys that allows to check for modified values.\n  protected initModel(): void {\n    this.docId = Object.getOwnPropertyDescriptors(this)['_doc']['value']['_id'];\n    const ids: any = {};\n    const result = Object.getOwnPropertyDescriptors(this)['_doc']['value'];\n    if (result) {\n      for (const key in result) {\n        if (key !== '_id') {\n          ids[key] = StringUtil.hashCode(stringify.default(result[key]));\n        }\n      }\n      this.ids = ids;\n    }\n  }\n\n  @instanceMethod\n  protected update(name: string): void {\n    this.ids[name] = StringUtil.hashCode(\n      stringify.default(Object.getOwnPropertyDescriptors(this)['_doc']['value'][name]));\n  }\n\n  @instanceMethod\n  protected updateModified(): void {\n    for (const key in this.ids) {\n      if (this.hasChanged(key)) {\n        this.update(key);\n      }\n    }\n  }\n\n  /**\n   * Find an item that contains a refuuid which refrences to another document or model with that\n   * unique document id.\n   *\n   * @static\n   * @param {string} id\n   * @returns {Promise}\n   * @memberof BaseEncryptedDocument\n   */\n  @staticMethod\n  public static async findByRefId(id: string, clazz: Model): Promise {\n    const user: any = await BaseEncryptedDocument.findByProperties({ refid: id }, clazz);\n    return user;\n  }\n\n  @staticMethod\n  public static async findByProperties(properties: any, clazz: Model): Promise {\n    const where: any = {};\n    if (properties) {\n      for (const key in properties) {\n        if (key && properties[key]) {\n          const valueid: number = StringUtil.hashCode(stringify.default(properties[key]));\n          where[`ids.${key}`] = valueid;\n        }\n      }\n    }\n    const model: any = await clazz.findOne(where).exec();\n    return model;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Configuration.html":{"url":"classes/Configuration.html","title":"class - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                environment\n                            \n                            \n                                    Private\n                                    Static\n                                isInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                getArray\n                            \n                            \n                                    Static\n                                getBoolean\n                            \n                            \n                                    Static\n                                getEnvironment\n                            \n                            \n                                    Static\n                                getNumber\n                            \n                            \n                                    Static\n                                getObject\n                            \n                            \n                                    Private\n                                    Static\n                                getRawValue\n                            \n                            \n                                    Static\n                                init\n                            \n                            \n                                    Private\n                                    Static\n                                initEnvironment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     Environment\n\n                    \n                \n                    \n                        \n                            Type :     Environment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/config/config.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            isInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInit:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/config/config.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(name: string, defaultValue: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/config/config.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        defaultValue\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getArray(name: string, defaultArray: [])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/config/config.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        defaultArray\n                                                        \n                                                                    []\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBoolean(name: string, defaultValue: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/config/config.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        defaultValue\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getEnvironment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEnvironment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/config/config.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Environment\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNumber(name: string, defaultValue: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/config/config.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        defaultValue\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getObject(name: string, defaultValue: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/config/config.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        defaultValue\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getRawValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRawValue(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/config/config.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/config/config.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            initEnvironment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initEnvironment()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/config/config.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug, error, info } from 'console';\nimport * as fs from 'fs';\n\nimport * as dotenv from 'dotenv';\n\nimport { Environment } from './environment';\n\nexport class Configuration {\n\n  private static isInit: boolean;\n  private static environment: Environment;\n\n  public static getEnvironment(): Environment {\n    return Configuration.environment;\n  }\n\n  public static get(name: string, defaultValue: string = ''): string {\n    return Configuration.getRawValue(name) || defaultValue;\n  }\n\n  public static getBoolean(name: string, defaultValue: boolean = false): boolean {\n    const value: string | undefined = Configuration.getRawValue(name);\n    if (value && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n      return value === 'true';\n    }\n    return defaultValue;\n  }\n\n  public static getNumber(name: string, defaultValue: number): number {\n    const value: string | undefined = Configuration.getRawValue(name);\n    if (!isNaN(Number(value))) {\n      return Number(value);\n    }\n    return defaultValue;\n  }\n\n  public static getObject(name: string, defaultValue = {}): any {\n    const value: string | undefined = Configuration.getRawValue(name);\n    if (value && value.startsWith('{') && value.endsWith('}')) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        debug(e);\n        return defaultValue;\n      }\n    }\n    return defaultValue;\n  }\n\n  public static getArray(name: string, defaultArray = []): string[] {\n    const value: string | undefined = Configuration.getRawValue(name);\n    if (value && value.indexOf(',') > 0) {\n      return value.split(',');\n    }\n    return defaultArray;\n  }\n\n  public static init() {\n    if (Configuration.isInit) {\n      return;\n    }\n    Configuration.isInit = true;\n    Configuration.initEnvironment();\n    const existsWithDot = fs.existsSync(`./config/.env.${Configuration.environment}`);\n    const existsWithoutDot = fs.existsSync(`./config/env.${Configuration.environment}`);\n\n    if (existsWithDot || existsWithoutDot) {\n      info('Using configuration for %s to supply config environment variables', Configuration.environment);\n\n      const configFile: Buffer = fs.readFileSync(existsWithDot ? `./config/.env.${Configuration.environment}`\n      : `./config/env.${Configuration.environment}`);\n\n      const envConfig = dotenv.parse(configFile);\n\n      dotenv.config({\n        path: existsWithDot ? `./config/.env.${Configuration.environment}`\n          : `./config/env.${Configuration.environment}`,\n      });\n      for (const key in process.env) {\n        if (envConfig[key]) {\n          const env = process.env[key];\n          if (env && env.startsWith('file:')) {\n            debug('Read file %s into environment variable %s', env.substring(5), key);\n            process.env[key] = fs.readFileSync(env.substring(5), 'utf8');\n          } else if (env && (env.toLowerCase() === 'true' || env.toLowerCase() === 'false')) {\n            process.env[key] === 'true';\n          }\n        }\n      }\n    } else if (Configuration.environment !== Environment.Test) {\n      error('No configuration file found, stop the server');\n      process.exit(1);\n    }\n  }\n\n  private static initEnvironment(): void {\n    const environment = (Configuration.getRawValue('NODE_ENV')\n      || Configuration.getRawValue('ENVIRONMENT')\n      || 'development').toLowerCase();\n\n    if (environment === Environment.Development) {\n      Configuration.environment = Environment.Development;\n    } else if (environment === Environment.Test) {\n      Configuration.environment = Environment.Test;\n    } else if (environment === Environment.Staging) {\n      Configuration.environment = Environment.Staging;\n    } else if (environment === Environment.Production) {\n      Configuration.environment = Environment.Production;\n    } else {\n      Configuration.environment = Environment.Other;\n    }\n    info('Environment is %s', Configuration.environment);\n  }\n\n  private static getRawValue(name: string) {\n    return process.env[name];\n  }\n}\nConfiguration.init();\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataType.html":{"url":"classes/DataType.html","title":"class - DataType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/datatype.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getType\n                            \n                            \n                                    Static\n                                isArray\n                            \n                            \n                                    Static\n                                isBoolean\n                            \n                            \n                                    Static\n                                isDate\n                            \n                            \n                                    Static\n                                isError\n                            \n                            \n                                    Static\n                                isFunction\n                            \n                            \n                                    Static\n                                isJsonString\n                            \n                            \n                                    Static\n                                isNumber\n                            \n                            \n                                    Static\n                                isObject\n                            \n                            \n                                    Static\n                                isRegExp\n                            \n                            \n                                    Static\n                                isString\n                            \n                            \n                                    Static\n                                isUndefined\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getType(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/datatype.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isArray(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/datatype.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isBoolean(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/datatype.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isDate(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/datatype.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isError(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/datatype.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isFunction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isFunction(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/datatype.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isJsonString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isJsonString(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/datatype.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isNumber(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/datatype.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isObject(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/datatype.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isRegExp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isRegExp(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/datatype.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isString(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/datatype.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isUndefined\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isUndefined(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/datatype.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum Type {\n  Array = 'array',\n  Boolean = 'boolean',\n  Date = 'date',\n  Error = 'error',\n  Function = 'function',\n  JsonString = 'jsonstring',\n  Number = 'number',\n  Object = 'object',\n  RegExp = 'regexp',\n  String = 'string',\n  Undefined = 'undefined',\n  Unknown = 'unknown',\n}\n\nexport class DataType {\n\n  public static getType(value: any): Type {\n    if (DataType.isUndefined(value)) {\n      return Type.Undefined;\n    }\n    if (DataType.isJsonString(value)) {\n      return Type.JsonString;\n    }\n    if (DataType.isString(value)) {\n      return Type.String;\n    }\n    if (DataType.isObject(value)) {\n      return Type.Object;\n    }\n    if (DataType.isNumber(value)) {\n      return Type.Number;\n    }\n    if (DataType.isArray(value)) {\n      return Type.Array;\n    }\n    if (DataType.isBoolean(value)) {\n      return Type.Boolean;\n    }\n    if (DataType.isDate(value)) {\n      return Type.Date;\n    }\n    if (DataType.isError(value)) {\n      return Type.Error;\n    }\n    if (DataType.isFunction(value)) {\n      return Type.Function;\n    }\n    if (DataType.isRegExp(value)) {\n      return Type.RegExp;\n    }\n    return Type.Unknown;\n  }\n\n  public static isArray(value: any): boolean {\n    return Array.isArray(value);\n  }\n\n  public static isBoolean(value: any): boolean {\n    return typeof value === 'boolean' || value instanceof Boolean;\n  }\n\n  public static isDate(value: any): boolean {\n    return value instanceof Date;\n  }\n\n  public static isError(value: any): boolean {\n    return value instanceof Error && typeof value.message !== 'undefined';\n  }\n\n  public static isFunction(value: any): boolean {\n    return typeof value === 'function';\n  }\n\n  public static isJsonString(value: any): boolean {\n    try {\n      return DataType.isString(value) && JSON.parse(value);\n    } catch (e) { }\n    return false;\n  }\n\n  public static isNumber(value: any): boolean {\n    return Number.isFinite(value);\n  }\n\n  public static isObject(value: any): boolean {\n    return value && typeof value === 'object' && (value.constructor === Object\n    || (!DataType.isArray(value) && !DataType.isRegExp(value)\n      && !DataType.isUndefined(value) && !DataType.isDate(value)\n        && !DataType.isNumber(value) && !DataType.isError(value)));\n  }\n\n  public static isRegExp(value: any): boolean {\n    return value && typeof value === 'object' && value.constructor === RegExp;\n  }\n\n  public static isString(value: any): boolean {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n  public static isUndefined(value: any): boolean {\n    return value === null || typeof value === 'undefined';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultJwtService.html":{"url":"classes/DefaultJwtService.html","title":"class - DefaultJwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultJwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/defaultjwt.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        JwtService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                ASSUMED_MAX_REQUEST_TIME\n                            \n                            \n                                    Static\n                                    Readonly\n                                DEFAULT_OPTIONS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createToken\n                            \n                            \n                                    Public\n                                    Async\n                                decodeToken\n                            \n                            \n                                    Public\n                                    Async\n                                decodeTokenFromRequest\n                            \n                            \n                                    Private\n                                    Async\n                                getSignCert\n                            \n                            \n                                    Private\n                                    Async\n                                getTokenFromRequest\n                            \n                            \n                                    Private\n                                isExpired\n                            \n                            \n                                    Public\n                                    Async\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(privateSignCert: string, publicSignCert: string, signcertService?: SignCertService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/defaultjwt.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        privateSignCert\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publicSignCert\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signcertService\n                                                  \n                                                        \n                                                                    SignCertService\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            ASSUMED_MAX_REQUEST_TIME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ASSUMED_MAX_REQUEST_TIME:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/services/defaultjwt.service.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DEFAULT_OPTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_OPTIONS:     SignOptions\n\n                    \n                \n                    \n                        \n                            Type :     SignOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    expiresIn: '30d', // 30d\n    algorithm: 'RS256', // RS256 is recommended when using RSA, RS384 or RS512 optional\n    encoding: 'utf8',\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/services/defaultjwt.service.ts:46\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            createToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createToken(userid?: string, payload: json, options?: SignOptions, asJson: boolean, kid?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/defaultjwt.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        userid\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    json\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    SignOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        asJson\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        kid\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            decodeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decodeToken(inputtoken: string, verify: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/defaultjwt.service.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        inputtoken\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        verify\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            decodeTokenFromRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        decodeTokenFromRequest(headers: any, body: any, query: any, verify: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/defaultjwt.service.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        query\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        verify\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            getSignCert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSignCert(isprivate: boolean, kid?: string | undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/defaultjwt.service.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isprivate\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        kid\n                                                        \n                                                                    string | undefined\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            getTokenFromRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTokenFromRequest(headers: any, body: any, query: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/defaultjwt.service.ts:144\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        query\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isExpired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isExpired(token: Token)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/defaultjwt.service.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    Token\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            verifyToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        verifyToken(token: Token)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/defaultjwt.service.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    Token\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug, error } from 'console';\n\nimport { SignOptions, decode, sign, verify } from 'jsonwebtoken';\n\nimport { Token } from '../models/token';\nimport { JwtService, json } from './jwt.service';\nimport { SignCertService } from './signcert.service';\n\nexport class DefaultJwtService implements JwtService {\n\n  constructor(private privateSignCert: string,\n              private publicSignCert: string,\n              private signcertService?: SignCertService) {\n    if (!privateSignCert || ! publicSignCert) {\n      throw new Error('RSA keys are mandatory for JWT service');\n    }\n  }\n\n  /*\n  interface SignOptions {\n\n    // (kid) Name of the signing key. Not relevant here as only one key is used\n    keyid?: string;\n    expiresIn?: string | number; // (exp) Value as seconds or a time string like \"2 days\",\n  \"10h\", \"7d\" ( see https://github.com/zeit/ms.js)\n    // https://stackoverflow.com/questions/43291659/usage-of-nbf-in-json-web-tokens\n    notBefore?: string | number; // (nbf) Value as seconds or a time string like \"2 days\", \"10h\", \"7d\"\n  ( see https://github.com/zeit/ms.js)\n    audience?: string | string[]; // (aud) list of resource servers this token is allowed for\n    subject?: string; // (sub) can be the user id\n    issuer?: string; // (iss) e.g. SSO server that has approved users credentials\n    jwtid?: string; // (jti) unique id can be used e.g. to revoke token using a whitelist or blacklist\n    noTimestamp?: boolean; // do not set iat (JWT creation date) property\n    header?: object; // jwt header\n    encoding?: string;\n  }\n  */\n\n  /**\n   *\n   *\n   * @static\n   * @type {SignOptions}\n   * @memberof JwtService\n   */\n  public static readonly DEFAULT_OPTIONS: SignOptions = {\n    expiresIn: '30d', // 30d\n    algorithm: 'RS256', // RS256 is recommended when using RSA, RS384 or RS512 optional\n    encoding: 'utf8',\n  };\n\n  // 10 sec should be subtracted from token expiration time du to request delay when contacting the\n  // authorization server;\n  private static readonly ASSUMED_MAX_REQUEST_TIME = 10;\n\n  public async createToken(userid?: string,\n                           payload: json = {},\n                           options?: SignOptions,\n                           asJson: boolean = true,\n                           kid?: string): Promise {\n    const signCert: string | null = await this.getSignCert(true, kid);\n    const opts: SignOptions = options || { ...DefaultJwtService.DEFAULT_OPTIONS };\n\n    if (userid && !opts.subject) {\n      opts.subject = userid;\n    }\n    return new Promise((resolve, reject) => {\n      sign(payload, signCert, opts, (err, token) => {\n        if (err) {\n          error(err);\n          reject(err);\n        } else {\n          resolve(asJson ? { access_token: token } : token);\n        }\n      });\n    });\n  }\n\n  private async getSignCert(isprivate: boolean,\n                            kid?: string | undefined): Promise {\n    if (this.signcertService && kid) {\n      return isprivate ? this.signcertService.getPrivateCert(kid) : this.signcertService.getPublicCert(kid);\n    }\n    return (isprivate ? this.privateSignCert : this.publicSignCert) || '';\n  }\n\n  public async decodeTokenFromRequest(headers: any, body: any, query: any, verify: boolean = true): Promise {\n    const token: string = await this.getTokenFromRequest(headers, body, query);\n    if (!token) {\n      throw ('Invalid JWT');\n    }\n    return this.decodeToken(token);\n  }\n\n  public async decodeToken(inputtoken: string, verify: boolean = true): Promise {\n    if (!inputtoken) {\n      throw ('Invalid JWT');\n    }\n    const decoded: any = decode(inputtoken, { complete: true });\n    if (!decoded) {\n      debug('JWT is not valid');\n    }\n    const token: Token = new Token({\n      accesstoken: inputtoken,\n      kid: decoded.header.kid,\n      expires: decoded.payload.exp,\n      payload: decoded.payload,\n      header: decoded.header,\n    });\n    if (verify) {\n      this.verifyToken(token);\n    }\n    return token;\n  }\n\n  public async verifyToken(token: Token): Promise {\n    // Check expiration date.\n    if (this.isExpired(token)) {\n      throw ('Token expired');\n    }\n\n    const signCert: string = await this.getSignCert(false, token.getKid());\n    if (!signCert) {\n      error('Can not verify JWT, sign certificate is missing');\n      throw ('JWT malformed or verification not possible');\n    }\n\n    return new Promise((resolve, reject) => {\n      verify(token.getAccessToken(), signCert, (err, token) => {\n        if (err) {\n          error(err);\n          reject(err);\n        } else {\n          resolve(true);\n        }\n      });\n    });\n  }\n\n  private isExpired(token: Token): boolean {\n    return !token || token.getExpiration() - DefaultJwtService.ASSUMED_MAX_REQUEST_TIME  {\n    const authorization: string = headers && headers['authorization'] ? headers['authorization'] || '' : '';\n    if (authorization.split(' ')[0] === 'Bearer') {\n      return authorization.split(' ')[1];\n    }\n    if (query && query['access_token']) {\n      return query.access_token;\n    }\n    if (body && body['access_token']) {\n      return body.access_token;\n    }\n    return '';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EMailService.html":{"url":"classes/EMailService.html","title":"class - EMailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EMailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                DEFAULT_EMAIL_CONFIG\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createMailOptions\n                            \n                            \n                                    Private\n                                initSmtpServer\n                            \n                            \n                                    Public\n                                    Async\n                                sendHtmlMail\n                            \n                            \n                                    Private\n                                    Async\n                                sendMail\n                            \n                            \n                                    Public\n                                    Async\n                                sendTextMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(from: string, defaultSubject: string, smtpData: SmtpData)\n                    \n                \n                        \n                            \n                                Defined in src/email/email.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Sender of the email. Can be a simple email address or name and email like this:\n\n                                                        \n                                                \n                                                \n                                                        defaultSubject\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        smtpData\n                                                  \n                                                        \n                                                                    SmtpData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                            \"Max Mustermann\" \n\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            DEFAULT_EMAIL_CONFIG\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_EMAIL_CONFIG:     SmtpData\n\n                    \n                \n                    \n                        \n                            Type :     SmtpData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    host: 'localhost',\n    port: 587,\n    secure: false,\n    ignoreTLS: true,\n    requireTLS: false,\n    tls: {},\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/email/email.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        transporter:     Transporter\n\n                    \n                \n                    \n                        \n                            Type :     Transporter\n\n                        \n                    \n                        \n                            \n                                    Defined in src/email/email.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createMailOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createMailOptions(to: string, content: string, subject?: string, from?: string, isHtml: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/email/email.service.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        to\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        content\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        subject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        from\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        isHtml\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { [x: string]: string; to: string; from: string; subject: string; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initSmtpServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initSmtpServer(smtpData: SmtpData)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/email/email.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        smtpData\n                                                        \n                                                                    SmtpData\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                { host: 'localhost', port: 587 }\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Transporter\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            sendHtmlMail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendHtmlMail(html: string, to: string, subject?: string, from?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/email/email.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        html\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        to\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        subject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        from\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            sendMail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendMail(mailOptions: SendMailOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/email/email.service.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailOptions\n                                                        \n                                                                    SendMailOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            sendTextMail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendTextMail(text: string, to: string, subject?: string, from?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/email/email.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        to\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        subject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        from\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug } from 'console';\n\nimport { SendMailOptions, SentMessageInfo, Transporter, createTransport } from 'nodemailer';\n\nimport { SmtpData } from './smtpdata';\n\nexport class EMailService {\n\n  private static readonly DEFAULT_EMAIL_CONFIG: SmtpData = {\n    host: 'localhost',\n    port: 587,\n    secure: false,\n    ignoreTLS: true,\n    requireTLS: false,\n    tls: {},\n  };\n\n  private transporter: Transporter;\n\n   /**\n    *\n    * @param from Sender of the email. Can be a simple email address or name and email like this:\n    * @example\n    * \"Max Mustermann\" \n    * @param defaultSubject\n    * @param smtpData\n    */\n  constructor(private from: string, private defaultSubject: string, smtpData: SmtpData) {\n    const config: SmtpData = { ...EMailService.DEFAULT_EMAIL_CONFIG, ...(smtpData || {}) };\n    this.transporter = this.initSmtpServer(config);\n  }\n\n  private initSmtpServer(smtpData: SmtpData = { host: 'localhost', port: 587 }): Transporter {\n    const auth = smtpData.password && smtpData.user\n        ? { user: smtpData.user, pass: smtpData.password } : {};\n\n    return createTransport({\n      auth,\n      host: smtpData.host || 'localhost',\n      port: smtpData.port || smtpData.secure ? 465 : 587,\n      secure: smtpData.secure || smtpData.port === 465,\n    });\n  }\n\n  public async sendTextMail(text: string, to: string, subject?: string, from?: string): Promise {\n    const mailOptions: SendMailOptions = this.createMailOptions(to, text, subject, from);\n    this.sendMail(mailOptions);\n  }\n\n  public async sendHtmlMail(html: string, to: string, subject?: string, from?: string): Promise {\n    const mailOptions: SendMailOptions = this.createMailOptions(to, html, subject, from, true);\n    this.sendMail(mailOptions);\n  }\n\n  private async sendMail(mailOptions: SendMailOptions): Promise {\n    try {\n      const sentinfo: SentMessageInfo = await this.transporter.sendMail(mailOptions);\n      debug('Message sent: %s', sentinfo.messageId);\n    } catch (e) {\n      debug(e);\n      throw new Error(e);\n    }\n  }\n\n  private createMailOptions(to: string, content: string, subject?: string, from?: string, isHtml: boolean = false) {\n    return {\n      to,\n      from: from || this.from,\n      subject: subject || this.defaultSubject,\n      [isHtml ? 'html' : 'text']: content,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailConfirmation.html":{"url":"classes/EmailConfirmation.html","title":"class - EmailConfirmation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailConfirmation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/emailconfirmation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                confirmationuuid\n                            \n                            \n                                    Private\n                                    Optional\n                                confirmed\n                            \n                            \n                                    Private\n                                    Optional\n                                senddate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            confirmationuuid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmationuuid:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/emailconfirmation.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            confirmed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/emailconfirmation.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            senddate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        senddate:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/emailconfirmation.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop } from 'typegoose';\n\nexport class EmailConfirmation {\n\n  @prop()\n  private confirmed?: boolean;\n\n  @prop()\n  private senddate?: Date;\n\n  @prop()\n  private confirmationuuid?: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EncryptedMongoDbHelper.html":{"url":"classes/EncryptedMongoDbHelper.html","title":"class - EncryptedMongoDbHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EncryptedMongoDbHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/mongodb/encryptedmongodbhelper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getEncOptions\n                            \n                            \n                                    Static\n                                getEncPlugin\n                            \n                            \n                                    Static\n                                    Async\n                                preFunc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/database/mongodb/encryptedmongodbhelper.ts:4\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getEncOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEncOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/database/mongodb/encryptedmongodbhelper.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getEncPlugin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEncPlugin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/database/mongodb/encryptedmongodbhelper.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Async\n                            preFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        preFunc(model, next: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/database/mongodb/encryptedmongodbhelper.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration } from '../../config/config';\nimport { MongooseDocument } from 'mongoose';\n\nexport class EncryptedMongoDbHelper {\n\n  private constructor() {}\n\n  public static getEncPlugin(): any {\n    return Configuration.getBoolean('USE_MONGOOSE_ENCRYPTION')\n      || Configuration.getBoolean('USE_TINGODB') ? require('mongoose-encryption') : function () { };\n  }\n\n  public static getEncOptions(): any {\n    return {\n      encryptionKey: Configuration.get('MONGOOSE_ENCRYPT_SECRET'),\n      signingKey: Configuration.get('MONGOOSE_ENCRYPT_SIGNKEY'),\n    };\n  }\n\n  public static async preFunc(model: any & MongooseDocument, next: () => void): Promise {\n    if (model.isNew) {\n      model.initModel();\n    } else {\n      model.updateModified(model);\n    }\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Endpoint.html":{"url":"interfaces/Endpoint.html","title":"interface - Endpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Endpoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/endpoint.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dir\n                                \n                                \n                                            Optional\n                                        directives\n                                \n                                \n                                            Optional\n                                        index\n                                \n                                \n                                            Optional\n                                        insecureContent\n                                \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dir\n                                    \n                                \n                                \n                                    \n                                        dir:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        directives\n                                    \n                                \n                                \n                                    \n                                        directives:     IHelmetContentSecurityPolicyDirectives\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IHelmetContentSecurityPolicyDirectives\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insecureContent\n                                    \n                                \n                                \n                                    \n                                        insecureContent:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IHelmetContentSecurityPolicyDirectives } from 'helmet';\n\nexport interface Endpoint {\n  path: string;\n  dir: string;\n  index?: string;\n  directives?: IHelmetContentSecurityPolicyDirectives;\n  insecureContent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressValidationResolver.html":{"url":"classes/ExpressValidationResolver.html","title":"class - ExpressValidationResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressValidationResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/internal/validation/expressvalidationresolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                expandValidationFunc\n                            \n                            \n                                    Static\n                                getValidationRules\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/decorators/internal/validation/expressvalidationresolver.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            expandValidationFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        expandValidationFunc(paramValidation: Validation, name: string, validationFunc: ValidationChain, message?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/validation/expressvalidationresolver.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paramValidation\n                                                        \n                                                                    Validation\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validationFunc\n                                                        \n                                                                    ValidationChain\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationChain\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getValidationRules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValidationRules(controllerClass: any, methodName: string, validationchain?: RequestHandler[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/validation/expressvalidationresolver.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controllerClass\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validationchain\n                                                        \n                                                                    RequestHandler[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     RequestHandler[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler } from 'express';\nimport { ValidationChain, check } from 'express-validator/check';\nimport { sanitize } from 'express-validator/filter';\n\nimport { Validation, Validators } from '../../../validation/validators';\nimport { ParamDescriptor } from '../parameter.decorator';\nimport { ParameterResolver } from '../parameterresolver';\n\nexport class ExpressValidationResolver {\n\n  private constructor() { }\n\n  public static getValidationRules(controllerClass: any,\n                                   methodName: string,\n                                   validationchain?: RequestHandler[]): RequestHandler[] {\n    const validators: RequestHandler[] = validationchain ? validationchain : [];\n    const descriptors: ParamDescriptor[] = ParameterResolver.getParams(controllerClass, methodName);\n    for (const descriptor of descriptors) {\n      if (descriptor.name) {\n        validators.push(sanitize(descriptor.name).trim());\n        if (!validationchain && descriptor.validation) {\n          let validationFunc: ValidationChain = check(descriptor.name);\n          // add correct type to check e.g. check().isEmail()\n          validationFunc = this.expandValidationFunc(descriptor.validation, descriptor.name, validationFunc);\n          validators.push(validationFunc);\n        }\n      }\n    }\n    return validators;\n  }\n\n  private static expandValidationFunc(paramValidation: Validation,\n                                      name: string,\n                                      validationFunc: ValidationChain,\n                                      message?: string): ValidationChain {\n    let valFunc = paramValidation.required ? validationFunc : validationFunc.optional();\n    let type: string;\n    let msg;\n    switch (paramValidation.type) {\n      case Validators.Alpha:\n        type = 'letters only';\n        valFunc = valFunc.isAlpha();\n        break;\n      case Validators.Alphanumeric:\n        type = 'letters and numbers only';\n        valFunc = valFunc.isAlphanumeric();\n        break;\n      case Validators.Ascii:\n        type = 'ascii chars only';\n        valFunc = valFunc.isAscii();\n        break;\n      case Validators.Base64:\n        type = 'Base64';\n        valFunc = valFunc.isBase64();\n        break;\n      case Validators.Before:\n        msg = message ? message : `Parameter \"${name}\" is not before now`;\n        return valFunc.isBefore().withMessage(msg);\n      case Validators.Boolean:\n        type = 'boolean';\n        valFunc = valFunc.isBoolean();\n        break;\n      case Validators.Decimal:\n        type = 'decimal';\n        valFunc = valFunc.isDecimal();\n        break;\n      case Validators.Email:\n        msg = message ? message : `Parameter \"${name}\" is not a valid email address`;\n        return valFunc.isEmail().normalizeEmail().withMessage(msg);\n      case Validators.Float:\n        type = 'float';\n        valFunc = valFunc.isFloat();\n        break;\n      case Validators.ISO8601:\n        type = 'ISO8601';\n        valFunc = valFunc.isISO8601();\n        break;\n      case Validators.JSON:\n        type = 'JSON';\n        valFunc = valFunc.isJSON();\n        break;\n      case Validators.Numeric:\n        msg = message ? message : `Parameter \"${name}\" is not numeric`;\n        return valFunc.isNumeric().withMessage(msg);\n      case Validators.UUID:\n        msg = message ? message : `Parameter \"${name}\" is not an UUID`;\n        return valFunc.isUUID().withMessage(msg);\n      default:\n        msg = message ? message : `Parameter \"${name}\" is mandatory`;\n        return valFunc.not().isEmpty().withMessage(msg);\n    }\n    msg = message ? message : `Parameter \"${name}\" is not from type ${type}`;\n    return valFunc.withMessage(msg);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalServer.html":{"url":"interfaces/InternalServer.html","title":"interface - InternalServer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InternalServer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/internalserver.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        use\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        use\n                                    \n                                \n                                \n                                    \n                                        use:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Middleware } from './types';\n\nexport interface InternalServer {\n\n  use: (pathOrMiddleware: Middleware | string, middleware?: Middleware) => void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtService.html":{"url":"interfaces/JwtService.html","title":"interface - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/jwt.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createToken\n                                \n                                \n                                    decodeToken\n                                \n                                \n                                    decodeTokenFromRequest\n                                \n                                \n                                    verifyToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateToken(userid?: string, payload?: json, options?: SignOptions, asJson?: boolean, kid?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/jwt.service.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userid\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    json\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    SignOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        asJson\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        kid\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decodeToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ndecodeToken(inputtoken: string, verify?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/jwt.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inputtoken\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        verify\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decodeTokenFromRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \ndecodeTokenFromRequest(headers: any, body: any, query: any, verify?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/jwt.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        query\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        verify\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verifyToken\n                            \n                            \n                        \n                    \n                \n                \n                    \nverifyToken(token: Token)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/jwt.service.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    Token\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Token } from '../models/token';\nimport { SignOptions } from 'jsonwebtoken';\n\nexport type json = object;\n\nexport interface JwtService {\n  verifyToken(token: Token) : Promise;\n  decodeToken(inputtoken: string, verify?: boolean): Promise;\n  decodeTokenFromRequest(headers: any, body: any, query: any, verify?: boolean): Promise;\n  createToken(userid?: string,\n              payload?: json,\n              options?: SignOptions,\n              asJson?: boolean,\n              kid?: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalJwtStrategy.html":{"url":"classes/LocalJwtStrategy.html","title":"class - LocalJwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalJwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/strategies/localjwtstrategy.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractJwtStrategy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                STRATEGYNAME\n                            \n                            \n                                    Protected\n                                    Readonly\n                                errorMsg\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                excludedPathsString\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                whitelist\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                authenticateJwtRequest\n                            \n                            \n                                    Protected\n                                getStrategyName\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                authenticateJwtRequest\n                            \n                            \n                                    Protected\n                                    Async\n                                authenticateRequest\n                            \n                            \n                                    Public\n                                addToExpress\n                            \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Async\n                                authenticateRequest\n                            \n                            \n                                    Private\n                                getAuthFunc\n                            \n                            \n                                    Public\n                                getMiddleware\n                            \n                            \n                                    Private\n                                getResponseType\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getStrategyName\n                            \n                            \n                                    Private\n                                isExcluded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            STRATEGYNAME\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        STRATEGYNAME:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'localauth'\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/passport/strategies/localjwtstrategy.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            errorMsg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMsg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            excludedPathsString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        excludedPathsString:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                                Optional\n                            whitelist\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        whitelist:     RegExp[]\n\n                    \n                \n                    \n                        \n                            Type :     RegExp[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            authenticateJwtRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticateJwtRequest(token: Token, request: Request, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/strategies/localjwtstrategy.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    Token\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getStrategyName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStrategyName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/strategies/localjwtstrategy.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                                Async\n                            authenticateJwtRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticateJwtRequest(token: Token, request: Request, options?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    Token\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            authenticateRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticateRequest(request: Request, options?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addToExpress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addToExpress(express: Express, path: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:60\n                            \n                        \n\n\n                \n                    \n                            Adds this passport strategy to the express router.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        express\n                                                        \n                                                                    Express\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                '/'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            \n// Assumed AuthJwtStrategy extends {\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticate(request: Request, options?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                                Async\n                            authenticateRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticateRequest(request: Request, options?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAuthFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthFunc()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     RequestHandler\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getMiddleware\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMiddleware()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ExpressMiddleware | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getResponseType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getResponseType(acceptHeader: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        acceptHeader\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            getStrategyName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStrategyName()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isExcluded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isExcluded(path: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractJwtStrategy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractJwtStrategy:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug } from 'console';\n\nimport { Request } from 'express';\n\nimport { AuthUser } from '../../models/authuser';\nimport { Token } from '../../models/token';\nimport { AbstractJwtStrategy } from '../abstractjwtstrategy';\nimport { AuthenticationResult } from '../authenticationresult';\n\nexport class LocalJwtStrategy extends AbstractJwtStrategy {\n\n  public static readonly STRATEGYNAME: string = 'localauth';\n\n  protected getStrategyName(): string {\n    return LocalJwtStrategy.STRATEGYNAME;\n  }\n\n  protected async authenticateJwtRequest(token: Token,\n                                         request: Request,\n                                         options?: any): Promise {\n    const userid = token.getUserId();\n    const user: AuthUser = await AuthUser.findByUUID(userid);\n    debug('authenticateJwtRequest: user for id %s is %o', userid, user);\n    if (!user) {\n      throw new Error('Invalid user token');\n    }\n    return { user, token };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogLevels.html":{"url":"classes/LogLevels.html","title":"class - LogLevels","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogLevels\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logger/loglevels.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                allowedLogLevel\n                            \n                            \n                                    Static\n                                    Readonly\n                                DEFAULT_LOG_LEVEL\n                            \n                            \n                                    Private\n                                    Static\n                                logLevels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isLogLevel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            allowedLogLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allowedLogLevel:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/loglevels.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DEFAULT_LOG_LEVEL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_LOG_LEVEL:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/loglevels.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            logLevels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logLevels:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map([\n    ['TRACE', 1],\n    ['DEBUG', 2],\n    ['INFO', 3],\n    ['WARN', 4],\n    ['ERROR', 5],\n    ['FATAL', 6],\n    ['OFF', 7],\n  ])\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/loglevels.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isLogLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isLogLevel(logLevel: string, allowedLogLevel?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/loglevels.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logLevel\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        allowedLogLevel\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration } from '../config/config';\n\nexport class LogLevels {\n\n  public static readonly DEFAULT_LOG_LEVEL = 3; // INFO\n\n  private static logLevels: Map = new Map([\n    ['TRACE', 1],\n    ['DEBUG', 2],\n    ['INFO', 3],\n    ['WARN', 4],\n    ['ERROR', 5],\n    ['FATAL', 6],\n    ['OFF', 7],\n  ]);\n\n  private static allowedLogLevel: number;\n\n  public static isLogLevel(logLevel: string, allowedLogLevel?: string) {\n    if (!LogLevels.allowedLogLevel) {\n      LogLevels.allowedLogLevel = LogLevels.logLevels.get((Configuration.get('LOG_LEVEL') || '').toUpperCase())\n        || LogLevels.DEFAULT_LOG_LEVEL;\n    }\n    const used: number = LogLevels.logLevels.get(logLevel.toUpperCase()) || LogLevels.DEFAULT_LOG_LEVEL;\n    let allowed: number = LogLevels.allowedLogLevel;\n    if (allowedLogLevel) {\n      allowed = LogLevels.logLevels.get(allowedLogLevel.toUpperCase()) || LogLevels.DEFAULT_LOG_LEVEL;\n    }\n    return used >= allowed;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerWrapper.html":{"url":"classes/LoggerWrapper.html","title":"class - LoggerWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logger/winstonlogger.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                DEFAULT_LOG_LEVEL\n                            \n                            \n                                    Static\n                                    Readonly\n                                DEFAULT_PATH\n                            \n                            \n                                    Private\n                                logDir\n                            \n                            \n                                    Private\n                                    Static\n                                loggerWrapper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFormat\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                            \n                                    Public\n                                getServerLogger\n                            \n                            \n                                    Private\n                                getTransports\n                            \n                            \n                                    Private\n                                initDir\n                            \n                            \n                                    Private\n                                initLogger\n                            \n                            \n                                    Private\n                                replaceConsoleLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/logger/winstonlogger.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DEFAULT_LOG_LEVEL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_LOG_LEVEL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'info'\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            DEFAULT_PATH\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_PATH:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : './logs'\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logDir\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logDir:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            loggerWrapper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggerWrapper:     LoggerWrapper\n\n                    \n                \n                    \n                        \n                            Type :     LoggerWrapper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormat()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Format\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getInstance()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     LoggerWrapper\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getServerLogger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getServerLogger()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     literal type\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getTransports\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTransports(format: Format)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        format\n                                                        \n                                                                    Format\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Transport[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initDir\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initDir()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initLogger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initLogger()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     winston.Logger\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            replaceConsoleLog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        replaceConsoleLog(logger: winston.Logger, level: string, consoleLevel?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                        \n                                                                    winston.Logger\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        level\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        consoleLevel\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as path from 'path';\n\nimport { Format } from 'logform';\nimport * as morgan from 'morgan';\nimport * as winston from 'winston';\nimport * as Transport from 'winston-transport';\n\nimport { Configuration } from '../config/config';\nimport { Environment } from '../config/environment';\nimport { NextFunc } from '../server/types';\nimport { WistonFileTransport } from './filetransport';\nimport { LogLevels } from './loglevels';\n\nconst fshelper = require('mkdir-recursive');\n\nclass LoggerWrapper {\n\n  public static readonly DEFAULT_PATH = './logs';\n  public static readonly DEFAULT_LOG_LEVEL = 'info';\n\n  private static loggerWrapper: LoggerWrapper;\n\n  private logDir: string;\n\n  private constructor() {\n    this.logDir = this.initDir();\n\n    if (Configuration.getBoolean('ENABLE_WINSTON_LOGGER')) {\n      const logger = this.initLogger();\n      this.replaceConsoleLog(logger, 'log', 'info');\n      this.replaceConsoleLog(logger, 'info');\n      this.replaceConsoleLog(logger, 'warn');\n      this.replaceConsoleLog(logger, 'error');\n      this.replaceConsoleLog(logger, 'debug');\n    }\n  }\n\n  public static getInstance(): LoggerWrapper {\n    if (!LoggerWrapper.loggerWrapper) {\n      LoggerWrapper.loggerWrapper = new LoggerWrapper();\n    }\n    return LoggerWrapper.loggerWrapper;\n  }\n\n  public getServerLogger(): (req: any, res: any, done: NextFunc) => {} {\n    const loggerStream = new WistonFileTransport({\n      fileName: `${this.logDir}${path.sep}server.log`,\n    });\n    return morgan('combined', {\n      stream: { write: message => loggerStream.logString(message) },\n    });\n  }\n\n  private initDir(): string {\n    const dir: string = path.normalize(path.normalize(Configuration.get('LOG_FOLDER') || LoggerWrapper.DEFAULT_PATH));\n    if (dir && dir !== '.') {\n      fshelper.mkdirSync(dir);\n    }\n    return dir || './logs';\n  }\n\n  private initLogger(): winston.Logger {\n    const format: Format = this.getFormat();\n    return winston.createLogger({\n      format,\n      level: Configuration.get('LOG_LEVEL').toLowerCase() || LoggerWrapper.DEFAULT_LOG_LEVEL,\n      exitOnError: false,\n      transports: this.getTransports(format),\n    });\n  }\n\n  private getFormat(): Format {\n    return winston.format.combine(\n      winston.format.timestamp(),\n      winston.format.splat(),\n      winston.format.printf(info => `${info.timestamp} - ${info.level}: ${info.message}`),\n    );\n  }\n\n  private getTransports(format: Format): Transport[] {\n    const transports: Transport[] = [\n      new WistonFileTransport({\n        fileName: `${this.logDir}${path.sep}application.log`,\n      }),\n      new WistonFileTransport({\n        level: 'error',\n        fileName: `${this.logDir}${path.sep}error.log`,\n      }),\n    ];\n\n    if (Configuration.getEnvironment() !== Environment.Production) {\n      transports.push(new winston.transports.Console({\n        level: 'info',\n        handleExceptions: true,\n        format: winston.format.combine(\n          winston.format.colorize(),\n          format,\n        ),\n      }));\n    }\n    return transports;\n  }\n\n  // Replaces console.info, console.log, etc. with function that uses winston logger\n  private replaceConsoleLog(logger: winston.Logger, level: string, consoleLevel?: string): void {\n    (console)[consoleLevel || level] = LogLevels.isLogLevel(level) ? (...args: any[]) => {\n      if (args && args.length) {\n        if (args.length === 1 && typeof args[0] === 'object') {\n          (logger)[level]('%o', args[0]);\n        } else {\n          const [first, ...rest] = args;\n          (logger)[level](first, ...rest);\n        }\n      }\n    } : (...args: any[]) => { };\n  }\n\n}\n\nexport class WinstonLogger {\n\n  private static loggerWrapper: LoggerWrapper;\n  private static isDebugLevel: boolean;\n\n  public static init() {\n    WinstonLogger.loggerWrapper = LoggerWrapper.getInstance();\n    WinstonLogger.isDebugLevel = Configuration.get('LOG_LEVEL').toLowerCase() === 'debug';\n  }\n\n  public static getServerLogger(): (req: any, res: any, done: NextFunc) => {} {\n    return WinstonLogger.loggerWrapper.getServerLogger();\n  }\n\n  public static isDebug(): boolean {\n    return WinstonLogger.isDebugLevel;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MethodDecorator.html":{"url":"classes/MethodDecorator.html","title":"class - MethodDecorator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MethodDecorator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/internal/method.decorator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                addRoute\n                            \n                            \n                                    Private\n                                    Static\n                                createFastifyRoutingFunc\n                            \n                            \n                                    Private\n                                    Static\n                                createRoutingFunc\n                            \n                            \n                                    Static\n                                getDecoratorFunc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/decorators/internal/method.decorator.ts:19\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            addRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addRoute(route: string, httpMethod: string, controllerClass: any, methodName: string, descriptor: PropertyDescriptor, options: RequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/method.decorator.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        httpMethod\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        controllerClass\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        descriptor\n                                                        \n                                                                    PropertyDescriptor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    RequestOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            createFastifyRoutingFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createFastifyRoutingFunc(controllerClass: any, methodName: string, descriptor: PropertyDescriptor, options: RequestOptions, route: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/method.decorator.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        controllerClass\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        descriptor\n                                                        \n                                                                    PropertyDescriptor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    RequestOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        route\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FastifyRequestHandler\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            createRoutingFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createRoutingFunc(controllerClass: any, methodName: string, descriptor: PropertyDescriptor, options: RequestOptions, route: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/method.decorator.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        controllerClass\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        descriptor\n                                                        \n                                                                    PropertyDescriptor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    RequestOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        route\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getDecoratorFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDecoratorFunc(route: string, httpMethod: string, options?: RequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/method.decorator.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        httpMethod\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    RequestOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (controllerClass: any, methodName: string, descriptor: any) => void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug } from 'console';\nimport { IncomingMessage, ServerResponse } from 'http';\n\nimport { RequestHandler as ExpressRequestHandler, Request, Response } from 'express';\nimport { FastifyReply, FastifyRequest, RequestHandler as FastifyRequestHandler } from 'fastify';\n\nimport { WinstonLogger } from '../../logger/winstonlogger';\nimport { ClassDecorator } from './class.decorator';\nimport { RequestHandler } from './requesthandler';\nimport { AjvValidationResolver } from './validation/validationresolver';\n\nexport interface RequestOptions {\n  validation?: ExpressRequestHandler[];\n  success?: number;\n  error?: number;\n  type?: string;\n}\n\nexport class MethodDecorator {\n\n  private constructor() { }\n\n  public static getDecoratorFunc(route: string, httpMethod: string,\n                                 options?: RequestOptions) {\n    return (controllerClass: any, methodName: string, descriptor: PropertyDescriptor) => {\n      MethodDecorator.addRoute(route, httpMethod, controllerClass, methodName, descriptor, options);\n    };\n  }\n\n  private static addRoute(route: string,\n                          httpMethod: string,\n                          controllerClass: any,\n                          methodName: string,\n                          descriptor: PropertyDescriptor,\n                          options: RequestOptions = {}): void {\n    const validators = AjvValidationResolver.getValidationFunction(controllerClass, methodName, options.validation);\n\n    const routeFunc = MethodDecorator.createRoutingFunc(controllerClass, methodName, descriptor, options, route);\n    // tslint:disable-next-line:max-line-length\n    const fastifyRouteFunc = MethodDecorator.createFastifyRoutingFunc(controllerClass, methodName, descriptor, options, route);\n    ClassDecorator.addRouteMethod({\n      route,\n      validators,\n      routeFunc,\n      fastifyRouteFunc,\n      method: httpMethod,\n    },                            controllerClass);\n  }\n\n  private static createRoutingFunc(controllerClass: any,\n                                   methodName: string,\n                                   descriptor: PropertyDescriptor,\n                                   options: RequestOptions = {},\n                                   route: string): (request: Request, response: Response) => {} {\n    const originalMethod: () => {} = descriptor.value;\n    return async (request: Request, response: Response) => {\n      if (WinstonLogger.isDebug()) {\n        debug('Using route %s for request url %s', route, request.url);\n      }\n      const requestHandler = new RequestHandler(controllerClass,\n                                                methodName,\n                                                request,\n                                                response,\n                                                originalMethod,\n                                                options.success,\n                                                options.error,\n                                                options.type || '',\n                                                options.validation === null\n        || options === undefined);\n      requestHandler.executeRequest();\n    };\n  }\n\n  private static createFastifyRoutingFunc(controllerClass: any,\n                                          methodName: string,\n                                          descriptor: PropertyDescriptor,\n                                          options: RequestOptions = {},\n                                          route: string): FastifyRequestHandler {\n    const originalMethod: () => {} = descriptor.value;\n    return async (request: FastifyRequest, response: FastifyReply) => {\n      if (WinstonLogger.isDebug()) {\n        debug('Using route %s for request url %s', route, request.req.url);\n      }\n\n      const expRequest: Request = (request).expressRequest;\n      const expResponse: Response = (response).expressResponse;\n\n      const requestHandler = new RequestHandler(controllerClass,\n                                                methodName,\n                                                expRequest,\n                                                expResponse,\n                                                originalMethod,\n                                                options.success,\n                                                options.error,\n                                                options.type || '',\n                                                options.validation === null\n        || options === undefined);\n      requestHandler.executeRequest();\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoDbHelper.html":{"url":"classes/MongoDbHelper.html","title":"class - MongoDbHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoDbHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/mongodb/mongodbhelper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                createIfNotExists\n                            \n                            \n                                    Static\n                                    Async\n                                findByRefId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/database/mongodb/mongodbhelper.ts:4\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Async\n                            createIfNotExists\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createIfNotExists(conditions: any, modelClazz: Model)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/database/mongodb/mongodbhelper.ts:17\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conditions\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        modelClazz\n                                                        \n                                                                    Model\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Async\n                            findByRefId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        findByRefId(id: string, modelClazz: Model)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/database/mongodb/mongodbhelper.ts:8\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        modelClazz\n                                                        \n                                                                    Model\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Model } from 'mongoose';\nimport { debug } from 'console';\n\nexport class MongoDbHelper {\n\n  private constructor() { }\n\n  public static async findByRefId(id: string, modelClazz: Model): Promise {\n    try {\n      const item: T = await modelClazz.findOne({ refid: id }).exec();\n      return item;\n    } catch (e) {\n      throw (e);\n    }\n  }\n\n  public static async createIfNotExists(conditions: any, modelClazz: Model): Promise {\n    let item: T = await modelClazz.findOne(conditions).exec();\n    debug('Create if not exists, conditions are %o, result is %s', conditions, item);\n    if (!item) {\n      debug('Create Model %o', modelClazz);\n      const result: InstanceType = await modelClazz.create(conditions);\n      item = await result.save();\n    }\n    return item;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoDbStarter.html":{"url":"classes/MongoDbStarter.html","title":"class - MongoDbStarter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoDbStarter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/mongodb/mongodbstarter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                close\n                            \n                            \n                                    Private\n                                initShutdownListener\n                            \n                            \n                                    Public\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uri: string)\n                    \n                \n                        \n                            \n                                Defined in src/database/mongodb/mongodbstarter.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/database/mongodb/mongodbstarter.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initShutdownListener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initShutdownListener()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/database/mongodb/mongodbstarter.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        start()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/database/mongodb/mongodbstarter.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { error, warn, info } from 'console';\n\nimport mongoose = require('mongoose');\nmongoose.Promise = global.Promise;\n\nexport class MongoDbStarter {\n\n  constructor(private uri: string) { }\n\n  public start(): void {\n    if (this.uri) {\n      mongoose.connect(this.uri);\n      this.initShutdownListener();\n    } else {\n      warn('No configuration for MongoDB available, server can not start...');\n    }\n  }\n\n  private initShutdownListener(): void {\n    process.once('SIGINT', () => this.close());\n    process.once('SIGTERM', () => this.close());\n    process.once('SIGUSR2', () => this.close());\n  }\n\n  private async close(): Promise {\n    try {\n      info('Closing database connection...');\n      await mongoose.connection.close();\n      await mongoose.disconnect();\n    } catch (e) {\n      error(e);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParamDescriptor.html":{"url":"interfaces/ParamDescriptor.html","title":"interface - ParamDescriptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParamDescriptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/internal/parameter.decorator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                        paramtype\n                                \n                                \n                                            Optional\n                                        validation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paramtype\n                                    \n                                \n                                \n                                    \n                                        paramtype:     ParamType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ParamType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validation\n                                    \n                                \n                                \n                                    \n                                        validation:     Validation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Validation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Validation } from '../../validation/validators';\nimport { ClassDecorator } from './class.decorator';\n\nexport interface ParamDescriptor {\n  index: number;\n  name?: string;\n  validation?: Validation;\n  paramtype: ParamType;\n}\n\nexport enum ParamType {\n  QUERYPARAM = 'queryparam',\n  PATHPARAM = 'pathparam',\n  REQUEST = 'request',\n  RESPONSE = 'response',\n  USER = 'user',\n}\n\nexport class ParameterDecorator {\n\n  public static readonly PARAMETERMETADATA: string = 'parametermetadata';\n\n  public static getDecoratorFunc(paramType: ParamType,\n                                 paramName?: string,\n                                 validation?: Validation) {\n    return (controllerClass: any, methodName: string, index: number) => {\n      const descriptors = ParameterDecorator.initTargetObject(paramType, controllerClass, methodName);\n      descriptors.push({\n        index,\n        validation,\n        paramtype: paramType,\n        name: paramName,\n      });\n    };\n  }\n\n  // controllerClass.parametermetadata.methodName[paramData]\n  private static initTargetObject(paramType: string, controllerClass: any, methodName: string): ParamDescriptor[] {\n    if (!controllerClass[ParameterDecorator.PARAMETERMETADATA]) {\n      controllerClass[ParameterDecorator.PARAMETERMETADATA] = [] as ParamDescriptor[];\n    }\n    if (!controllerClass[ParameterDecorator.PARAMETERMETADATA][methodName]) {\n      controllerClass[ParameterDecorator.PARAMETERMETADATA][methodName] = [] as ParamDescriptor[];\n    }\n    // const name = ParameterDecorator.createKey(paramType, controllerClass, methodName);\n    // if (!controllerClass[ParameterDecorator.PARAMETERMETADATA][name]) {\n    //   controllerClass[ParameterDecorator.PARAMETERMETADATA][name] = [];\n    // }\n    // return controllerClass[ParameterDecorator.PARAMETERMETADATA][name];\n    return controllerClass[ParameterDecorator.PARAMETERMETADATA][methodName];\n  }\n\n  /**\n   * Return a unique key in the form 'decoratortype@classname@methodname' that is used to store the\n   * metadata  for parameters with decorators in a transfer object ('target')\n   *\n   * @static\n   * @param {string} paramType\n   * @param {*} controllerClass\n   * @param {string} methodName\n   * @returns {string}\n   * @memberof ParamDecorator\n   */\n  public static createKey(paramType: string, controllerClass: any, methodName: string): string {\n    const classHash: number = ClassDecorator.getHash(controllerClass);\n    return `${paramType}@${classHash}@${methodName}`;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterDecorator.html":{"url":"classes/ParameterDecorator.html","title":"class - ParameterDecorator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterDecorator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/internal/parameter.decorator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                PARAMETERMETADATA\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createKey\n                            \n                            \n                                    Static\n                                getDecoratorFunc\n                            \n                            \n                                    Private\n                                    Static\n                                initTargetObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PARAMETERMETADATA\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PARAMETERMETADATA:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'parametermetadata'\n                        \n                    \n                        \n                            \n                                    Defined in src/decorators/internal/parameter.decorator.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            createKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createKey(paramType: string, controllerClass: any, methodName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/parameter.decorator.ts:64\n                            \n                        \n\n\n                \n                    \n                            Return a unique key in the form 'decoratortype@classname@methodname' that is used to store the\nmetadata  for parameters with decorators in a transfer object ('target')\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paramType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        controllerClass\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getDecoratorFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDecoratorFunc(paramType: ParamType, paramName?: string, validation?: Validation)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/parameter.decorator.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paramType\n                                                        \n                                                                    ParamType\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        paramName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validation\n                                                        \n                                                                    Validation\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (controllerClass: any, methodName: string, index: number) => void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            initTargetObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initTargetObject(paramType: string, controllerClass: any, methodName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/parameter.decorator.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paramType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        controllerClass\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ParamDescriptor[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Validation } from '../../validation/validators';\nimport { ClassDecorator } from './class.decorator';\n\nexport interface ParamDescriptor {\n  index: number;\n  name?: string;\n  validation?: Validation;\n  paramtype: ParamType;\n}\n\nexport enum ParamType {\n  QUERYPARAM = 'queryparam',\n  PATHPARAM = 'pathparam',\n  REQUEST = 'request',\n  RESPONSE = 'response',\n  USER = 'user',\n}\n\nexport class ParameterDecorator {\n\n  public static readonly PARAMETERMETADATA: string = 'parametermetadata';\n\n  public static getDecoratorFunc(paramType: ParamType,\n                                 paramName?: string,\n                                 validation?: Validation) {\n    return (controllerClass: any, methodName: string, index: number) => {\n      const descriptors = ParameterDecorator.initTargetObject(paramType, controllerClass, methodName);\n      descriptors.push({\n        index,\n        validation,\n        paramtype: paramType,\n        name: paramName,\n      });\n    };\n  }\n\n  // controllerClass.parametermetadata.methodName[paramData]\n  private static initTargetObject(paramType: string, controllerClass: any, methodName: string): ParamDescriptor[] {\n    if (!controllerClass[ParameterDecorator.PARAMETERMETADATA]) {\n      controllerClass[ParameterDecorator.PARAMETERMETADATA] = [] as ParamDescriptor[];\n    }\n    if (!controllerClass[ParameterDecorator.PARAMETERMETADATA][methodName]) {\n      controllerClass[ParameterDecorator.PARAMETERMETADATA][methodName] = [] as ParamDescriptor[];\n    }\n    // const name = ParameterDecorator.createKey(paramType, controllerClass, methodName);\n    // if (!controllerClass[ParameterDecorator.PARAMETERMETADATA][name]) {\n    //   controllerClass[ParameterDecorator.PARAMETERMETADATA][name] = [];\n    // }\n    // return controllerClass[ParameterDecorator.PARAMETERMETADATA][name];\n    return controllerClass[ParameterDecorator.PARAMETERMETADATA][methodName];\n  }\n\n  /**\n   * Return a unique key in the form 'decoratortype@classname@methodname' that is used to store the\n   * metadata  for parameters with decorators in a transfer object ('target')\n   *\n   * @static\n   * @param {string} paramType\n   * @param {*} controllerClass\n   * @param {string} methodName\n   * @returns {string}\n   * @memberof ParamDecorator\n   */\n  public static createKey(paramType: string, controllerClass: any, methodName: string): string {\n    const classHash: number = ClassDecorator.getHash(controllerClass);\n    return `${paramType}@${classHash}@${methodName}`;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterResolver.html":{"url":"classes/ParameterResolver.html","title":"class - ParameterResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/internal/parameterresolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getParams\n                            \n                            \n                                    Static\n                                resolveParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/decorators/internal/parameterresolver.ts:7\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getParams(controllerClass: any, methodName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/parameterresolver.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controllerClass\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ParamDescriptor[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            resolveParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolveParams(request: Request, response: Response, controllerClass: any, methodName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/parameterresolver.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        response\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        controllerClass\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methodName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express';\n\nimport { RequestUtil } from '../../util/requestutil';\nimport { ParamDescriptor, ParamType, ParameterDecorator } from './parameter.decorator';\nimport { debug } from 'winston';\n\nexport class ParameterResolver {\n\n  private constructor() { }\n\n  public static resolveParams(request: Request,\n                              response: Response,\n                              controllerClass: any,\n                              methodName: string): any[] {\n    const paramDescriptors: ParamDescriptor[] = ParameterResolver.getParams(controllerClass, methodName);\n    const parameters: any[] = [...Array(paramDescriptors.length)];\n    for (const descriptor of paramDescriptors) {\n      switch (descriptor.paramtype) {\n        case ParamType.QUERYPARAM:\n          parameters[descriptor.index] = RequestUtil.getParameter(descriptor.name || '', request);\n          break;\n        case ParamType.PATHPARAM:\n          parameters[descriptor.index] = RequestUtil.getPathParameter(descriptor.name || '', request);\n          break;\n        case ParamType.REQUEST:\n          parameters[descriptor.index] = request;\n          break;\n        case ParamType.RESPONSE:\n          parameters[descriptor.index] = response;\n          break;\n        case ParamType.USER:\n          parameters[descriptor.index] = request.user || {};\n          break;\n      }\n    }\n    return parameters;\n  }\n\n  public static getParams(controllerClass: any, methodName: string): ParamDescriptor[] {\n    if (controllerClass[ParameterDecorator.PARAMETERMETADATA]\n      && controllerClass[ParameterDecorator.PARAMETERMETADATA][methodName]) {\n      return controllerClass[ParameterDecorator.PARAMETERMETADATA][methodName];\n    }\n    return [];\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PassportStrategy.html":{"url":"interfaces/PassportStrategy.html","title":"interface - PassportStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PassportStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/passportstrategy.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addToExpress\n                                \n                                \n                                    getMiddleware\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addToExpress\n                            \n                            \n                        \n                    \n                \n                \n                    \naddToExpress(express: Express, path?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/passportstrategy.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        express\n                                                        \n                                                                    Express\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMiddleware\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMiddleware()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/passport/passportstrategy.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ExpressMiddleware | null\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Express } from 'express';\nimport * as passport from 'passport';\n\nimport { ExpressMiddleware } from '../../server/types';\n\nexport interface PassportStrategy extends passport.Strategy {\n\n  // Express\n  addToExpress(express: Express, path?: string): void;\n\n  // Fastify\n  getMiddleware(): ExpressMiddleware | null;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestHandler.html":{"url":"classes/RequestHandler.html","title":"class - RequestHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/internal/requesthandler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                escapeHtml\n                            \n                            \n                                    Public\n                                    Async\n                                executeRequest\n                            \n                            \n                                    Private\n                                isJson\n                            \n                            \n                                    Private\n                                sendJson\n                            \n                            \n                                    Private\n                                sendResponse\n                            \n                            \n                                    Private\n                                validateRequestParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(controllerClass: any, methodName: string, request: Request, response: Response, originalMethod: () => void, statusSuccess: number, statusError: number, type: string, skipValidation: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/decorators/internal/requesthandler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controllerClass\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        methodName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        response\n                                                  \n                                                        \n                                                                    Response\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        originalMethod\n                                                  \n                                                        \n                                                                    function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusSuccess\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusError\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skipValidation\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            escapeHtml\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        escapeHtml(value: any, isJson: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/requesthandler.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        isJson\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            executeRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        executeRequest()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/requesthandler.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isJson\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isJson(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/requesthandler.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sendJson\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendJson(status: number, data: any, key?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/requesthandler.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sendResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sendResponse(status: number, data: any, isError: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/requesthandler.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        isError\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            validateRequestParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validateRequestParams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/decorators/internal/requesthandler.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void | Error\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { debug, warn } from 'console';\n\nimport { Request, Response } from 'express';\nimport { Result, validationResult } from 'express-validator/check';\nimport * as stringify from 'safe-stable-stringify';\n\nimport { Environment } from '../../config/environment';\nimport { DataType } from '../../util/datatype';\nimport { ClassDecorator } from './class.decorator';\nimport { ParameterDecorator } from './parameter.decorator';\nimport { ParameterResolver } from './parameterresolver';\n\nexport class RequestHandler {\n\n  constructor(private controllerClass: any,\n              private methodName: string,\n              private request: Request,\n              private response: Response,\n              private originalMethod: () => {},\n              private statusSuccess: number = 200,\n              private statusError: number = 400,\n              private type: string,\n              private skipValidation: boolean = false) { }\n\n  public async executeRequest(): Promise {\n    let isValidation = true;\n    try {\n\n      // get controller instance\n      const controller: any = ClassDecorator.getController(this.controllerClass);\n      if (!controller && this.controllerClass.constructor.length > 0) {\n        warn('No controller instance %s found. Did you add the controller to the express server?',\n             this.controllerClass.constructor.name);\n        return this.sendResponse(404, 'Page not found', true);\n      }\n\n      // resolve parameters\n      let parameters: any[] = ['test'];\n      if (this.controllerClass[ParameterDecorator.PARAMETERMETADATA]) {\n        parameters = ParameterResolver.resolveParams(this.request,\n                                                     this.response,\n                                                     this.controllerClass,\n                                                     this.methodName);\n        // validate request params and send response if controller method returns a value\n        if (!this.skipValidation) {\n          this.validateRequestParams();\n        }\n      }\n\n      isValidation = false;\n      const resp = await this.originalMethod.apply(controller, parameters);\n      this.sendResponse(this.statusSuccess, resp, false);\n    } catch (err) {\n      let respData;\n      if (isValidation) {\n        respData = err;\n      } else {\n        debug(err);\n        respData = this.request.app.get('env') === Environment.Development ? err : 'Request failed';\n        if (err instanceof Error) {\n          respData = err.message.trim();\n        }\n      }\n      this.sendResponse(this.statusError, respData, true);\n    }\n  }\n\n  private sendResponse(status: number, data: any, isError: boolean): void {\n    if (this.type && !this.type.startsWith('application/json')) {\n      this.response.status(status).type(this.type).send(DataType.isString(data) ? this.escapeHtml(data, false) : data);\n    } else {\n      const isJson = this.isJson(data);\n      if (isJson) {\n        this.sendJson(status, data);\n      } else if (!isJson && (this.type\n        || (!this.request.accepts('text/plain') && this.request.accepts('application/json')))) {\n        const key = isError ? 'error' : 'response';\n        this.sendJson(status, data, key);\n      } else {\n        this.response.status(status).type('text/plain; charset=utf-8').send(this.escapeHtml(String(data), false));\n      }\n    }\n  }\n\n  private sendJson(status: number, data: any, key?: string): void {\n    const replacer = (name: string, value: string) => this.escapeHtml(value);\n    let jsonData;\n    if (key) {\n      // tslint:disable-next-line:max-line-length\n      jsonData = `{ \"${key}\": \"${DataType.isString(data) ? this.escapeHtml(data) : stringify.default(data, replacer)}\" }`;\n    } else {\n      jsonData = DataType.isString(data) ? this.escapeHtml(data) : stringify.default(data, replacer);\n    }\n    this.response.status(status).type('application/json; charset=utf-8').send(jsonData);\n  }\n\n  private validateRequestParams(): void | Error {\n    const errors: Result = validationResult(this.request);\n    if (!errors.isEmpty()) {\n      if (this.request.app.get('env') === Environment.Development) {\n        throw ({ errors: errors.array() });\n      } else {\n        const errorList = [...errors.array()];\n        for (const error of errorList) {\n          delete error.param;\n          if ((error).nestedErrors) {\n            for (const nestedError of (error).nestedErrors) {\n              delete nestedError.location;\n              delete nestedError.value;\n            }\n          }\n        }\n        throw ({ errors: errorList });\n      }\n    }\n  }\n\n  private isJson(data: any): boolean {\n    // is object --> OK\n    if (data && typeof data === 'object'\n      && data.constructor !== RegExp\n      && data.constructor !== Date\n      && data.constructor !== Number\n      && data.constructor !== Error) {\n      return true;\n    }\n    // is array --> IK\n    if (data && Array.isArray(data)) {\n      return true;\n    }\n    // is JSON string --> OK\n    // Note: This is a very simple test but more advanced tests like trying to parse string as JSON\n    // comes with significant performance drawbacks\n    if (data && (typeof data === 'string' || data instanceof String)\n      && /^[\\],:{}\\s]*$/.test(data.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').\n        replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n        replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n      return true;\n    }\n    return false;\n  }\n\n  private escapeHtml(value: any, isJson: boolean = true): string {\n    if (typeof value !== 'string') {\n      return value;\n    }\n    return value.replace(/[<>&]/g, (char) => {\n      switch (char) {\n        case '':\n          return isJson ? '\\\\u003e' : '&gt;';\n        case '&':\n          return isJson ? '\\\\u0026' : '&amp;';\n        default:\n          return char;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestOptions.html":{"url":"interfaces/RequestOptions.html","title":"interface - RequestOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/internal/method.decorator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        error\n                                \n                                \n                                            Optional\n                                        success\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        validation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validation\n                                    \n                                \n                                \n                                    \n                                        validation:     ExpressRequestHandler[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExpressRequestHandler[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { debug } from 'console';\nimport { IncomingMessage, ServerResponse } from 'http';\n\nimport { RequestHandler as ExpressRequestHandler, Request, Response } from 'express';\nimport { FastifyReply, FastifyRequest, RequestHandler as FastifyRequestHandler } from 'fastify';\n\nimport { WinstonLogger } from '../../logger/winstonlogger';\nimport { ClassDecorator } from './class.decorator';\nimport { RequestHandler } from './requesthandler';\nimport { AjvValidationResolver } from './validation/validationresolver';\n\nexport interface RequestOptions {\n  validation?: ExpressRequestHandler[];\n  success?: number;\n  error?: number;\n  type?: string;\n}\n\nexport class MethodDecorator {\n\n  private constructor() { }\n\n  public static getDecoratorFunc(route: string, httpMethod: string,\n                                 options?: RequestOptions) {\n    return (controllerClass: any, methodName: string, descriptor: PropertyDescriptor) => {\n      MethodDecorator.addRoute(route, httpMethod, controllerClass, methodName, descriptor, options);\n    };\n  }\n\n  private static addRoute(route: string,\n                          httpMethod: string,\n                          controllerClass: any,\n                          methodName: string,\n                          descriptor: PropertyDescriptor,\n                          options: RequestOptions = {}): void {\n    const validators = AjvValidationResolver.getValidationFunction(controllerClass, methodName, options.validation);\n\n    const routeFunc = MethodDecorator.createRoutingFunc(controllerClass, methodName, descriptor, options, route);\n    // tslint:disable-next-line:max-line-length\n    const fastifyRouteFunc = MethodDecorator.createFastifyRoutingFunc(controllerClass, methodName, descriptor, options, route);\n    ClassDecorator.addRouteMethod({\n      route,\n      validators,\n      routeFunc,\n      fastifyRouteFunc,\n      method: httpMethod,\n    },                            controllerClass);\n  }\n\n  private static createRoutingFunc(controllerClass: any,\n                                   methodName: string,\n                                   descriptor: PropertyDescriptor,\n                                   options: RequestOptions = {},\n                                   route: string): (request: Request, response: Response) => {} {\n    const originalMethod: () => {} = descriptor.value;\n    return async (request: Request, response: Response) => {\n      if (WinstonLogger.isDebug()) {\n        debug('Using route %s for request url %s', route, request.url);\n      }\n      const requestHandler = new RequestHandler(controllerClass,\n                                                methodName,\n                                                request,\n                                                response,\n                                                originalMethod,\n                                                options.success,\n                                                options.error,\n                                                options.type || '',\n                                                options.validation === null\n        || options === undefined);\n      requestHandler.executeRequest();\n    };\n  }\n\n  private static createFastifyRoutingFunc(controllerClass: any,\n                                          methodName: string,\n                                          descriptor: PropertyDescriptor,\n                                          options: RequestOptions = {},\n                                          route: string): FastifyRequestHandler {\n    const originalMethod: () => {} = descriptor.value;\n    return async (request: FastifyRequest, response: FastifyReply) => {\n      if (WinstonLogger.isDebug()) {\n        debug('Using route %s for request url %s', route, request.req.url);\n      }\n\n      const expRequest: Request = (request).expressRequest;\n      const expResponse: Response = (response).expressResponse;\n\n      const requestHandler = new RequestHandler(controllerClass,\n                                                methodName,\n                                                expRequest,\n                                                expResponse,\n                                                originalMethod,\n                                                options.success,\n                                                options.error,\n                                                options.type || '',\n                                                options.validation === null\n        || options === undefined);\n      requestHandler.executeRequest();\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestUtil.html":{"url":"classes/RequestUtil.html","title":"class - RequestUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/requestutil.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getParameter\n                            \n                            \n                                    Static\n                                getPathParameter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/requestutil.ts:3\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getParameter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getParameter(name: string, request: Request)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/requestutil.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getPathParameter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPathParameter(name: string, request: Request)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/requestutil.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        request\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Request } from 'express';\n\nexport class RequestUtil {\n\n  private constructor() { }\n\n  public static getParameter(name: string, request: Request) {\n    return request.body[name] || request.query[name];\n  }\n\n  public static getPathParameter(name: string, request: Request) {\n    return request.params[name];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteMethod.html":{"url":"interfaces/RouteMethod.html","title":"interface - RouteMethod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteMethod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/decorators/internal/class.decorator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fastifyRouteFunc\n                                \n                                \n                                        method\n                                \n                                \n                                        route\n                                \n                                \n                                        routeFunc\n                                \n                                \n                                            Optional\n                                        targetHash\n                                \n                                \n                                        validators\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fastifyRouteFunc\n                                    \n                                \n                                \n                                    \n                                        fastifyRouteFunc:     FastifyRequestHandler\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FastifyRequestHandler\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeFunc\n                                    \n                                \n                                \n                                    \n                                        routeFunc:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetHash\n                                    \n                                \n                                \n                                    \n                                        targetHash:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validators\n                                    \n                                \n                                \n                                    \n                                        validators:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { info } from 'console';\nimport { IncomingMessage, ServerResponse } from 'http';\n\nimport { Request, Response, Router } from 'express';\nimport { RequestHandler as FastifyRequestHandler, HTTPMethod } from 'fastify';\n\nimport { Configuration } from '../../config/config';\nimport { Environment } from '../../config/environment';\nimport { FastifyReq, FastifyResp, FastifyServer, NextFunc } from '../../server/types';\nimport { StringUtil } from '../../util/stringutil';\n\nimport express = require('express');\n\nexport interface RouteMethod {\n  method: string;\n  route: string;\n  validators: (request: any, response: any, done: NextFunc) => void;\n  routeFunc: (request: Request, response: Response) => {};\n  fastifyRouteFunc: FastifyRequestHandler;\n  targetHash?: number;\n}\n\nexport class ClassDecorator {\n\n  public static readonly CLASSMETADATA = 'classmetadata';\n  public static readonly CLASSINSTANCE = 'classinstance';\n  public static readonly URLS_ENDPOINT = '_urls';\n\n  private static readonly htmlStart = ' \\\n                                        Urls';\n  private static readonly htmlEnd = '';\n\n  private static targets = new Map();\n  private static routeMethods: RouteMethod[] = [];\n  private static urls: string = '';\n\n  private constructor() { }\n\n  public static getDecoratorFunc(route: string) {\n    return (target: any) => {\n      const targetObj = ClassDecorator.targets.get(StringUtil.hashCode(target.toString()));\n      if (targetObj) {\n        targetObj[ClassDecorator.CLASSMETADATA]['route'] = route;\n      }\n    };\n  }\n\n  public static setHash(target: any): void {\n    ClassDecorator.ensureMetadata(target);\n    if (!target[ClassDecorator.CLASSMETADATA]['hash']) {\n      target[ClassDecorator.CLASSMETADATA]['hash'] = ClassDecorator.hash(target);\n    }\n  }\n\n  public static getHash(target: any): number {\n    ClassDecorator.setHash(target);\n    return target[ClassDecorator.CLASSMETADATA]['hash'];\n  }\n\n  public static addController(controller: any): void {\n    const controllerHash: number = ClassDecorator.hash(controller);\n    const target = ClassDecorator.targets.get(controllerHash);\n    if (target) {\n      target[ClassDecorator.CLASSMETADATA][ClassDecorator.CLASSINSTANCE] = controller;\n    }\n  }\n\n  public static getController(target: any): any {\n    ClassDecorator.ensureMetadata(target);\n    return target[ClassDecorator.CLASSMETADATA][ClassDecorator.CLASSINSTANCE];\n  }\n\n  public static addRouteMethod(routeMethod: RouteMethod, target: any): void {\n    ClassDecorator.setHash(target);\n    const targetHash = ClassDecorator.getHash(target);\n    if (!ClassDecorator.targets.has(targetHash)) {\n      ClassDecorator.targets.set(targetHash, target);\n    }\n    ClassDecorator.routeMethods.push({ ...routeMethod, targetHash });\n  }\n\n  public static setRoutesExpress(expressServer: express.Express): void {\n    const router: Router = Router();\n    ClassDecorator.createUrlListPage(router);\n    for (const routeMethod of ClassDecorator.routeMethods) {\n      ClassDecorator.addRouteExpress(routeMethod, router);\n    }\n    ClassDecorator.routeMethods = [];\n    expressServer.use('/', router);\n  }\n\n  public static setRoutesFastify(fastifyServer: FastifyServer): void {\n    ClassDecorator.createUrlListPage(fastifyServer);\n    ClassDecorator.addRoutesFastify(fastifyServer);\n  }\n\n  private static hash(target: any): number {\n    return StringUtil.hashCode(target.constructor.toString());\n  }\n\n  private static ensureMetadata(target: any): void {\n    if (!target[ClassDecorator.CLASSMETADATA]) {\n      target[ClassDecorator.CLASSMETADATA] = { hash: ClassDecorator.hash(target) };\n    }\n  }\n\n  private static addRouteExpress(routeMethod: RouteMethod, router: Router): void {\n    const target = ClassDecorator.targets.get(routeMethod.targetHash || 0);\n    const baseRoute = target[ClassDecorator.CLASSMETADATA]['route'] || '';\n    const useRoute = routeMethod.route === '/' && baseRoute ? '' : '/'.concat(routeMethod.route.replace(/^\\//, ''));\n    info('Add route to %s with method %s', baseRoute.concat(useRoute), routeMethod.method);\n    switch (routeMethod.method) {\n      case 'get':\n        router.get(baseRoute.concat(useRoute), routeMethod.validators, routeMethod.routeFunc);\n        break;\n      case 'post':\n        router.post(baseRoute.concat(useRoute), routeMethod.validators, routeMethod.routeFunc);\n        break;\n      case 'put':\n        router.put(baseRoute.concat(useRoute), routeMethod.validators, routeMethod.routeFunc);\n        break;\n      case 'delete':\n        router.delete(baseRoute.concat(useRoute), routeMethod.validators, routeMethod.routeFunc);\n        break;\n      case 'head':\n        router.head(baseRoute.concat(useRoute), routeMethod.validators, routeMethod.routeFunc);\n        break;\n      case 'trace':\n        router.trace(baseRoute.concat(useRoute), routeMethod.validators, routeMethod.routeFunc);\n        break;\n      case 'options':\n        router.options(baseRoute.concat(useRoute), routeMethod.validators, routeMethod.routeFunc);\n        break;\n      case 'connect':\n        router.connect(baseRoute.concat(useRoute), routeMethod.validators, routeMethod.routeFunc);\n        break;\n      case 'patch':\n        router.patch(baseRoute.concat(useRoute), routeMethod.validators, routeMethod.routeFunc);\n        break;\n      default:\n        router.get(baseRoute.concat(useRoute), routeMethod.validators, routeMethod.routeFunc);\n    }\n  }\n\n  private static addRoutesFastify(fastifyServer: FastifyServer): void {\n    for (const routeMethod of ClassDecorator.routeMethods) {\n      const target = ClassDecorator.targets.get(routeMethod.targetHash || 0);\n      const baseRoute = target[ClassDecorator.CLASSMETADATA]['route'] || '';\n      const useRoute = routeMethod.route === '/' && baseRoute ? '' : '/'.concat(routeMethod.route.replace(/^\\//, ''));\n      info('Add route to %s with method %s', baseRoute.concat(useRoute), routeMethod.method);\n      fastifyServer.route({\n        method: routeMethod.method.toUpperCase(),\n        url: baseRoute.concat(useRoute),\n        handler: routeMethod.fastifyRouteFunc,\n        beforeHandler: routeMethod.validators,\n      });\n    }\n  }\n\n  private static createUrlListPage(router: Router | FastifyServer): void {\n    if (Configuration.getEnvironment() === Environment.Production) {\n      return;\n    }\n    info('Add route to /_urls with method GET');\n    for (const routeMethod of ClassDecorator.routeMethods) {\n      ClassDecorator.addUrl(routeMethod);\n    }\n    ClassDecorator.urls = `${ClassDecorator.htmlStart}${ClassDecorator.urls}${ClassDecorator.htmlEnd}`;\n\n    if (router instanceof Router) {\n      (router).get('/_urls', (req: Request, resp: Response) => {\n        resp.status(200).type('text/html; charset=utf-8').send(ClassDecorator.urls);\n      });\n    } else {\n      (router).get('/_urls', (req: FastifyReq, resp: FastifyResp) => {\n        resp.status(200).type('text/html; charset=utf-8').send(ClassDecorator.urls);\n      });\n    }\n\n  }\n\n  private static addUrl(routeMethod: RouteMethod): void {\n    const target = ClassDecorator.targets.get(routeMethod.targetHash || 0);\n    const baseRoute = target[ClassDecorator.CLASSMETADATA]['route'] || '';\n    const useRoute = routeMethod.route === '/' && baseRoute ? '' : '/'.concat(routeMethod.route.replace(/^\\//, ''));\n    const link = baseRoute.concat(useRoute);\n    ClassDecorator.urls += `\n        ${routeMethod.method.toUpperCase()}\n        ${link}\n    `;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Server.html":{"url":"interfaces/Server.html","title":"interface - Server","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Server\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/server.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addController\n                                \n                                \n                                    addMiddleware\n                                \n                                \n                                    addPassportStrategy\n                                \n                                \n                                    addStaticFiles\n                                \n                                \n                                    disableContentSecurityPolicy\n                                \n                                \n                                    startServer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addController\n                            \n                            \n                        \n                    \n                \n                \n                    \naddController(controller: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/server.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controller\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addMiddleware\n                            \n                            \n                        \n                    \n                \n                \n                    \naddMiddleware(path: any, handler: Middleware)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/server.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        handler\n                                                        \n                                                                    Middleware\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPassportStrategy\n                            \n                            \n                        \n                    \n                \n                \n                    \naddPassportStrategy(path: string, strategy: PassportStrategy)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/server.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        strategy\n                                                        \n                                                                    PassportStrategy\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addStaticFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \naddStaticFiles(directory: string, endpoint?: string, index?: string, allowInsecureContent?: boolean, directives?: IHelmetContentSecurityPolicyDirectives)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/server.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        directory\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        endpoint\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        allowInsecureContent\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        directives\n                                                        \n                                                                    IHelmetContentSecurityPolicyDirectives\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableContentSecurityPolicy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableContentSecurityPolicy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/server.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startServer\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartServer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/server.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Middleware } from './types';\nimport { IHelmetContentSecurityPolicyDirectives } from 'helmet';\nimport { PassportStrategy } from '../auth/passport/passportstrategy';\n\nexport interface Server {\n\n  startServer(): void;\n  addMiddleware(path: any, handler: Middleware): void;\n  addStaticFiles(directory: string,\n                 endpoint?: string,\n                 index?: string,\n                 allowInsecureContent?: boolean,\n                 directives?: IHelmetContentSecurityPolicyDirectives): void;\n  addController(controller: any): void;\n  addPassportStrategy(path: string, strategy: PassportStrategy): void;\n  disableContentSecurityPolicy(): void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerApplication.html":{"url":"classes/ServerApplication.html","title":"class - ServerApplication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerApplication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/serverapplication.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                DEFAULT_EMAIL_CONFIG\n                            \n                            \n                                    Private\n                                defaultEmailService\n                            \n                            \n                                    Private\n                                defaultJwtService\n                            \n                            \n                                    Private\n                                isAuthCtrlSet\n                            \n                            \n                                    Private\n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addAuthentication\n                            \n                            \n                                    Public\n                                getDefaultEmailService\n                            \n                            \n                                    Public\n                                getDefaultJwtService\n                            \n                            \n                                    Public\n                                getEmailService\n                            \n                            \n                                    Public\n                                getServer\n                            \n                            \n                                    Public\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/serverapplication.ts:30\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            DEFAULT_EMAIL_CONFIG\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_EMAIL_CONFIG:     SmtpData\n\n                    \n                \n                    \n                        \n                            Type :     SmtpData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    host: Configuration.get('EMAIL_HOST', 'localhost'),\n    port: Configuration.getNumber('EMAIL_PORT', 587),\n    user: Configuration.get('EMAIL_USER'),\n    password: Configuration.get('EMAIL_PASSWORD'),\n    secure: Configuration.getBoolean('EMAIL_SECURE'),\n    ignoreTLS: Configuration.getBoolean('EMAIL_IGNORE_TLS'),\n    requireTLS: Configuration.getBoolean('EMAIL_REQUIRE_TLS'),\n    tls: Configuration.getObject('EMAIL_TLS'),\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/serverapplication.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultEmailService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultEmailService:     EMailService\n\n                    \n                \n                    \n                        \n                            Type :     EMailService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/serverapplication.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defaultJwtService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultJwtService:     JwtService\n\n                    \n                \n                    \n                        \n                            Type :     JwtService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/serverapplication.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isAuthCtrlSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isAuthCtrlSet:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/serverapplication.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            server\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        server:     Server\n\n                    \n                \n                    \n                        \n                            Type :     Server\n\n                        \n                    \n                        \n                            \n                                    Defined in src/serverapplication.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addAuthentication\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addAuthentication(authConfig: AuthenticationConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/serverapplication.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authConfig\n                                                        \n                                                                    AuthenticationConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDefaultEmailService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDefaultEmailService()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/serverapplication.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     JwtService\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDefaultJwtService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDefaultJwtService()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/serverapplication.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     JwtService\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getEmailService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getEmailService(from?: string, defaultSubject?: string, smtpData?: SmtpData)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/serverapplication.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        from\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        defaultSubject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        smtpData\n                                                        \n                                                                    SmtpData\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     EMailService\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getServer(port?: number, env?: string, corsServerUri?: string | string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/serverapplication.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        port\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        env\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        corsServerUri\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Server\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        start()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/serverapplication.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthenticationController } from './auth/controllers/auth.controller';\nimport { AuthenticationService, DefaultJwtService, JwtService } from './auth/exports';\nimport { LocalJwtStrategy } from './auth/passport/strategies/localjwtstrategy';\nimport { AuthenticationConfig } from './authentication.config';\nimport { Configuration } from './config/config';\nimport { Environment } from './config/environment';\nimport { MongoDbStarter } from './database/exports';\nimport { EMailService, SmtpData } from './email/exports';\nimport { WinstonLogger } from './logger/winstonlogger';\nimport { ExpressServer } from './server/express/expressserver';\nimport { FastifyServer } from './server/fastify/fastifyserver';\nimport { Server } from './server/server';\n\nexport class ServerApplication {\n\n  private static readonly DEFAULT_EMAIL_CONFIG: SmtpData = {\n    host: Configuration.get('EMAIL_HOST', 'localhost'),\n    port: Configuration.getNumber('EMAIL_PORT', 587),\n    user: Configuration.get('EMAIL_USER'),\n    password: Configuration.get('EMAIL_PASSWORD'),\n    secure: Configuration.getBoolean('EMAIL_SECURE'),\n    ignoreTLS: Configuration.getBoolean('EMAIL_IGNORE_TLS'),\n    requireTLS: Configuration.getBoolean('EMAIL_REQUIRE_TLS'),\n    tls: Configuration.getObject('EMAIL_TLS'),\n  };\n\n  private server!: Server;\n  private defaultJwtService: JwtService;\n  private defaultEmailService: EMailService;\n  private isAuthCtrlSet!: boolean;\n\n  constructor() {\n    WinstonLogger.init();\n    if (Configuration.get('MONGODB_URI')) {\n      new MongoDbStarter(Configuration.get('MONGODB_URI')).start();\n    }\n    this.defaultJwtService = new DefaultJwtService(Configuration.get('AUTH_JWT_PRIVATE_KEY'),\n                                                   Configuration.get('AUTH_JWT_PUBLIC_KEY'));\n    this.defaultEmailService = this.getEmailService();\n  }\n\n  public start(): void {\n    this.server.startServer();\n  }\n\n  public getEmailService(from?: string, defaultSubject?: string, smtpData?: SmtpData): EMailService {\n    const config: SmtpData = { ...ServerApplication.DEFAULT_EMAIL_CONFIG, ...(smtpData || {}) };\n    const fromAddress = from || Configuration.get('EMAIL_FROM');\n    const defSubject = defaultSubject || Configuration.get('EMAIL_SUBJECT') || 'EMail Information';\n    return new EMailService(fromAddress, defSubject, config);\n  }\n\n  public getDefaultJwtService(): JwtService {\n    return this.defaultJwtService;\n  }\n\n  public getDefaultEmailService(): JwtService {\n    return this.defaultJwtService;\n  }\n\n  public getServer(port?: number, env?: string, corsServerUri?: string | string[]): Server {\n    if (!this.server) {\n      const serverport: number = port || Configuration.getNumber('SERVER_PORT', 3000);\n      const environment: string = env || Configuration.getEnvironment() || Environment.Development;\n      this.server = Configuration.getBoolean('USE_FASTIFY')\n        ? new FastifyServer(serverport, environment, corsServerUri)\n        : new ExpressServer(serverport, environment, corsServerUri);\n    }\n    return this.server;\n  }\n\n  public addAuthentication(authConfig: AuthenticationConfig): void {\n    if (!authConfig.strategy) {\n      this.server.addPassportStrategy(authConfig.path || '',\n                                      new LocalJwtStrategy(this.defaultJwtService, authConfig.excludes));\n    } else if (typeof authConfig.strategy === 'object') {\n      this.server.addPassportStrategy(authConfig.path || '', authConfig.strategy);\n    } else {\n      const loginPath = authConfig.auth ? authConfig.auth.loginPath : null;\n      const registrationPath = authConfig.auth ? authConfig.auth.registrationPath : null;\n      this.server.addPassportStrategy(authConfig.path || '',\n                                      new (authConfig.strategy)(this.defaultJwtService,\n                                                                     authConfig.excludes,\n                                                                     loginPath,\n                                                                     registrationPath));\n    }\n\n    if (authConfig.auth) {\n      this.server.addController(authConfig.auth.controller);\n    } else if (!this.isAuthCtrlSet) {\n\n      this.server.addController(new AuthenticationController(\n        new AuthenticationService(\n          this.defaultJwtService,\n          this.defaultEmailService)));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignCertService.html":{"url":"interfaces/SignCertService.html","title":"interface - SignCertService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SignCertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/signcert.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPrivateCert\n                                \n                                \n                                    getPublicCert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPrivateCert\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPrivateCert(kid: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/signcert.service.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kid\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPublicCert\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPublicCert(kid: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/services/signcert.service.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kid\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        export interface SignCertService {\n\n  getPrivateCert(kid: string): Promise;\n\n  getPublicCert(kid: string): Promise;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimpleApplicationCompat.html":{"url":"classes/SimpleApplicationCompat.html","title":"class - SimpleApplicationCompat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimpleApplicationCompat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractCompatProxy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                app\n                            \n                            \n                                    Private\n                                props\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Protected\n                                getBaseHttpClass\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                            \n                                    Static\n                                getProxyInstance\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getBaseHttpClass\n                            \n                            \n                                    Protected\n                                getCompatInstance\n                            \n                            \n                                    Protected\n                                getProxy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(fastifyApplication: FastifyServer)\n                    \n                \n                        \n                            \n                                Defined in src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fastifyApplication\n                                                  \n                                                        \n                                                                    FastifyServer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            app\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        app:     Application\n\n                    \n                \n                    \n                        \n                            Type :     Application\n\n                        \n                    \n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            props\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        props:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(name: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getBaseHttpClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseHttpClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getInstance(fastifyApplication: FastifyServer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fastifyApplication\n                                                        \n                                                                    FastifyServer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getProxyInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getProxyInstance(fastifyApplication: FastifyServer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fastifyApplication\n                                                        \n                                                                    FastifyServer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(name: any, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simpleapplicationcompat.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Application\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            getBaseHttpClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseHttpClass()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractCompatProxy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractCompatProxy:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getCompatInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCompatInstance(type: string, useProxy: boolean)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractCompatProxy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractCompatProxy:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        useProxy\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getProxy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getProxy(type: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractCompatProxy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractCompatProxy:14\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Application } from 'express';\n\nimport { FastifyServer } from '../../../types';\nimport { AbstractCompatProxy } from '../abstractcompatproxy';\n\nexport class SimpleApplicationCompat extends AbstractCompatProxy {\n\n  private app!: Application;\n  private props: Map;\n\n  protected constructor(private fastifyApplication: FastifyServer) {\n    super();\n    this.props = new Map();\n  }\n\n  public static getInstance(fastifyApplication: FastifyServer): any {\n    return new SimpleApplicationCompat(fastifyApplication).getCompatInstance('APPLICATION');\n  }\n\n  public static getProxyInstance(fastifyApplication: FastifyServer): any {\n    return new SimpleApplicationCompat(fastifyApplication).getCompatInstance('APPLICATION', true);\n  }\n\n  protected getBaseHttpClass(): any {\n    return {};\n  }\n\n  public set(name: any, value: any): Application {\n    this.props.set(name, value);\n    return this.app;\n  }\n\n  public get(name: any): any {\n    return this.props.get(name);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimpleRequestCompat.html":{"url":"classes/SimpleRequestCompat.html","title":"class - SimpleRequestCompat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimpleRequestCompat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/server/fastify/fastifycompat/simple/simplerequestcompat.ts\n        \n\n\n            \n                Extends\n            \n            \n                    AbstractCompatProxy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                body\n                            \n                            \n                                    Protected\n                                headers\n                            \n                            \n                                    Protected\n                                params\n                            \n                            \n                                    Protected\n                                path\n                            \n                            \n                                    Protected\n                                query\n                            \n                            \n                                    Private\n                                req\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accepts\n                            \n                            \n                                    Protected\n                                getBaseHttpClass\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                            \n                                    Static\n                                getProxyInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                getBaseHttpClass\n                            \n                            \n                                    Protected\n                                getCompatInstance\n                            \n                            \n                                    Protected\n                                getProxy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(fastifyRequest: FastifyRequest, app: Application)\n                    \n                \n                        \n                            \n                                Defined in src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fastifyRequest\n                                                  \n                                                        \n                                                                    FastifyRequest\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    Application\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            body\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        body:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        params:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        path:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            query\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        query:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            req\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        req:     IncomingMessage\n\n                    \n                \n                    \n                        \n                            Type :     IncomingMessage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accepts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        accepts(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getBaseHttpClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseHttpClass()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getInstance(fastifyRequest: FastifyReq, app: Application)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fastifyRequest\n                                                        \n                                                                    FastifyReq\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        app\n                                                        \n                                                                    Application\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getProxyInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getProxyInstance(fastifyRequest: FastifyReq, app: Application)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/server/fastify/fastifycompat/simple/simplerequestcompat.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fastifyRequest\n                                                        \n                                                                    FastifyReq\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        app\n                                                        \n                                                                    Application\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            getBaseHttpClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseHttpClass()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractCompatProxy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractCompatProxy:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getCompatInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCompatInstance(type: string, useProxy: boolean)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractCompatProxy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractCompatProxy:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        useProxy\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getProxy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getProxy(type: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractCompatProxy\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractCompatProxy:14\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { IncomingMessage } from 'http';\n\nimport { Application, Request as exRequest } from 'express';\nimport { FastifyRequest } from 'fastify';\n\nimport { FastifyReq } from '../../../types';\nimport { AbstractCompatProxy } from '../abstractcompatproxy';\n\nexport class SimpleRequestCompat extends AbstractCompatProxy {\n\n  private req: IncomingMessage;\n\n  protected body: any;\n  protected params: any;\n  protected query: any;\n  protected headers: any;\n  protected path: string;\n\n  protected constructor(protected fastifyRequest: FastifyRequest,\n                        protected app: Application) {\n    super();\n    this.req = this.fastifyRequest.req;\n\n    this.body = this.fastifyRequest.body || {};\n    this.params = this.fastifyRequest.params || {};\n    this.query = this.fastifyRequest.query || {};\n    this.headers = this.fastifyRequest.headers;\n    const url = this.fastifyRequest.req.url;\n    const questMark = url.indexOf('?');\n    this.path = questMark >= 0 ? url.substring(0, questMark) : url;\n  }\n\n  public static getInstance(fastifyRequest: FastifyReq,\n                            app: Application): any {\n    return new SimpleRequestCompat(fastifyRequest, app).getCompatInstance('REQUEST');\n  }\n\n  public static getProxyInstance(fastifyRequest: FastifyReq,\n                                 app: Application): any {\n    return new SimpleRequestCompat(fastifyRequest, app).getCompatInstance('REQUEST', true);\n  }\n\n  protected getBaseHttpClass(): any {\n    return this.req;\n  }\n\n  public accepts(type: string): boolean {\n    let acceptHeader = this.headers.accept;\n    if (!acceptHeader) {\n      return true;\n    }\n\n    acceptHeader = `,${acceptHeader},`;\n    return acceptHeader.indexOf(type) >= 0\n      || acceptHeader.indexOf('/*') >= 0\n      || new RegExp(`[/+]${type}[,;+]`).test(acceptHeader);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SmtpData.html":{"url":"interfaces/SmtpData.html","title":"interface - SmtpData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SmtpData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/smtpdata.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                            Optional\n                                        ignoreTLS\n                                \n                                \n                                            Optional\n                                        password\n                                \n                                \n                                        port\n                                \n                                \n                                            Optional\n                                        requireTLS\n                                \n                                \n                                            Optional\n                                        secure\n                                \n                                \n                                            Optional\n                                        tls\n                                \n                                \n                                            Optional\n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreTLS\n                                    \n                                \n                                \n                                    \n                                        ignoreTLS:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requireTLS\n                                    \n                                \n                                \n                                    \n                                        requireTLS:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secure\n                                    \n                                \n                                \n                                    \n                                        secure:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tls\n                                    \n                                \n                                \n                                    \n                                        tls:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SmtpData {\n  host: string;\n  port: number;\n  secure?: boolean;\n  user?: string;\n  password?: string;\n  tls?: any;\n  ignoreTLS?: boolean;\n  requireTLS?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StringUtil.html":{"url":"classes/StringUtil.html","title":"class - StringUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/stringutil.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                hashCode\n                            \n                            \n                                    Static\n                                toBoolean\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/util/stringutil.ts:2\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            hashCode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hashCode(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/stringutil.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            toBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toBoolean(value?: string | number | boolean | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/util/stringutil.ts:25\n                            \n                        \n\n\n                \n                    \n                            see: https://bloomlab.blogspot.com/2018/06/typescript-recipe-elegant-parse-boolean.html\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string | number | boolean | null\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class StringUtil {\n\n  private constructor() { }\n\n  public static hashCode(text: string): number {\n    if (text.length === 0) {\n      return 0;\n    }\n    let hash = 0;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Token.html":{"url":"classes/Token.html","title":"class - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/token.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAccessToken\n                            \n                            \n                                    Public\n                                getExpiration\n                            \n                            \n                                    Public\n                                getHeader\n                            \n                            \n                                    Public\n                                getKid\n                            \n                            \n                                    Public\n                                getPayload\n                            \n                            \n                                    Public\n                                getUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokendata: TokenData)\n                    \n                \n                        \n                            \n                                Defined in src/auth/models/token.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokendata\n                                                  \n                                                        \n                                                                    TokenData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAccessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAccessToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/models/token.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getExpiration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getExpiration()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/models/token.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/models/token.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getKid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getKid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/models/token.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPayload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPayload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/models/token.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUserId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth/models/token.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface TokenData {\n  readonly accesstoken: string;\n  readonly kid: string;\n  readonly expires: number;\n  readonly payload: any;\n  readonly header: any;\n}\n\nexport class Token {\n\n  constructor(private tokendata: TokenData) { }\n\n  public getAccessToken(): string {\n    return this.tokendata.accesstoken;\n  }\n\n  public getKid(): string {\n    return this.tokendata.kid;\n  }\n\n  public getExpiration(): number {\n    return this.tokendata.expires;\n  }\n\n  public getPayload(): any {\n    return this.tokendata.payload;\n  }\n\n  public getHeader(): any {\n    return this.tokendata.header;\n  }\n\n  public getUserId(): string {\n    return this.tokendata.payload.sub;\n  }\n\n  // public getRealm(): string {\n  //   return this.tokendata.payload.iss.split('/').pop();\n  // }\n\n  // public getClient(): string {\n  //   return this.tokendata.payload.azp;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenData.html":{"url":"interfaces/TokenData.html","title":"interface - TokenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/token.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accesstoken\n                                \n                                \n                                        expires\n                                \n                                \n                                        header\n                                \n                                \n                                        kid\n                                \n                                \n                                        payload\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accesstoken\n                                    \n                                \n                                \n                                    \n                                        accesstoken:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires\n                                    \n                                \n                                \n                                    \n                                        expires:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                    \n                                \n                                \n                                    \n                                        header:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kid\n                                    \n                                \n                                \n                                    \n                                        kid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenData {\n  readonly accesstoken: string;\n  readonly kid: string;\n  readonly expires: number;\n  readonly payload: any;\n  readonly header: any;\n}\n\nexport class Token {\n\n  constructor(private tokendata: TokenData) { }\n\n  public getAccessToken(): string {\n    return this.tokendata.accesstoken;\n  }\n\n  public getKid(): string {\n    return this.tokendata.kid;\n  }\n\n  public getExpiration(): number {\n    return this.tokendata.expires;\n  }\n\n  public getPayload(): any {\n    return this.tokendata.payload;\n  }\n\n  public getHeader(): any {\n    return this.tokendata.header;\n  }\n\n  public getUserId(): string {\n    return this.tokendata.payload.sub;\n  }\n\n  // public getRealm(): string {\n  //   return this.tokendata.payload.iss.split('/').pop();\n  // }\n\n  // public getClient(): string {\n  //   return this.tokendata.payload.azp;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Validation.html":{"url":"interfaces/Validation.html","title":"interface - Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Validation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/validators.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        message\n                                \n                                \n                                            Optional\n                                        required\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     Validators\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Validators\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum Validators {\n  /**\n   * Check if the string contains only letters (a-zA-Z).\n   */\n  Alpha = 'isAlpha',\n  /**\n   * Check if the string contains only letters and numbers.\n   */\n  Alphanumeric = 'isAlphanumeric',\n  /**\n   * Check if the string contains ASCII chars only.\n   */\n  Ascii = 'isAscii',\n  /**\n   * Check if a string is base64 encoded.\n   */\n  Base64 = 'isBase64',\n  /**\n   * Check if the string is a date that's before the specified date.\n   */\n  Before = 'isBefore',\n  /**\n   * Check if a string is a boolean.\n   */\n  Boolean = 'isBoolean',\n  /**\n   * Check if the string represents a decimal number, such as 0.1, .3, 1.1, 1.00003, 4.0, etc.\n   */\n  Decimal = 'isDecimal',\n  /**\n   * Check if the string is an email.\n   */\n  Email = 'isEmail',\n  /**\n   * Check if the string is a float.\n   */\n  Float = 'isFloat',\n  /**\n   * Check if the string is a valid [ISO 8601]{@link https://en.wikipedia.org/wiki/ISO_8601} date.\n   */\n  ISO8601 = 'isISO8601',\n  /**\n   * Check if the string is valid JSON (note: uses JSON.parse).\n   */\n  JSON = 'isJSON',\n  /**\n   * Check if the string contains only numbers.\n   */\n  Numeric = 'isNumeric',\n  /**\n   * Check if the string is a UUID (version 3, 4 or 5).\n   */\n  UUID = 'isUUID',\n}\n\nexport interface Validation {\n  required?: boolean;\n  message?: string;\n  type?: Validators;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/validator.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Error\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                message\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                stack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/validation/validator.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/validation/validator.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ValidationError'\n                        \n                    \n                        \n                            \n                                    Defined in src/validation/validator.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/validation/validator.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationFunc } from './validationschema';\n\nexport class ValidationError implements Error {\n\n  public readonly name: string = 'ValidationError';\n  public readonly message: string;\n  public readonly stack?: string | undefined;\n\n  constructor(message: string) {\n    this.message = message;\n  }\n}\n\nexport class Validator {\n\n  constructor() { }\n\n  public validate(validationFunc: ValidationFunc, query: any, body: any, params: any): { errors?: any } | undefined {\n    const errors: any[] = [];\n    for (const contentName of validationFunc.requestcontenttype) {\n      const content = contentName === 'query' || {} ? query : contentName === 'body' || {} ? body : params || {};\n      if (!validationFunc.validate(content)) {\n        errors.concat(validationFunc.validate.errors);\n      }\n    }\n    if (errors.length) {\n      return { errors: errors.join(',') };\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationFunc.html":{"url":"interfaces/ValidationFunc.html","title":"interface - ValidationFunc","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ValidationFunc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/validationschema.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        requestcontenttype\n                                \n                                \n                                        validate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        requestcontenttype\n                                    \n                                \n                                \n                                    \n                                        requestcontenttype:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validate\n                                    \n                                \n                                \n                                    \n                                        validate:     ajv.ValidateFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ajv.ValidateFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as ajv from 'ajv';\n\nimport { AjvInstance } from './ajvinstance';\n\nexport enum RequestContentType {\n  QUERY = 'query',\n  PARAMS = 'params',\n  BODY = 'body',\n}\n\nexport interface ValidationFunc {\n  requestcontenttype: string[];\n  validate: ajv.ValidateFunction;\n}\n\nexport class ValidationSchema {\n\n  private ajv: ajv.Ajv;\n\n  // query, params or body\n  private readonly requestContentTypes: string[];\n  private isRequired: boolean = false;\n  private fieldName!: string;\n  private format!: string;\n\n  private constructor(name: string) {\n    this.ajv = AjvInstance.getInstance();\n    this.fieldName = name;\n    this.requestContentTypes = [];\n  }\n\n  public static check(name: string): ValidationSchema {\n    return new ValidationSchema(name);\n  }\n\n  public useRequestContent(...requestContentNames: RequestContentType[]): ValidationSchema {\n    for (const requestContentName of requestContentNames) {\n      this.requestContentTypes.push(requestContentName);\n    }\n    this.requestContentTypes.concat([...requestContentNames]);\n    return this;\n  }\n\n  public getValidationFunc(): ValidationFunc {\n    const schema: any = {\n      type: 'object',\n      properties: {\n\n      },\n    };\n    if (this.isRequired) {\n      schema.required = [this.fieldName];\n      schema.properties[this.fieldName] = {\n        type: 'string',\n        format: this.format,\n      };\n    }\n    return {\n      requestcontenttype: this.requestContentTypes,\n      validate: this.ajv.compile(schema),\n    };\n  }\n\n  public required(): ValidationSchema {\n    this.isRequired = true;\n    return this;\n  }\n\n  public isAlpha(): ValidationSchema {\n    this.format = 'alpha';\n    return this;\n  }\n\n  public isAlphanumeric(): ValidationSchema {\n    this.format = 'alphanumeric';\n    return this;\n  }\n\n  public isAscii(): ValidationSchema {\n    this.format = 'ascii';\n    return this;\n  }\n\n  public isBase64(): ValidationSchema {\n    this.format = 'base64';\n    return this;\n  }\n\n  public isBefore(beforeDate?: string): ValidationSchema {\n    throw('Not implemented yet');\n  }\n\n  public isBoolean(): ValidationSchema {\n    this.format = 'boolean';\n    return this;\n  }\n\n  public isDate(): ValidationSchema {\n    this.format = 'date';\n    return this;\n  }\n\n  public isDecimal(): ValidationSchema {\n    this.format = 'decimal';\n    return this;\n  }\n\n  public isEmail(): ValidationSchema {\n    this.format = 'email';\n    return this;\n  }\n\n  public isISO8601(): ValidationSchema {\n    this.format = 'date';\n    return this;\n  }\n\n  public isJSON(): ValidationSchema {\n    this.format = 'json';\n    return this;\n  }\n\n  public isNumeric(): ValidationSchema {\n    this.format = 'numeric';\n    return this;\n  }\n\n  public isUUID(): ValidationSchema {\n    this.format = 'uuid';\n    return this;\n  }\n\n  public isEmpty(): ValidationSchema {\n    this.format = 'empty';\n    return this;\n  }\n\n  public isNotEmpty(): ValidationSchema {\n    this.format = 'notempty';\n    return this;\n  }\n\n  public withMessage(message: string): ValidationSchema {\n    // TODO: add custom message\n    return this;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationSchema.html":{"url":"classes/ValidationSchema.html","title":"class - ValidationSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/validationschema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ajv\n                            \n                            \n                                    Private\n                                fieldName\n                            \n                            \n                                    Private\n                                format\n                            \n                            \n                                    Private\n                                isRequired\n                            \n                            \n                                    Private\n                                    Readonly\n                                requestContentTypes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                check\n                            \n                            \n                                    Public\n                                getValidationFunc\n                            \n                            \n                                    Public\n                                isAlpha\n                            \n                            \n                                    Public\n                                isAlphanumeric\n                            \n                            \n                                    Public\n                                isAscii\n                            \n                            \n                                    Public\n                                isBase64\n                            \n                            \n                                    Public\n                                isBefore\n                            \n                            \n                                    Public\n                                isBoolean\n                            \n                            \n                                    Public\n                                isDate\n                            \n                            \n                                    Public\n                                isDecimal\n                            \n                            \n                                    Public\n                                isEmail\n                            \n                            \n                                    Public\n                                isEmpty\n                            \n                            \n                                    Public\n                                isISO8601\n                            \n                            \n                                    Public\n                                isJSON\n                            \n                            \n                                    Public\n                                isNotEmpty\n                            \n                            \n                                    Public\n                                isNumeric\n                            \n                            \n                                    Public\n                                isUUID\n                            \n                            \n                                    Public\n                                required\n                            \n                            \n                                    Public\n                                useRequestContent\n                            \n                            \n                                    Public\n                                withMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(name: string)\n                    \n                \n                        \n                            \n                                Defined in src/validation/validationschema.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ajv\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ajv:     ajv.Ajv\n\n                    \n                \n                    \n                        \n                            Type :     ajv.Ajv\n\n                        \n                    \n                        \n                            \n                                    Defined in src/validation/validationschema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fieldName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/validation/validationschema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            format\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        format:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/validation/validationschema.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isRequired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isRequired:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/validation/validationschema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            requestContentTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestContentTypes:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/validation/validationschema.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            check\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        check(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationSchema\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getValidationFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValidationFunc()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationFunc\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAlpha\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isAlpha()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAlphanumeric\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isAlphanumeric()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAscii\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isAscii()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isBase64\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isBase64()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isBefore(beforeDate?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        beforeDate\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationSchema\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isBoolean()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDecimal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isDecimal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isEmail()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:108\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isEmpty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isISO8601\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isISO8601()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isJSON()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isNotEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isNotEmpty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:138\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isNumeric\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isNumeric()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isUUID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isUUID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            required\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        required()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ValidationSchema\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            useRequestContent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        useRequestContent(requestContentNames: RequestContentType[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestContentNames\n                                                        \n                                                                    RequestContentType[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationSchema\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            withMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        withMessage(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validationschema.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationSchema\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as ajv from 'ajv';\n\nimport { AjvInstance } from './ajvinstance';\n\nexport enum RequestContentType {\n  QUERY = 'query',\n  PARAMS = 'params',\n  BODY = 'body',\n}\n\nexport interface ValidationFunc {\n  requestcontenttype: string[];\n  validate: ajv.ValidateFunction;\n}\n\nexport class ValidationSchema {\n\n  private ajv: ajv.Ajv;\n\n  // query, params or body\n  private readonly requestContentTypes: string[];\n  private isRequired: boolean = false;\n  private fieldName!: string;\n  private format!: string;\n\n  private constructor(name: string) {\n    this.ajv = AjvInstance.getInstance();\n    this.fieldName = name;\n    this.requestContentTypes = [];\n  }\n\n  public static check(name: string): ValidationSchema {\n    return new ValidationSchema(name);\n  }\n\n  public useRequestContent(...requestContentNames: RequestContentType[]): ValidationSchema {\n    for (const requestContentName of requestContentNames) {\n      this.requestContentTypes.push(requestContentName);\n    }\n    this.requestContentTypes.concat([...requestContentNames]);\n    return this;\n  }\n\n  public getValidationFunc(): ValidationFunc {\n    const schema: any = {\n      type: 'object',\n      properties: {\n\n      },\n    };\n    if (this.isRequired) {\n      schema.required = [this.fieldName];\n      schema.properties[this.fieldName] = {\n        type: 'string',\n        format: this.format,\n      };\n    }\n    return {\n      requestcontenttype: this.requestContentTypes,\n      validate: this.ajv.compile(schema),\n    };\n  }\n\n  public required(): ValidationSchema {\n    this.isRequired = true;\n    return this;\n  }\n\n  public isAlpha(): ValidationSchema {\n    this.format = 'alpha';\n    return this;\n  }\n\n  public isAlphanumeric(): ValidationSchema {\n    this.format = 'alphanumeric';\n    return this;\n  }\n\n  public isAscii(): ValidationSchema {\n    this.format = 'ascii';\n    return this;\n  }\n\n  public isBase64(): ValidationSchema {\n    this.format = 'base64';\n    return this;\n  }\n\n  public isBefore(beforeDate?: string): ValidationSchema {\n    throw('Not implemented yet');\n  }\n\n  public isBoolean(): ValidationSchema {\n    this.format = 'boolean';\n    return this;\n  }\n\n  public isDate(): ValidationSchema {\n    this.format = 'date';\n    return this;\n  }\n\n  public isDecimal(): ValidationSchema {\n    this.format = 'decimal';\n    return this;\n  }\n\n  public isEmail(): ValidationSchema {\n    this.format = 'email';\n    return this;\n  }\n\n  public isISO8601(): ValidationSchema {\n    this.format = 'date';\n    return this;\n  }\n\n  public isJSON(): ValidationSchema {\n    this.format = 'json';\n    return this;\n  }\n\n  public isNumeric(): ValidationSchema {\n    this.format = 'numeric';\n    return this;\n  }\n\n  public isUUID(): ValidationSchema {\n    this.format = 'uuid';\n    return this;\n  }\n\n  public isEmpty(): ValidationSchema {\n    this.format = 'empty';\n    return this;\n  }\n\n  public isNotEmpty(): ValidationSchema {\n    this.format = 'notempty';\n    return this;\n  }\n\n  public withMessage(message: string): ValidationSchema {\n    // TODO: add custom message\n    return this;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Validator.html":{"url":"classes/Validator.html","title":"class - Validator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Validator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/validation/validator.ts:14\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validate(validationFunc: ValidationFunc, query: any, body: any, params: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/validation/validator.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationFunc\n                                                        \n                                                                    ValidationFunc\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        query\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationFunc } from './validationschema';\n\nexport class ValidationError implements Error {\n\n  public readonly name: string = 'ValidationError';\n  public readonly message: string;\n  public readonly stack?: string | undefined;\n\n  constructor(message: string) {\n    this.message = message;\n  }\n}\n\nexport class Validator {\n\n  constructor() { }\n\n  public validate(validationFunc: ValidationFunc, query: any, body: any, params: any): { errors?: any } | undefined {\n    const errors: any[] = [];\n    for (const contentName of validationFunc.requestcontenttype) {\n      const content = contentName === 'query' || {} ? query : contentName === 'body' || {} ? body : params || {};\n      if (!validationFunc.validate(content)) {\n        errors.concat(validationFunc.validate.errors);\n      }\n    }\n    if (errors.length) {\n      return { errors: errors.join(',') };\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WinstonFileTransportOptions.html":{"url":"interfaces/WinstonFileTransportOptions.html","title":"interface - WinstonFileTransportOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WinstonFileTransportOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logger/filetransport.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        eol\n                                \n                                \n                                        fileName\n                                \n                                \n                                            Optional\n                                        maxFiles\n                                \n                                \n                                            Optional\n                                        maxSize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eol\n                                    \n                                \n                                \n                                    \n                                        eol:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                    \n                                \n                                \n                                    \n                                        fileName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxFiles\n                                    \n                                \n                                \n                                    \n                                        maxFiles:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSize\n                                    \n                                \n                                \n                                    \n                                        maxSize:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fs from 'fs';\nimport * as os from 'os';\n\nimport * as Transport from 'winston-transport';\n\nimport { Configuration } from '../config/config';\nimport { Environment } from '../config/environment';\nimport { info } from 'console';\n\nconst rotate = require('log-rotate');\n\ninterface WinstonFileTransportOptions extends Transport.TransportStreamOptions {\n  fileName: string;\n  maxSize?: number;\n  maxFiles?: number;\n  eol?: string;\n}\n\nexport class WistonFileTransport extends Transport {\n\n  public static readonly defaultOptions: WinstonFileTransportOptions = {\n    fileName: 'application.log',\n    maxSize: 1024 * 1024 * 10, // 10 MB,\n    maxFiles: 10,\n  };\n\n  private static readonly MESSAGE = Symbol.for('message');\n\n  private readonly options: WinstonFileTransportOptions;\n  private readonly maxMsgCount: number;\n  private readonly eol: string;\n\n  private msgCount: number = 1;\n  private msgBuffer: string = '';\n\n  private fileDesc: number = -1;\n  private isWritable: boolean = false;\n  private fileSize: number = 0;\n  private isDisabled: boolean = false;\n  private isClosed: boolean = false;\n\n  constructor(options: WinstonFileTransportOptions) {\n    super(options);\n    this.options = { ...WistonFileTransport.defaultOptions, ...options };\n    this.eol = options.eol || os.EOL;\n    this.maxMsgCount = Configuration.getEnvironment() === Environment.Development ? 1 : 30;\n    this.openLogFile(true);\n    this.addCloseListener();\n  }\n\n  private addCloseListener(): void {\n    process.once('SIGINT', async (): Promise => {\n      this.close();\n    });\n    process.once('SIGTERM', async (): Promise => {\n      this.close();\n    });\n    process.once('SIGUSR2', async (): Promise => {\n      if (!this.isClosed) {\n        // this.close(() => { process.kill(process.pid, 'SIGUSR2'); return true; });\n        this.close();\n      }\n    });\n\n  }\n\n  private openLogFile(determineFileSize: boolean = false): void {\n    fs.open(this.options.fileName, 'a', (error: Error, fileDesc: number) => {\n      if (error) {\n        throw error;\n      }\n      this.isWritable = true;\n      this.fileDesc = fileDesc;\n      if (determineFileSize) {\n        this.fileSize += this.getFileSize();\n      }\n    });\n  }\n\n  private getFileSize(): number {\n    const stats = fs.statSync(this.options.fileName);\n    return stats['size'];\n  }\n\n  private closeLogFile(callback = (error: Error) => {}): void {\n    this.isWritable = false;\n    fs.close(this.fileDesc, callback);\n  }\n\n  public log(info: any, next: () => void): any {\n    this.writeMsg(info[WistonFileTransport.MESSAGE] + this.eol);\n    next();\n    return true;\n  }\n\n  public logString(message: string): any {\n    this.writeMsg(message);\n  }\n\n  public close(callback?: () => {}): void {\n    if (!this.isClosed) {\n      this.isClosed = true;\n      const cbFunc = callback || (() => { this.closeLogFile(() => { process.exitCode = 0; }); });\n      this.writeFile(this.msgBuffer, cbFunc);\n    }\n  }\n\n  private writeFile(buffer: string, callback = () => {}): void {\n    this.isWritable = false;\n    fs.write(this.fileDesc, buffer, null, null, () => {\n      this.isWritable = true;\n      callback();\n    });\n  }\n\n  private writeMsg(message: string): void {\n    if (this.isDisabled) {\n      return;\n    }\n    if (this.fileSize > this.options.maxSize!) {\n      this.fileSize = 0;\n      this.closeLogFile((error: Error) => {\n        if (!error) {\n          rotate(this.options.fileName, { count: this.options.maxFiles }, (error: Error) => {\n            if (error) {\n              this.isDisabled = true;\n            }\n            this.openLogFile();\n          });\n        } else {\n          this.isDisabled = true;\n        }\n      });\n    }\n    this.msgBuffer += message;\n    if (this.msgCount > this.maxMsgCount && this.isWritable) {\n      this.msgCount = 1;\n      const buffer = this.msgBuffer;\n      this.fileSize += this.msgBuffer.length;\n      this.msgBuffer = '';\n      this.writeFile(buffer);\n    } else {\n      this.msgCount += 1;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WinstonLogger.html":{"url":"classes/WinstonLogger.html","title":"class - WinstonLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WinstonLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logger/winstonlogger.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                isDebugLevel\n                            \n                            \n                                    Private\n                                    Static\n                                loggerWrapper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getServerLogger\n                            \n                            \n                                    Static\n                                init\n                            \n                            \n                                    Static\n                                isDebug\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            isDebugLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDebugLevel:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            loggerWrapper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggerWrapper:     LoggerWrapper\n\n                    \n                \n                    \n                        \n                            Type :     LoggerWrapper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:122\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getServerLogger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getServerLogger()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:130\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     literal type\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isDebug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isDebug()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/winstonlogger.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as path from 'path';\n\nimport { Format } from 'logform';\nimport * as morgan from 'morgan';\nimport * as winston from 'winston';\nimport * as Transport from 'winston-transport';\n\nimport { Configuration } from '../config/config';\nimport { Environment } from '../config/environment';\nimport { NextFunc } from '../server/types';\nimport { WistonFileTransport } from './filetransport';\nimport { LogLevels } from './loglevels';\n\nconst fshelper = require('mkdir-recursive');\n\nclass LoggerWrapper {\n\n  public static readonly DEFAULT_PATH = './logs';\n  public static readonly DEFAULT_LOG_LEVEL = 'info';\n\n  private static loggerWrapper: LoggerWrapper;\n\n  private logDir: string;\n\n  private constructor() {\n    this.logDir = this.initDir();\n\n    if (Configuration.getBoolean('ENABLE_WINSTON_LOGGER')) {\n      const logger = this.initLogger();\n      this.replaceConsoleLog(logger, 'log', 'info');\n      this.replaceConsoleLog(logger, 'info');\n      this.replaceConsoleLog(logger, 'warn');\n      this.replaceConsoleLog(logger, 'error');\n      this.replaceConsoleLog(logger, 'debug');\n    }\n  }\n\n  public static getInstance(): LoggerWrapper {\n    if (!LoggerWrapper.loggerWrapper) {\n      LoggerWrapper.loggerWrapper = new LoggerWrapper();\n    }\n    return LoggerWrapper.loggerWrapper;\n  }\n\n  public getServerLogger(): (req: any, res: any, done: NextFunc) => {} {\n    const loggerStream = new WistonFileTransport({\n      fileName: `${this.logDir}${path.sep}server.log`,\n    });\n    return morgan('combined', {\n      stream: { write: message => loggerStream.logString(message) },\n    });\n  }\n\n  private initDir(): string {\n    const dir: string = path.normalize(path.normalize(Configuration.get('LOG_FOLDER') || LoggerWrapper.DEFAULT_PATH));\n    if (dir && dir !== '.') {\n      fshelper.mkdirSync(dir);\n    }\n    return dir || './logs';\n  }\n\n  private initLogger(): winston.Logger {\n    const format: Format = this.getFormat();\n    return winston.createLogger({\n      format,\n      level: Configuration.get('LOG_LEVEL').toLowerCase() || LoggerWrapper.DEFAULT_LOG_LEVEL,\n      exitOnError: false,\n      transports: this.getTransports(format),\n    });\n  }\n\n  private getFormat(): Format {\n    return winston.format.combine(\n      winston.format.timestamp(),\n      winston.format.splat(),\n      winston.format.printf(info => `${info.timestamp} - ${info.level}: ${info.message}`),\n    );\n  }\n\n  private getTransports(format: Format): Transport[] {\n    const transports: Transport[] = [\n      new WistonFileTransport({\n        fileName: `${this.logDir}${path.sep}application.log`,\n      }),\n      new WistonFileTransport({\n        level: 'error',\n        fileName: `${this.logDir}${path.sep}error.log`,\n      }),\n    ];\n\n    if (Configuration.getEnvironment() !== Environment.Production) {\n      transports.push(new winston.transports.Console({\n        level: 'info',\n        handleExceptions: true,\n        format: winston.format.combine(\n          winston.format.colorize(),\n          format,\n        ),\n      }));\n    }\n    return transports;\n  }\n\n  // Replaces console.info, console.log, etc. with function that uses winston logger\n  private replaceConsoleLog(logger: winston.Logger, level: string, consoleLevel?: string): void {\n    (console)[consoleLevel || level] = LogLevels.isLogLevel(level) ? (...args: any[]) => {\n      if (args && args.length) {\n        if (args.length === 1 && typeof args[0] === 'object') {\n          (logger)[level]('%o', args[0]);\n        } else {\n          const [first, ...rest] = args;\n          (logger)[level](first, ...rest);\n        }\n      }\n    } : (...args: any[]) => { };\n  }\n\n}\n\nexport class WinstonLogger {\n\n  private static loggerWrapper: LoggerWrapper;\n  private static isDebugLevel: boolean;\n\n  public static init() {\n    WinstonLogger.loggerWrapper = LoggerWrapper.getInstance();\n    WinstonLogger.isDebugLevel = Configuration.get('LOG_LEVEL').toLowerCase() === 'debug';\n  }\n\n  public static getServerLogger(): (req: any, res: any, done: NextFunc) => {} {\n    return WinstonLogger.loggerWrapper.getServerLogger();\n  }\n\n  public static isDebug(): boolean {\n    return WinstonLogger.isDebugLevel;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WistonFileTransport.html":{"url":"classes/WistonFileTransport.html","title":"class - WistonFileTransport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WistonFileTransport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logger/filetransport.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Transport\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                defaultOptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                eol\n                            \n                            \n                                    Private\n                                fileDesc\n                            \n                            \n                                    Private\n                                fileSize\n                            \n                            \n                                    Private\n                                isClosed\n                            \n                            \n                                    Private\n                                isDisabled\n                            \n                            \n                                    Private\n                                isWritable\n                            \n                            \n                                    Private\n                                    Readonly\n                                maxMsgCount\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                MESSAGE\n                            \n                            \n                                    Private\n                                msgBuffer\n                            \n                            \n                                    Private\n                                msgCount\n                            \n                            \n                                    Private\n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addCloseListener\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Private\n                                closeLogFile\n                            \n                            \n                                    Private\n                                getFileSize\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                logString\n                            \n                            \n                                    Private\n                                openLogFile\n                            \n                            \n                                    Private\n                                writeFile\n                            \n                            \n                                    Private\n                                writeMsg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: WinstonFileTransportOptions)\n                    \n                \n                        \n                            \n                                Defined in src/logger/filetransport.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    WinstonFileTransportOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            defaultOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultOptions:     WinstonFileTransportOptions\n\n                    \n                \n                    \n                        \n                            Type :     WinstonFileTransportOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    fileName: 'application.log',\n    maxSize: 1024 * 1024 * 10, // 10 MB,\n    maxFiles: 10,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/filetransport.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            eol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eol:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/filetransport.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileDesc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileDesc:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/filetransport.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileSize:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/filetransport.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isClosed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/filetransport.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/filetransport.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isWritable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isWritable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/filetransport.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            maxMsgCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxMsgCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/filetransport.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            MESSAGE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MESSAGE:     \n\n                    \n                \n                    \n                        \n                            Default value : Symbol.for('message')\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/filetransport.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            msgBuffer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        msgBuffer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/filetransport.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            msgCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        msgCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/filetransport.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     WinstonFileTransportOptions\n\n                    \n                \n                    \n                        \n                            Type :     WinstonFileTransportOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/logger/filetransport.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addCloseListener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addCloseListener()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/filetransport.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close(callback?: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/filetransport.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            closeLogFile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeLogFile(callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/filetransport.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        callback\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                (error: Error) => {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getFileSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFileSize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/filetransport.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(info: any, next: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/filetransport.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logString(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/filetransport.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            openLogFile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openLogFile(determineFileSize: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/filetransport.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        determineFileSize\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            writeFile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeFile(buffer: string, callback)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/filetransport.ts:108\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        buffer\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                () => {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            writeMsg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        writeMsg(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/logger/filetransport.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as fs from 'fs';\nimport * as os from 'os';\n\nimport * as Transport from 'winston-transport';\n\nimport { Configuration } from '../config/config';\nimport { Environment } from '../config/environment';\nimport { info } from 'console';\n\nconst rotate = require('log-rotate');\n\ninterface WinstonFileTransportOptions extends Transport.TransportStreamOptions {\n  fileName: string;\n  maxSize?: number;\n  maxFiles?: number;\n  eol?: string;\n}\n\nexport class WistonFileTransport extends Transport {\n\n  public static readonly defaultOptions: WinstonFileTransportOptions = {\n    fileName: 'application.log',\n    maxSize: 1024 * 1024 * 10, // 10 MB,\n    maxFiles: 10,\n  };\n\n  private static readonly MESSAGE = Symbol.for('message');\n\n  private readonly options: WinstonFileTransportOptions;\n  private readonly maxMsgCount: number;\n  private readonly eol: string;\n\n  private msgCount: number = 1;\n  private msgBuffer: string = '';\n\n  private fileDesc: number = -1;\n  private isWritable: boolean = false;\n  private fileSize: number = 0;\n  private isDisabled: boolean = false;\n  private isClosed: boolean = false;\n\n  constructor(options: WinstonFileTransportOptions) {\n    super(options);\n    this.options = { ...WistonFileTransport.defaultOptions, ...options };\n    this.eol = options.eol || os.EOL;\n    this.maxMsgCount = Configuration.getEnvironment() === Environment.Development ? 1 : 30;\n    this.openLogFile(true);\n    this.addCloseListener();\n  }\n\n  private addCloseListener(): void {\n    process.once('SIGINT', async (): Promise => {\n      this.close();\n    });\n    process.once('SIGTERM', async (): Promise => {\n      this.close();\n    });\n    process.once('SIGUSR2', async (): Promise => {\n      if (!this.isClosed) {\n        // this.close(() => { process.kill(process.pid, 'SIGUSR2'); return true; });\n        this.close();\n      }\n    });\n\n  }\n\n  private openLogFile(determineFileSize: boolean = false): void {\n    fs.open(this.options.fileName, 'a', (error: Error, fileDesc: number) => {\n      if (error) {\n        throw error;\n      }\n      this.isWritable = true;\n      this.fileDesc = fileDesc;\n      if (determineFileSize) {\n        this.fileSize += this.getFileSize();\n      }\n    });\n  }\n\n  private getFileSize(): number {\n    const stats = fs.statSync(this.options.fileName);\n    return stats['size'];\n  }\n\n  private closeLogFile(callback = (error: Error) => {}): void {\n    this.isWritable = false;\n    fs.close(this.fileDesc, callback);\n  }\n\n  public log(info: any, next: () => void): any {\n    this.writeMsg(info[WistonFileTransport.MESSAGE] + this.eol);\n    next();\n    return true;\n  }\n\n  public logString(message: string): any {\n    this.writeMsg(message);\n  }\n\n  public close(callback?: () => {}): void {\n    if (!this.isClosed) {\n      this.isClosed = true;\n      const cbFunc = callback || (() => { this.closeLogFile(() => { process.exitCode = 0; }); });\n      this.writeFile(this.msgBuffer, cbFunc);\n    }\n  }\n\n  private writeFile(buffer: string, callback = () => {}): void {\n    this.isWritable = false;\n    fs.write(this.fileDesc, buffer, null, null, () => {\n      this.isWritable = true;\n      callback();\n    });\n  }\n\n  private writeMsg(message: string): void {\n    if (this.isDisabled) {\n      return;\n    }\n    if (this.fileSize > this.options.maxSize!) {\n      this.fileSize = 0;\n      this.closeLogFile((error: Error) => {\n        if (!error) {\n          rotate(this.options.fileName, { count: this.options.maxFiles }, (error: Error) => {\n            if (error) {\n              this.isDisabled = true;\n            }\n            this.openLogFile();\n          });\n        } else {\n          this.isDisabled = true;\n        }\n      });\n    }\n    this.msgBuffer += message;\n    if (this.msgCount > this.maxMsgCount && this.isWritable) {\n      this.msgCount = 1;\n      const buffer = this.msgBuffer;\n      this.fileSize += this.msgBuffer.length;\n      this.msgBuffer = '';\n      this.writeFile(buffer);\n    } else {\n      this.msgCount += 1;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            accepts : ^1.3.5\n        \n            ahoi-api-node : https://github.com/sparkassen-hub/ahoi-api-node\n        \n            ajv : ^6.5.4\n        \n            bcrypt : ^3.0.2\n        \n            compression : ^1.7.3\n        \n            content-security-policy-builder : ^2.0.0\n        \n            cookie : ^0.3.1\n        \n            cors : ^2.8.4\n        \n            dotenv : ^6.1.0\n        \n            encodeurl : ^1.0.2\n        \n            errorhandler : ^1.5.0\n        \n            express : ^4.16.4\n        \n            express-validator : ^5.3.0\n        \n            fastify : ^1.13.0\n        \n            fastify-compress : ^0.7.0\n        \n            fastify-cors : ^0.2.0\n        \n            fastify-file-upload : ^0.1.1\n        \n            fastify-formbody : ^2.0.1\n        \n            fastify-static : ^0.14.0\n        \n            jsonwebtoken : ^8.3.0\n        \n            lodash : ^4.17.10\n        \n            log-rotate : ^0.2.8\n        \n            mime : ^2.3.1\n        \n            mkdir-recursive : ^0.4.0\n        \n            mongoose : 5.0.0\n        \n            mongoose-encryption : ^2.0.1\n        \n            morgan : ^1.9.0\n        \n            multer : ^1.4.1\n        \n            nodemailer : ^4.6.8\n        \n            passport : ^0.4.0\n        \n            passport-local : ^1.0.0\n        \n            range-parser : ^1.2.0\n        \n            safe-stable-stringify : ^1.1.0\n        \n            sign : 0.0.0\n        \n            statuses : ^1.5.0\n        \n            tungus : https://github.com/anhoev/tungus\n        \n            type-is : ^1.6.16\n        \n            uuid : ^3.3.2\n        \n            winston : ^3.1.0\n        \n            typegoose : ^5.4.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Environment   (src/.../environment.ts)\n                        \n                        \n                            ParamType   (src/.../parameter.decorator.ts)\n                        \n                        \n                            RequestContentType   (src/.../validationschema.ts)\n                        \n                        \n                            Type   (src/.../datatype.ts)\n                        \n                        \n                            Validators   (src/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/environment.ts\n    \n        \n            \n                \n                    \n                        \n                        Environment\n                    \n                \n                        \n                            \n                                 Development\n                            \n                        \n                        \n                            \n                                Value : development\n                            \n                        \n                        \n                            \n                                 Test\n                            \n                        \n                        \n                            \n                                Value : test\n                            \n                        \n                        \n                            \n                                 Staging\n                            \n                        \n                        \n                            \n                                Value : staging\n                            \n                        \n                        \n                            \n                                 Production\n                            \n                        \n                        \n                            \n                                Value : production\n                            \n                        \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : other\n                            \n                        \n            \n        \n\n    src/decorators/internal/parameter.decorator.ts\n    \n        \n            \n                \n                    \n                        \n                        ParamType\n                    \n                \n                        \n                            \n                                 QUERYPARAM\n                            \n                        \n                        \n                            \n                                Value : queryparam\n                            \n                        \n                        \n                            \n                                 PATHPARAM\n                            \n                        \n                        \n                            \n                                Value : pathparam\n                            \n                        \n                        \n                            \n                                 REQUEST\n                            \n                        \n                        \n                            \n                                Value : request\n                            \n                        \n                        \n                            \n                                 RESPONSE\n                            \n                        \n                        \n                            \n                                Value : response\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n    src/validation/validationschema.ts\n    \n        \n            \n                \n                    \n                        \n                        RequestContentType\n                    \n                \n                        \n                            \n                                 QUERY\n                            \n                        \n                        \n                            \n                                Value : query\n                            \n                        \n                        \n                            \n                                 PARAMS\n                            \n                        \n                        \n                            \n                                Value : params\n                            \n                        \n                        \n                            \n                                 BODY\n                            \n                        \n                        \n                            \n                                Value : body\n                            \n                        \n            \n        \n\n    src/util/datatype.ts\n    \n        \n            \n                \n                    \n                        \n                        Type\n                    \n                \n                        \n                            \n                                 Array\n                            \n                        \n                        \n                            \n                                Value : array\n                            \n                        \n                        \n                            \n                                 Boolean\n                            \n                        \n                        \n                            \n                                Value : boolean\n                            \n                        \n                        \n                            \n                                 Date\n                            \n                        \n                        \n                            \n                                Value : date\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 Function\n                            \n                        \n                        \n                            \n                                Value : function\n                            \n                        \n                        \n                            \n                                 JsonString\n                            \n                        \n                        \n                            \n                                Value : jsonstring\n                            \n                        \n                        \n                            \n                                 Number\n                            \n                        \n                        \n                            \n                                Value : number\n                            \n                        \n                        \n                            \n                                 Object\n                            \n                        \n                        \n                            \n                                Value : object\n                            \n                        \n                        \n                            \n                                 RegExp\n                            \n                        \n                        \n                            \n                                Value : regexp\n                            \n                        \n                        \n                            \n                                 String\n                            \n                        \n                        \n                            \n                                Value : string\n                            \n                        \n                        \n                            \n                                 Undefined\n                            \n                        \n                        \n                            \n                                Value : undefined\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                Value : unknown\n                            \n                        \n            \n        \n\n    src/validation/validators.ts\n    \n        \n            \n                \n                    \n                        \n                        Validators\n                    \n                \n                    \n                        \n                            The supported validators are an subset of these\nvalidators.\n\n                        \n                    \n                        \n                            \n                                 Alpha\n                            \n                        \n                        \n                            \n                                Value : isAlpha\n                            \n                        \n                        \n                            \n                                 Alphanumeric\n                            \n                        \n                        \n                            \n                                Value : isAlphanumeric\n                            \n                        \n                        \n                            \n                                 Ascii\n                            \n                        \n                        \n                            \n                                Value : isAscii\n                            \n                        \n                        \n                            \n                                 Base64\n                            \n                        \n                        \n                            \n                                Value : isBase64\n                            \n                        \n                        \n                            \n                                 Before\n                            \n                        \n                        \n                            \n                                Value : isBefore\n                            \n                        \n                        \n                            \n                                 Boolean\n                            \n                        \n                        \n                            \n                                Value : isBoolean\n                            \n                        \n                        \n                            \n                                 Decimal\n                            \n                        \n                        \n                            \n                                Value : isDecimal\n                            \n                        \n                        \n                            \n                                 Email\n                            \n                        \n                        \n                            \n                                Value : isEmail\n                            \n                        \n                        \n                            \n                                 Float\n                            \n                        \n                        \n                            \n                                Value : isFloat\n                            \n                        \n                        \n                            \n                                 ISO8601\n                            \n                        \n                        \n                            \n                                Value : isISO8601\n                            \n                        \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                Value : isJSON\n                            \n                        \n                        \n                            \n                                 Numeric\n                            \n                        \n                        \n                            \n                                Value : isNumeric\n                            \n                        \n                        \n                            \n                                 UUID\n                            \n                        \n                        \n                            \n                                Value : isUUID\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONNECT   (src/.../methoddecorators.ts)\n                        \n                        \n                            DELETE   (src/.../methoddecorators.ts)\n                        \n                        \n                            GET   (src/.../methoddecorators.ts)\n                        \n                        \n                            HEAD   (src/.../methoddecorators.ts)\n                        \n                        \n                            OPTIONS   (src/.../methoddecorators.ts)\n                        \n                        \n                            PATCH   (src/.../methoddecorators.ts)\n                        \n                        \n                            PATHPARAM   (src/.../parameterdecorators.ts)\n                        \n                        \n                            POST   (src/.../methoddecorators.ts)\n                        \n                        \n                            PUT   (src/.../methoddecorators.ts)\n                        \n                        \n                            QUERYPARAM   (src/.../parameterdecorators.ts)\n                        \n                        \n                            REQUEST   (src/.../parameterdecorators.ts)\n                        \n                        \n                            RESPONSE   (src/.../parameterdecorators.ts)\n                        \n                        \n                            ROUTE   (src/.../classdecorator.ts)\n                        \n                        \n                            TRACE   (src/.../methoddecorators.ts)\n                        \n                        \n                            USER   (src/.../parameterdecorators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/methoddecorators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONNECT\n                            \n                            \n                        \n                    \n                \n                \n                    \nCONNECT(route, options?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DELETE\n                            \n                            \n                        \n                    \n                \n                \n                    \nDELETE(route, options?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GET\n                            \n                            \n                        \n                    \n                \n                \n                    \nGET(route, options?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEAD\n                            \n                            \n                        \n                    \n                \n                \n                    \nHEAD(route, options?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OPTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \nOPTIONS(route, options?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PATCH\n                            \n                            \n                        \n                    \n                \n                \n                    \nPATCH(route, options?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POST\n                            \n                            \n                        \n                    \n                \n                \n                    \nPOST(route, options?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PUT\n                            \n                            \n                        \n                    \n                \n                \n                    \nPUT(route, options?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TRACE\n                            \n                            \n                        \n                    \n                \n                \n                    \nTRACE(route, options?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/decorators/parameterdecorators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PATHPARAM\n                            \n                            \n                        \n                    \n                \n                \n                    \nPATHPARAM(paramName, validation?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paramName\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validation\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            QUERYPARAM\n                            \n                            \n                        \n                    \n                \n                \n                    \nQUERYPARAM(paramName, validation?)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paramName\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        validation\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REQUEST\n                            \n                            \n                        \n                    \n                \n                \n                    \nREQUEST()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RESPONSE\n                            \n                            \n                        \n                    \n                \n                \n                    \nRESPONSE()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER\n                            \n                            \n                        \n                    \n                \n                \n                    \nUSER()\n                    \n                \n\n\n\n\n            \n        \n\n    src/decorators/classdecorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTE\n                            \n                            \n                        \n                    \n                \n                \n                    \nROUTE(route)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPreconfigured App service based on Express or Fastify\n\nUsage\nsee AHOI demo app\nDocumentation\nFollows...\nLicense\nLicensed under MIT.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\n\nCopyright (c) Microsoft Corporation. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    44 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DefaultHeaders   (src/.../types.ts)\n                        \n                        \n                            ExpressMiddleware   (src/.../types.ts)\n                        \n                        \n                            FastifyMiddleware   (src/.../types.ts)\n                        \n                        \n                            FastifyReq   (src/.../types.ts)\n                        \n                        \n                            FastifyResp   (src/.../types.ts)\n                        \n                        \n                            FastifyServer   (src/.../types.ts)\n                        \n                        \n                            json   (src/.../jwt.service.ts)\n                        \n                        \n                            Middleware   (src/.../types.ts)\n                        \n                        \n                            NextFunc   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server/types.ts\n    \n        \n            \n                \n                    \n                        \n                        DefaultHeaders\n                    \n                \n                \n                    \n                        DefaultHeaders:     literal type\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ExpressMiddleware\n                    \n                \n                \n                    \n                        ExpressMiddleware:     RequestHandler | ErrorRequestHandler\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        FastifyMiddleware\n                    \n                \n                \n                    \n                        FastifyMiddleware:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        FastifyReq\n                    \n                \n                \n                    \n                        FastifyReq:     FastifyRequest\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        FastifyResp\n                    \n                \n                \n                    \n                        FastifyResp:     FastifyReply\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        FastifyServer\n                    \n                \n                \n                    \n                        FastifyServer:     FastifyInstance\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Middleware\n                    \n                \n                \n                    \n                        Middleware:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        NextFunc\n                    \n                \n                \n                    \n                        NextFunc:     function\n\n                    \n                \n            \n        \n\n    src/auth/services/jwt.service.ts\n    \n        \n            \n                \n                    \n                        \n                        json\n                    \n                \n                \n                    \n                        json:     object\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthUserModel   (src/.../authuser.ts)\n                        \n                        \n                            contentSecurityPolicyBuilder   (src/.../abstractserver.ts)\n                        \n                        \n                            encodeUrl   (src/.../responsecompat.ts)\n                        \n                        \n                            fshelper   (src/.../winstonlogger.ts)\n                        \n                        \n                            rotate   (src/.../filetransport.ts)\n                        \n                        \n                            sign   (src/.../responsecompat.ts)\n                        \n                        \n                            Validator_Alpha   (src/.../validators.ts)\n                        \n                        \n                            Validator_Alphanumeric   (src/.../validators.ts)\n                        \n                        \n                            Validator_AlphanumericRequired   (src/.../validators.ts)\n                        \n                        \n                            Validator_AlphaRequired   (src/.../validators.ts)\n                        \n                        \n                            Validator_Ascii   (src/.../validators.ts)\n                        \n                        \n                            Validator_AsciiRequired   (src/.../validators.ts)\n                        \n                        \n                            Validator_Base64   (src/.../validators.ts)\n                        \n                        \n                            Validator_Base64Required   (src/.../validators.ts)\n                        \n                        \n                            Validator_Bool   (src/.../validators.ts)\n                        \n                        \n                            Validator_BoolRequired   (src/.../validators.ts)\n                        \n                        \n                            Validator_Date   (src/.../validators.ts)\n                        \n                        \n                            Validator_DateRequired   (src/.../validators.ts)\n                        \n                        \n                            Validator_Decimal   (src/.../validators.ts)\n                        \n                        \n                            Validator_DecimalRequired   (src/.../validators.ts)\n                        \n                        \n                            Validator_Email   (src/.../validators.ts)\n                        \n                        \n                            Validator_EmailRequired   (src/.../validators.ts)\n                        \n                        \n                            Validator_ISO8601   (src/.../validators.ts)\n                        \n                        \n                            Validator_ISO8601Required   (src/.../validators.ts)\n                        \n                        \n                            Validator_Json   (src/.../validators.ts)\n                        \n                        \n                            Validator_JSONRequired   (src/.../validators.ts)\n                        \n                        \n                            Validator_NotEmpty   (src/.../validators.ts)\n                        \n                        \n                            Validator_Numeric   (src/.../validators.ts)\n                        \n                        \n                            Validator_NumericRequired   (src/.../validators.ts)\n                        \n                        \n                            Validator_Required   (src/.../validators.ts)\n                        \n                        \n                            Validator_UUID   (src/.../validators.ts)\n                        \n                        \n                            Validator_UUIDRequired   (src/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/models/authuser.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AuthUserModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AuthUserModel:     \n\n                    \n                \n                    \n                        \n                            Default value : new AuthUser().getModelForClass(AuthUser)\n                        \n                    \n\n\n            \n        \n\n    src/server/abstractserver.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            contentSecurityPolicyBuilder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        contentSecurityPolicyBuilder:     \n\n                    \n                \n                    \n                        \n                            Default value : require('content-security-policy-builder')\n                        \n                    \n\n\n            \n        \n\n    src/server/fastify/fastifycompat/extended/responsecompat.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            encodeUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        encodeUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : require('encodeurl')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sign\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sign:     \n\n                    \n                \n                    \n                        \n                            Default value : require('sign')\n                        \n                    \n\n\n            \n        \n\n    src/logger/winstonlogger.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fshelper\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fshelper:     \n\n                    \n                \n                    \n                        \n                            Default value : require('mkdir-recursive')\n                        \n                    \n\n\n            \n        \n\n    src/logger/filetransport.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotate:     \n\n                    \n                \n                    \n                        \n                            Default value : require('log-rotate')\n                        \n                    \n\n\n            \n        \n\n    src/decorators/validators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_Alpha\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_Alpha:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { type: Validators.Alpha }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is empty or contains only letters (a-zA-Z).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_Alphanumeric\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_Alphanumeric:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { type: Validators.Alphanumeric }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is empty or contains only letters and numbers.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_AlphanumericRequired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_AlphanumericRequired:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true, type: Validators.Alphanumeric }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty and contains only letters and numbers.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_AlphaRequired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_AlphaRequired:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true, type: Validators.Alpha }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty and contains only letters (a-zA-Z).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_Ascii\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_Ascii:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { type: Validators.Ascii }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is empty or contains ASCII chars only.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_AsciiRequired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_AsciiRequired:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true, type: Validators.Ascii }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty and contains ASCII chars only.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_Base64\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_Base64:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { type: Validators.Base64 }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is empty or base64 encoded.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_Base64Required\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_Base64Required:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true, type: Validators.Base64 }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty and base64 encoded.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_Bool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_Bool:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { type: Validators.Boolean }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is empty or a boolean.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_BoolRequired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_BoolRequired:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true, type: Validators.Boolean }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty and a boolean.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_Date\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_Date:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { type: Validators.ISO8601 }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is empty or is a valid ISO 8601 date.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_DateRequired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_DateRequired:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true, type: Validators.ISO8601 }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty and is a valid ISO 8601 date.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_Decimal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_Decimal:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { type: Validators.Decimal }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is empty or represents a decimal number.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_DecimalRequired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_DecimalRequired:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true, type: Validators.Decimal }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty and represents a decimal number.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_Email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_Email:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { type: Validators.Email }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is empty or is an email.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_EmailRequired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_EmailRequired:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true, type: Validators.Email }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty and is an email.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_ISO8601\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_ISO8601:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { type: Validators.ISO8601 }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is empty or is a valid ISO 8601 date.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_ISO8601Required\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_ISO8601Required:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true, type: Validators.ISO8601 }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty and is a valid ISO 8601 date.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_Json\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_Json:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { type: Validators.JSON }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is empty or is valid JSON (simple RegExp check).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_JSONRequired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_JSONRequired:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true, type: Validators.JSON }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty and is valid JSON (simple RegExp check).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_NotEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_NotEmpty:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty if it exists.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_Numeric\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_Numeric:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { type: Validators.Numeric }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is empty or contains only numbers.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_NumericRequired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_NumericRequired:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true, type: Validators.Numeric }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty and contains only numbers.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_Required\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_Required:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true }\n                        \n                    \n\n                \n                    \n                        Check if the parameter exist (with any value or empty).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_UUID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_UUID:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { type: Validators.UUID }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is empty or is a UUID.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Validator_UUIDRequired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Validator_UUIDRequired:     Validation\n\n                    \n                \n                    \n                        \n                            Type :     Validation\n\n                        \n                    \n                    \n                        \n                            Default value : { required: true, type: Validators.UUID }\n                        \n                    \n\n                \n                    \n                        Check if the parameter is not empty and is a UUID.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
